"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/wave-audio-path-player";
exports.ids = ["vendor-chunks/wave-audio-path-player"];
exports.modules = {

/***/ "(ssr)/./node_modules/wave-audio-path-player/dist/wave-audio-path-player.es.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/wave-audio-path-player/dist/wave-audio-path-player.es.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AudioPathPlayer: () => (/* binding */ AudioPathPlayer)\n/* harmony export */ });\nvar __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\nconst getAudioData = (e) => {\n  window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  const a = new AudioContext();\n  return fetch(e).then((e2) => e2.arrayBuffer()).then((e2) => a.decodeAudioData(e2)).catch((e2) => {\n    console.error(e2);\n  });\n}, linearPath = (e, a) => {\n  var _a, _b, _c;\n  const { channel: t = 0, samples: v = e.length, height: h = 100, width: r = 800, top: s = 0, left: l = 0, type: i = \"steps\", paths: $ = [{ d: \"Q\", sx: 0, sy: 0, x: 50, y: 100, ex: 100, ey: 0 }], animation: o = false, animationframes: n = 10, normalize: b = true } = a;\n  var a = getFramesData(e, t, o, n), e = getFilterData(a, v), w = b ? getNormalizeData(e) : e;\n  let c = \"\";\n  var p, f, g = i != \"bars\" ? (h + 2 * s) / 2 : h + s, m = r / v, y = $.length, u = i == \"mirror\" ? 2 * y : y, A = w.length;\n  for (let n2 = 0; n2 < A; n2++) {\n    0 < n2 && (p = c.length, f = c.charAt(p - 1), c += f == \";\" || p === 0 ? \" M 0 0 ;\" : \";\");\n    let s2 = -9999, o2 = -9999;\n    for (let r2 = 0; r2 < v; r2++) {\n      var M = i == \"bars\" || r2 % 2 ? 1 : -1;\n      let t2 = 1;\n      for (let e2 = 0; e2 < u; e2++) {\n        let a2 = e2;\n        e2 >= y && (a2 = e2 - y, t2 = -1), $[a2].minshow = (_a = $[a2].minshow) != null ? _a : 0, $[a2].maxshow = (_b = $[a2].maxshow) != null ? _b : 1, $[a2].normalize = (_c = $[a2].normalize) != null ? _c : false;\n        var d = $[a2].normalize ? 1 : w[n2][r2];\n        if ($[a2].minshow <= w[n2][r2] && $[a2].maxshow >= w[n2][r2])\n          switch ($[a2].d) {\n            case \"L\":\n              var D = r2 * m + m * $[a2].sx / 100 + l, x = g + d * $[a2].sy / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2, k = r2 * m + m * $[a2].ex / 100 + l, z = g + d * $[a2].ey / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2;\n              D === s2 && x === o2 || (c += `M ${D} ${x} `), c += `L ${k} ${z} `, s2 = k, o2 = z;\n              break;\n            case \"H\":\n              D = r2 * m + m * $[a2].sx / 100 + l, x = g + d * $[a2].y / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2, k = r2 * m + m * $[a2].ex / 100 + l;\n              D === s2 && x === o2 || (c += `M ${D} ${x} `), c += `H ${k} `, s2 = k, o2 = x;\n              break;\n            case \"V\":\n              var z = r2 * m + m * $[a2].x / 100 + l, C = g + d * $[a2].sy / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2, F = g + d * $[a2].ey / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2;\n              z === s2 && C === o2 || (c += `M ${z} ${C} `), c += `V ${F} `, s2 = z, o2 = F;\n              break;\n            case \"C\":\n              var C = r2 * m + m * $[a2].sx / 100 + l, F = g - g * $[a2].sy / 100 * M, Q = r2 * m + m * $[a2].x / 100 + l, P = g + d * $[a2].y / 100 * (i != \"bars\" ? h : 2 * h) * -M * t2, L = r2 * m + m * $[a2].ex / 100 + l, Z = g - g * $[a2].ey / 100 * M;\n              C === s2 && F === o2 || (c += `M ${C} ${F} `), c += `C ${C} ${F} ${Q} ${P} ${L} ${Z} `, s2 = L, o2 = Z;\n              break;\n            case \"Q\":\n              var Q = r2 * m + m * $[a2].sx / 100 + l, P = g + d * $[a2].sy / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2, L = r2 * m + m * $[a2].x / 100 + l, Z = g + d * $[a2].y / 100 * (i != \"bars\" ? h : 2 * h) * -M * t2, N = r2 * m + m * $[a2].ex / 100 + l, H = g + d * $[a2].ey / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2;\n              Q === s2 && P === o2 || (c += `M ${Q} ${P} `), c += `Q ${L} ${Z} ${N} ${H} `, s2 = N, o2 = H;\n              break;\n            case \"A\": {\n              var N = r2 * m + m * $[a2].sx / 100 + l, H = g + d * $[a2].sy / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2, V = r2 * m + m * $[a2].ex / 100 + l, B = g + d * $[a2].ey / 100 * (i != \"bars\" ? h / 2 : h) * -M * t2, I = (N === s2 && H === o2 || (c += `M ${N} ${H} `), $[a2].rx * m / 100), R = $[a2].ry * m / 100;\n              let e3 = $[a2].sweep;\n              M == -1 && (e3 = e3 == 1 ? 0 : 1), t2 == -1 && (e3 = e3 == 1 ? 0 : 1), c += `A ${I} ${R} ${$[a2].angle} ${$[a2].arc} ${e3} ${V} ${B} `, s2 = V, o2 = B;\n              break;\n            }\n            case \"Z\":\n              c += \"Z \";\n          }\n      }\n    }\n  }\n  return c;\n}, getFramesData = (e, a, t, r) => {\n  const s = e.getChannelData(a), o = [];\n  if (t) {\n    var n = e.sampleRate / r;\n    for (let e2 = 0; e2 < s.length; e2 += n) {\n      var h = s.slice(e2, e2 + n);\n      o.push(h);\n    }\n  } else\n    o.push(s);\n  return o;\n}, getFilterData = (r, a) => {\n  const e = [];\n  var s = r.length;\n  for (let t = 0; t < s; t++) {\n    var o = Math.floor(r[t].length / a);\n    const h = [];\n    for (let e2 = 0; e2 < a; e2++) {\n      var n = o * e2;\n      let a2 = 0;\n      for (let e3 = 0; e3 < o; e3++)\n        a2 += Math.abs(r[t][n + e3]);\n      h.push(a2 / o);\n    }\n    e.push(h);\n  }\n  return e;\n}, getNormalizeData = (a) => {\n  const t = [];\n  var r = a.length;\n  for (let e = 0; e < r; e++) {\n    var s = Math.max(...a[e]);\n    t.push(s);\n  }\n  const o = Math.pow(Math.max(...t), -1), n = [];\n  for (let e = 0; e < r; e++) {\n    var h = a[e].map((e2) => e2 * o);\n    n.push(h);\n  }\n  return n;\n};\nclass AudioPathPlayer extends HTMLElement {\n  constructor() {\n    super();\n    __publicField(this, \"loadSong\", () => {\n      this.durationContainer.textContent = this.calculateTime(this.audio.duration);\n      this.seekSlider.max = this.audio.duration;\n      this.svg.unpauseAnimations();\n      this.animationsvg.setAttribute(\"dur\", \"\" + this.audio.duration + \"s\");\n      if (!this.animation) {\n        this.animationsvgx.setAttribute(\"dur\", \"\" + this.audio.duration + \"s\");\n      }\n      this.svg.pauseAnimations();\n      this.svg.setCurrentTime(0);\n    });\n    __publicField(this, \"playPause\", () => {\n      if (this.audio.paused) {\n        this.audio.play();\n        this.svg.unpauseAnimations();\n        this.path2.style.display = \"block\";\n        this.playPathButton.setAttribute(\"d\", this.pausePath);\n        this.raf = requestAnimationFrame(this.whilePlaying);\n      } else {\n        this.audio.pause();\n        this.svg.pauseAnimations();\n        this.playPathButton.setAttribute(\"d\", this.playPath);\n        cancelAnimationFrame(this.raf);\n      }\n    });\n    __publicField(this, \"sliderInput\", () => {\n      this.path2.style.display = \"block\";\n      this.currentTimeContainer.textContent = this.calculateTime(this.seekSlider.value);\n      this.svg.setCurrentTime(this.seekSlider.value);\n      if (!this.audio.paused) {\n        cancelAnimationFrame(this.raf);\n      }\n    });\n    __publicField(this, \"sliderChange\", () => {\n      this.audio.currentTime = this.seekSlider.value;\n      this.path2.style.display = \"block\";\n      this.svg.setCurrentTime(this.seekSlider.value);\n      if (!this.audio.paused) {\n        this.raf = requestAnimationFrame(this.whilePlaying);\n      }\n    });\n    __publicField(this, \"onFinish\", () => {\n      this.seekSlider.value = this.seekSlider.max;\n      this.svg.setCurrentTime(this.audio.duration);\n      this.svg.pauseAnimations();\n      this.playPathButton.setAttribute(\"d\", this.playPath);\n      cancelAnimationFrame(this.raf);\n    });\n    __publicField(this, \"whilePlaying\", () => {\n      this.seekSlider.value = this.audio.currentTime;\n      this.currentTimeContainer.textContent = this.calculateTime(this.seekSlider.value);\n      this.svg.setCurrentTime(this.seekSlider.value);\n      this.raf = requestAnimationFrame(this.whilePlaying);\n    });\n    __publicField(this, \"svgDraw\", () => {\n      const path = linearPath(this.audioData, this.options);\n      if (!this.animation) {\n        this.path1.setAttribute(\"d\", path);\n        this.path2.setAttribute(\"d\", path);\n      } else {\n        this.animationsvg.setAttribute(\"values\", path);\n      }\n      this.svg.setCurrentTime(this.seekSlider.value);\n    });\n    __publicField(this, \"calculateTime\", (secs) => {\n      const minutes = Math.floor(secs / 60);\n      const seconds = Math.floor(secs % 60);\n      const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n      return `${minutes}:${returnedSeconds}`;\n    });\n    this.shadowDOM = this.attachShadow({ mode: \"open\" });\n    this.audioData = null;\n    if (this.hasAttribute(\"wave-options\")) {\n      this.options = JSON.parse(this.attributes[\"wave-options\"].value);\n      this.options.width = parseInt(this.attributes[\"wave-width\"].value);\n      this.options.height = parseInt(this.attributes[\"wave-height\"].value);\n    } else {\n      this.options = {\n        samples: 40,\n        type: \"mirror\",\n        width: parseInt(this.attributes[\"wave-width\"].value),\n        height: parseInt(this.attributes[\"wave-height\"].value),\n        paths: [\n          { d: \"V\", sy: 0, x: 50, ey: 100 }\n        ]\n      };\n    }\n    if (this.options.hasOwnProperty(\"animation\")) {\n      this.animation = this.options.animation;\n    } else {\n      this.animation = false;\n    }\n    this.playPath = \"M8.5 8.7c0-1.7 1.2-2.4 2.6-1.5l14.4 8.3c1.4.8 1.4 2.2 0 3l-14.4 8.3c-1.4.8-2.6.2-2.6-1.5V8.7z\";\n    this.pausePath = \"M9.2 25c0 .5.4 1 .9 1h3.6c.5 0 .9-.4.9-1V9c0-.5-.4-.9-.9-.9h-3.6c-.4-.1-.9.3-.9.9v16zm11-17c-.5 0-1 .4-1 .9V25c0 .5.4 1 1 1h3.6c.5 0 1-.4 1-1V9c0-.5-.4-.9-1-.9 0-.1-3.6-.1-3.6-.1z\";\n    this.playPathButton = null;\n    this.svg = null;\n    this.path1 = null;\n    this.path2 = null;\n    this.animationsvg = null;\n    this.animationsvgx = null;\n    this.audio = null;\n    this.durationContainer = null;\n    this.seekSlider = null;\n    this.currentTimeContainer = null;\n    this.playIconContainer = null;\n    this.raf = null;\n  }\n  initComponent() {\n    this.playPathButton = this.shadowDOM.getElementById(\"playPathButton\");\n    this.svg = this.shadowDOM.getElementById(\"svg\");\n    this.path1 = this.shadowDOM.getElementById(\"path1\");\n    this.path2 = this.shadowDOM.getElementById(\"path2\");\n    this.animationsvg = this.shadowDOM.getElementById(\"animationsvg\");\n    this.animationsvgx = this.shadowDOM.getElementById(\"animationsvgx\");\n    this.audio = this.shadowDOM.querySelector(\"audio\");\n    this.durationContainer = this.shadowDOM.getElementById(\"duration\");\n    this.seekSlider = this.shadowDOM.getElementById(\"seek-slider\");\n    this.currentTimeContainer = this.shadowDOM.getElementById(\"current-time\");\n    this.playIconContainer = this.shadowDOM.getElementById(\"play\");\n    this.svg.pauseAnimations();\n    if (this.audio.readyState > 0) {\n      this.loadSong();\n    } else {\n      this.audio.addEventListener(\"loadedmetadata\", this.loadSong);\n    }\n    this.audio.addEventListener(\"ended\", this.onFinish);\n    this.seekSlider.addEventListener(\"input\", this.sliderInput);\n    this.seekSlider.addEventListener(\"change\", this.sliderChange);\n    this.playIconContainer.addEventListener(\"click\", this.playPause);\n  }\n  async audioPath() {\n    this.audioData = await getAudioData(this.attributes.src.value);\n    this.svgDraw();\n  }\n  mapComponentAttributes() {\n    const attributesMapping = [\n      \"src\",\n      \"wave-height\",\n      \"wave-width\",\n      \"color\",\n      \"wave-options\",\n      \"wave-color\",\n      \"wave-progress-color\",\n      \"wave-slider\"\n    ];\n    attributesMapping.forEach((key) => {\n      if (!this.attributes[key]) {\n        this.attributes[key] = { value: null };\n      }\n    });\n  }\n  connectedCallback() {\n    this.mapComponentAttributes();\n    this.render();\n    this.initComponent();\n    this.audioPath();\n  }\n  render() {\n    this.shadowDOM.innerHTML = `\n            ${this.templateCss()}\n            ${this.template()}\n        `;\n  }\n  template() {\n    let html = `\n        <div part=\"player\" class=\"player\">\n            <button id=\"play\" part=\"play\">\n                <svg viewBox=\"0 0 34 34\" width=\"34\" height=\"34\" part=\"button\">\n                    <path id=\"playPathButton\" d=\"M8.5 8.7c0-1.7 1.2-2.4 2.6-1.5l14.4 8.3c1.4.8 1.4 2.2 0 3l-14.4 8.3c-1.4.8-2.6.2-2.6-1.5V8.7z\"></path>\n                    <!--<path fill=\"currentColor\" d=\"M9.2 25c0 .5.4 1 .9 1h3.6c.5 0 .9-.4.9-1V9c0-.5-.4-.9-.9-.9h-3.6c-.4-.1-.9.3-.9.9v16zm11-17c-.5 0-1 .4-1 .9V25c0 .5.4 1 1 1h3.6c.5 0 1-.4 1-1V9c0-.5-.4-.9-1-.9 0-.1-3.6-.1-3.6-.1z\"></path>-->\n                </svg>\n            </button>\n        <div id=\"current-time\" part=\"currenttime\">0:00</div>\n        <div id=\"slider\" part=\"slider\">\n            <svg id=\"svg\" part=\"svg\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 ${this.attributes[\"wave-width\"].value} ${this.attributes[\"wave-height\"].value}\" width=\"${this.attributes[\"wave-width\"].value}\" height=\"${this.attributes[\"wave-height\"].value}\">\n        `;\n    if (!this.animation) {\n      html += `\n            <defs>\n                <clipPath id=\"left-to-right-x\">\n                <rect x=\"-1\" y=\"-100\" width=\"${parseInt(this.attributes[\"wave-width\"].value) + 2}\" height=\"${parseInt(this.attributes[\"wave-height\"].value) + 200}\" >\n                    <animate id=\"animationsvgx\" attributeName=\"x\" values=\"-1;${parseInt(this.attributes[\"wave-width\"].value) + 2}\" dur=\"99999s\" fill=\"freeze\" />   \n                </rect>\n                </clipPath>\n                <clipPath id=\"left-to-right\">\n                <rect x=\"-${parseInt(this.attributes[\"wave-width\"].value) + 2}\" y=\"-100\" width=\"${parseInt(this.attributes[\"wave-width\"].value) + 2}\" height=\"${parseInt(this.attributes[\"wave-height\"].value) + 200}\" >\n                    <animate id=\"animationsvg\" attributeName=\"x\" values=\"-${parseInt(this.attributes[\"wave-width\"].value) + 2};-1\" dur=\"99999s\" fill=\"freeze\" />   \n                </rect>\n                </clipPath>    \n            </defs> \n            <path id=\"path1\" part=\"path1\"  stroke-width=\"2\" d=\"\" clip-path=\"url(#left-to-right-x)\"></path>\n            <path id=\"path2\" part=\"path2\"  stroke-width=\"2\" d=\"\" clip-path=\"url(#left-to-right)\" style=\"display:none;\"></path>`;\n    } else {\n      html += `\n            <path id=\"path1\" part=\"path1\"  stroke-width=\"2\" style=\"display:none;\"></path>\n            <path id=\"path2\" part=\"path2\"  stroke-width=\"2\" style=\"display:block;\">\n                <animate id=\"animationsvg\" attributeName=\"d\" dur=\"99999s\" calcMode=\"linear\" values=\"\" fill=\"freeze\"></animate>\n            </path>\n            `;\n    }\n    html += `\n        </svg>\n                <input type=\"range\" part=\"input\" id=\"seek-slider\" max=\"100\" value=\"0\" step=\"any\">\n            </div>\n            <div id=\"duration\" part=\"duration\">0:00</div>\n        </div>\n        <audio src=\"${this.attributes.src.value}\"></audio>\n        `;\n    return html;\n  }\n  templateCss() {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l;\n    return `\n            <style>\n            *, :after, :before { \n                box-sizing: border-box;\n                margin: 0;\n            }\n            :host {\n                display: flex;\n               \n            }\n            .player {\n                display: flex;\n                justify-content: space-between;\n                align-items: center;\n            }\n            #play {\n                background: transparent;\n                border: none;\n                cursor:pointer;\n                padding: 0 0 0 10px;\n                margin: 0px;\n                \n            }\n            #play svg {\n                fill: ${(_b = (_a = this.attributes[\"color\"]) == null ? void 0 : _a.value) != null ? _b : \"#858a8d\"};\n                position:relative;\n                transition: transform 0.3s;\n                top: -0.5px;\n            }\n            #play svg:hover {\n                transform: scale(1.2);\n            }\n            #play svg path {\n                stroke-linecap: round;\n                stroke-linejoin: round;\n                transition: 0.2s;\n            }\n            #svg {\n                margin: 0 10px;\n                overflow: visible;\n                stroke-width: 1px;\n                fill: none;\n            }\n            #path1 {\n                stroke: ${(_d = (_c = this.attributes[\"wave-color\"]) == null ? void 0 : _c.value) != null ? _d : \"#dadcdd\"}; \n                overflow: visible;\n                stroke-linecap: round;\n            }\n            #path2 {\n                stroke: ${(_f = (_e = this.attributes[\"wave-progress-color\"]) == null ? void 0 : _e.value) != null ? _f : \"#858a8d\"};\n                overflow: visible;\n                stroke-linecap: round;\n            }\n            #slider  {\n                position:relative;\n            }\n            #duration, #current-time {\n                position: relative;\n                top:-1.1px;\n                color: ${(_h = (_g = this.attributes[\"color\"]) == null ? void 0 : _g.value) != null ? _h : \"#858a8d\"};\n                margin: 0px 10px;\n                font-size: 16px;\n                font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n                min-width:32px;\n            }\n            #seek-slider {\n                position: absolute;\n                width: 100%;\n                left: 0;\n            }\n            input[type=range] {\n                -webkit-appearance: none; \n                width: 100%; \n                background: transparent; \n                padding: 0px;\n                margin: 0px;\n                border: 0px;\n                height: ${parseInt(this.attributes[\"wave-height\"].value)}px;\n            }  \n            input[type=range]::-webkit-slider-thumb {\n                -webkit-appearance: none;\n            }\n            input[type=range]:focus {\n                outline: none; \n            }\n            \n            input[type=range]::-ms-track {\n                width: 100%;\n                cursor: pointer;\n                /* Hides the slider so custom styles can be added */\n                background: transparent; \n                border-color: transparent;\n                color: transparent;\n            }\n            input[type=range]::-webkit-slider-thumb {\n                -webkit-appearance: none;\n                position:relative; \n                /*top: -1.5px;*/\n                height: 12.5px;\n                width: 12.5px;\n                border-radius: 50%;\n                background:  ${(_j = (_i = this.attributes[\"wave-slider\"]) == null ? void 0 : _i.value) != null ? _j : \"#4fc3f7\"};\n                cursor: pointer;\n                box-shadow: none;\n            }\n            input[type=\"range\"]::-webkit-slider-thumb {\n                transition: transform 0.3s;\n            }\n            input[type=\"range\"]:active::-webkit-slider-thumb {\n                transform: scale(1.5);\n            }\n            input[type=\"range\"]::-moz-range-thumb {\n                height: 12.5px;\n                width: 12.5px;\n                border-radius: 50%;\n                background:  ${(_l = (_k = this.attributes[\"wave-slider\"]) == null ? void 0 : _k.value) != null ? _l : \"#4fc3f7\"};\n                cursor: pointer;\n                box-shadow: none;\n                border: 0px;\n            }\n\n            input[type=\"range\"]:active::-moz-range-thumb {\n                transform: scale(1.5);\n            }  \n            </style>\n        `;\n  }\n}\nwindow.customElements.define(\"wave-audio-path-player\", AudioPathPlayer);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/wave-audio-path-player/dist/wave-audio-path-player.es.js\n");

/***/ })

};
;