"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/antd-tag-input";
exports.ids = ["vendor-chunks/antd-tag-input"];
exports.modules = {

/***/ "(ssr)/./node_modules/antd-tag-input/dist/index.es.js":
/*!******************************************************!*\
  !*** ./node_modules/antd-tag-input/dist/index.es.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TagInput)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react-dom */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-dom.js\");\n/* harmony import */ var react_dom__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_1__);\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key2, value) => key2 in obj ? __defProp(obj, key2, { enumerable: true, configurable: true, writable: true, value }) : obj[key2] = value;\nvar __spreadValues = (a, b2) => {\n  for (var prop in b2 || (b2 = {}))\n    if (__hasOwnProp.call(b2, prop))\n      __defNormalProp(a, prop, b2[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b2)) {\n      if (__propIsEnum.call(b2, prop))\n        __defNormalProp(a, prop, b2[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b2) => __defProps(a, __getOwnPropDescs(b2));\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n\n\nvar _default = \"\";\nvar index$5 = \"\";\nvar index$4 = \"\";\nvar index$3 = \"\";\nvar index$2 = \"\";\nvar index$1 = \"\";\nfunction _extends$1() {\n  _extends$1 = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key2 in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key2)) {\n          target[key2] = source[key2];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends$1.apply(this, arguments);\n}\nfunction _defineProperty$1(obj, key2, value) {\n  if (key2 in obj) {\n    Object.defineProperty(obj, key2, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key2] = value;\n  }\n  return obj;\n}\nvar commonjsGlobal = typeof globalThis !== \"undefined\" ? globalThis : typeof window !== \"undefined\" ? window : typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : {};\nvar classnames = { exports: {} };\n/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n(function(module) {\n  (function() {\n    var hasOwn = {}.hasOwnProperty;\n    function classNames2() {\n      var classes = [];\n      for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (!arg)\n          continue;\n        var argType = typeof arg;\n        if (argType === \"string\" || argType === \"number\") {\n          classes.push(arg);\n        } else if (Array.isArray(arg)) {\n          if (arg.length) {\n            var inner = classNames2.apply(null, arg);\n            if (inner) {\n              classes.push(inner);\n            }\n          }\n        } else if (argType === \"object\") {\n          if (arg.toString === Object.prototype.toString) {\n            for (var key2 in arg) {\n              if (hasOwn.call(arg, key2) && arg[key2]) {\n                classes.push(key2);\n              }\n            }\n          } else {\n            classes.push(arg.toString());\n          }\n        }\n      }\n      return classes.join(\" \");\n    }\n    if (module.exports) {\n      classNames2.default = classNames2;\n      module.exports = classNames2;\n    } else {\n      window.classNames = classNames2;\n    }\n  })();\n})(classnames);\nvar classNames = classnames.exports;\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null)\n    return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key2, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key2 = sourceKeys[i];\n    if (excluded.indexOf(key2) >= 0)\n      continue;\n    target[key2] = source[key2];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null)\n    return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key2, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key2 = sourceSymbolKeys[i];\n      if (excluded.indexOf(key2) >= 0)\n        continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key2))\n        continue;\n      target[key2] = source[key2];\n    }\n  }\n  return target;\n}\nfunction ownKeys$1(object4, enumerableOnly) {\n  var keys2 = Object.keys(object4);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object4);\n    enumerableOnly && (symbols = symbols.filter(function(sym) {\n      return Object.getOwnPropertyDescriptor(object4, sym).enumerable;\n    })), keys2.push.apply(keys2, symbols);\n  }\n  return keys2;\n}\nfunction _objectSpread2$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), true).forEach(function(key2) {\n      _defineProperty$1(target, key2, source[key2]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function(key2) {\n      Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));\n    });\n  }\n  return target;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor)\n      descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps)\n    _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps)\n    _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _setPrototypeOf$1(o, p2) {\n  _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {\n    o2.__proto__ = p3;\n    return o2;\n  };\n  return _setPrototypeOf$1(o, p2);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass)\n    _setPrototypeOf$1(subClass, superClass);\n}\nfunction _getPrototypeOf$1(o) {\n  _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {\n    return o2.__proto__ || Object.getPrototypeOf(o2);\n  };\n  return _getPrototypeOf$1(o);\n}\nfunction _isNativeReflectConstruct$1() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct)\n    return false;\n  if (Reflect.construct.sham)\n    return false;\n  if (typeof Proxy === \"function\")\n    return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n    }));\n    return true;\n  } catch (e2) {\n    return false;\n  }\n}\nfunction _typeof$1(obj) {\n  \"@babel/helpers - typeof\";\n  return _typeof$1 = typeof Symbol == \"function\" && typeof Symbol.iterator == \"symbol\" ? function(obj2) {\n    return typeof obj2;\n  } : function(obj2) {\n    return obj2 && typeof Symbol == \"function\" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n  }, _typeof$1(obj);\n}\nfunction _assertThisInitialized(self2) {\n  if (self2 === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self2;\n}\nfunction _possibleConstructorReturn(self2, call2) {\n  if (call2 && (_typeof$1(call2) === \"object\" || typeof call2 === \"function\")) {\n    return call2;\n  } else if (call2 !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self2);\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf$1(Derived), result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf$1(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return _possibleConstructorReturn(this, result);\n  };\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr))\n    return arr;\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (_i == null)\n    return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _s, _e;\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i)\n        break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null)\n        _i[\"return\"]();\n    } finally {\n      if (_d)\n        throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length)\n    len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o)\n    return;\n  if (typeof o === \"string\")\n    return _arrayLikeToArray(o, minLen);\n  var n2 = Object.prototype.toString.call(o).slice(8, -1);\n  if (n2 === \"Object\" && o.constructor)\n    n2 = o.constructor.name;\n  if (n2 === \"Map\" || n2 === \"Set\")\n    return Array.from(o);\n  if (n2 === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))\n    return _arrayLikeToArray(o, minLen);\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction findDOMNode(node) {\n  if (node instanceof HTMLElement) {\n    return node;\n  }\n  return react_dom__WEBPACK_IMPORTED_MODULE_1___default().findDOMNode(node);\n}\nvar reactIs = { exports: {} };\nvar reactIs_production_min = {};\n/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar b = typeof Symbol === \"function\" && Symbol.for, c = b ? Symbol.for(\"react.element\") : 60103, d = b ? Symbol.for(\"react.portal\") : 60106, e = b ? Symbol.for(\"react.fragment\") : 60107, f$1 = b ? Symbol.for(\"react.strict_mode\") : 60108, g$1 = b ? Symbol.for(\"react.profiler\") : 60114, h$1 = b ? Symbol.for(\"react.provider\") : 60109, k = b ? Symbol.for(\"react.context\") : 60110, l = b ? Symbol.for(\"react.async_mode\") : 60111, m$1 = b ? Symbol.for(\"react.concurrent_mode\") : 60111, n$1 = b ? Symbol.for(\"react.forward_ref\") : 60112, p$1 = b ? Symbol.for(\"react.suspense\") : 60113, q$1 = b ? Symbol.for(\"react.suspense_list\") : 60120, r = b ? Symbol.for(\"react.memo\") : 60115, t = b ? Symbol.for(\"react.lazy\") : 60116, v = b ? Symbol.for(\"react.block\") : 60121, w = b ? Symbol.for(\"react.fundamental\") : 60117, x = b ? Symbol.for(\"react.responder\") : 60118, y = b ? Symbol.for(\"react.scope\") : 60119;\nfunction z(a) {\n  if (typeof a === \"object\" && a !== null) {\n    var u = a.$$typeof;\n    switch (u) {\n      case c:\n        switch (a = a.type, a) {\n          case l:\n          case m$1:\n          case e:\n          case g$1:\n          case f$1:\n          case p$1:\n            return a;\n          default:\n            switch (a = a && a.$$typeof, a) {\n              case k:\n              case n$1:\n              case t:\n              case r:\n              case h$1:\n                return a;\n              default:\n                return u;\n            }\n        }\n      case d:\n        return u;\n    }\n  }\n}\nfunction A(a) {\n  return z(a) === m$1;\n}\nreactIs_production_min.AsyncMode = l;\nreactIs_production_min.ConcurrentMode = m$1;\nreactIs_production_min.ContextConsumer = k;\nreactIs_production_min.ContextProvider = h$1;\nreactIs_production_min.Element = c;\nreactIs_production_min.ForwardRef = n$1;\nreactIs_production_min.Fragment = e;\nreactIs_production_min.Lazy = t;\nreactIs_production_min.Memo = r;\nreactIs_production_min.Portal = d;\nreactIs_production_min.Profiler = g$1;\nreactIs_production_min.StrictMode = f$1;\nreactIs_production_min.Suspense = p$1;\nreactIs_production_min.isAsyncMode = function(a) {\n  return A(a) || z(a) === l;\n};\nreactIs_production_min.isConcurrentMode = A;\nreactIs_production_min.isContextConsumer = function(a) {\n  return z(a) === k;\n};\nreactIs_production_min.isContextProvider = function(a) {\n  return z(a) === h$1;\n};\nreactIs_production_min.isElement = function(a) {\n  return typeof a === \"object\" && a !== null && a.$$typeof === c;\n};\nreactIs_production_min.isForwardRef = function(a) {\n  return z(a) === n$1;\n};\nreactIs_production_min.isFragment = function(a) {\n  return z(a) === e;\n};\nreactIs_production_min.isLazy = function(a) {\n  return z(a) === t;\n};\nreactIs_production_min.isMemo = function(a) {\n  return z(a) === r;\n};\nreactIs_production_min.isPortal = function(a) {\n  return z(a) === d;\n};\nreactIs_production_min.isProfiler = function(a) {\n  return z(a) === g$1;\n};\nreactIs_production_min.isStrictMode = function(a) {\n  return z(a) === f$1;\n};\nreactIs_production_min.isSuspense = function(a) {\n  return z(a) === p$1;\n};\nreactIs_production_min.isValidElementType = function(a) {\n  return typeof a === \"string\" || typeof a === \"function\" || a === e || a === m$1 || a === g$1 || a === f$1 || a === p$1 || a === q$1 || typeof a === \"object\" && a !== null && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h$1 || a.$$typeof === k || a.$$typeof === n$1 || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);\n};\nreactIs_production_min.typeOf = z;\n{\n  reactIs.exports = reactIs_production_min;\n}\nfunction useMemo(getValue2, condition, shouldUpdate) {\n  var cacheRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n  if (!(\"value\" in cacheRef.current) || shouldUpdate(cacheRef.current.condition, condition)) {\n    cacheRef.current.value = getValue2();\n    cacheRef.current.condition = condition;\n  }\n  return cacheRef.current.value;\n}\nfunction fillRef(ref, node) {\n  if (typeof ref === \"function\") {\n    ref(node);\n  } else if (_typeof$1(ref) === \"object\" && ref && \"current\" in ref) {\n    ref.current = node;\n  }\n}\nfunction composeRef() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  var refList = refs.filter(function(ref) {\n    return ref;\n  });\n  if (refList.length <= 1) {\n    return refList[0];\n  }\n  return function(node) {\n    refs.forEach(function(ref) {\n      fillRef(ref, node);\n    });\n  };\n}\nfunction supportRef(nodeOrComponent) {\n  var _type$prototype, _nodeOrComponent$prot;\n  var type4 = reactIs.exports.isMemo(nodeOrComponent) ? nodeOrComponent.type.type : nodeOrComponent.type;\n  if (typeof type4 === \"function\" && !((_type$prototype = type4.prototype) === null || _type$prototype === void 0 ? void 0 : _type$prototype.render)) {\n    return false;\n  }\n  if (typeof nodeOrComponent === \"function\" && !((_nodeOrComponent$prot = nodeOrComponent.prototype) === null || _nodeOrComponent$prot === void 0 ? void 0 : _nodeOrComponent$prot.render)) {\n    return false;\n  }\n  return true;\n}\nfunction canUseDom() {\n  return !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\n}\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes[\"Webkit\".concat(styleProp)] = \"webkit\".concat(eventName);\n  prefixes[\"Moz\".concat(styleProp)] = \"moz\".concat(eventName);\n  prefixes[\"ms\".concat(styleProp)] = \"MS\".concat(eventName);\n  prefixes[\"O\".concat(styleProp)] = \"o\".concat(eventName.toLowerCase());\n  return prefixes;\n}\nfunction getVendorPrefixes(domSupport, win) {\n  var prefixes = {\n    animationend: makePrefixMap(\"Animation\", \"AnimationEnd\"),\n    transitionend: makePrefixMap(\"Transition\", \"TransitionEnd\")\n  };\n  if (domSupport) {\n    if (!(\"AnimationEvent\" in win)) {\n      delete prefixes.animationend.animation;\n    }\n    if (!(\"TransitionEvent\" in win)) {\n      delete prefixes.transitionend.transition;\n    }\n  }\n  return prefixes;\n}\nvar vendorPrefixes = getVendorPrefixes(canUseDom(), typeof window !== \"undefined\" ? window : {});\nvar style = {};\nif (canUseDom()) {\n  var _document$createEleme = document.createElement(\"div\");\n  style = _document$createEleme.style;\n}\nvar prefixedEventNames = {};\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  }\n  var prefixMap = vendorPrefixes[eventName];\n  if (prefixMap) {\n    var stylePropList = Object.keys(prefixMap);\n    var len = stylePropList.length;\n    for (var i = 0; i < len; i += 1) {\n      var styleProp = stylePropList[i];\n      if (Object.prototype.hasOwnProperty.call(prefixMap, styleProp) && styleProp in style) {\n        prefixedEventNames[eventName] = prefixMap[styleProp];\n        return prefixedEventNames[eventName];\n      }\n    }\n  }\n  return \"\";\n}\nvar internalAnimationEndName = getVendorPrefixedEventName(\"animationend\");\nvar internalTransitionEndName = getVendorPrefixedEventName(\"transitionend\");\nvar supportTransition = !!(internalAnimationEndName && internalTransitionEndName);\nvar animationEndName = internalAnimationEndName || \"animationend\";\nvar transitionEndName = internalTransitionEndName || \"transitionend\";\nfunction getTransitionName$2(transitionName2, transitionType) {\n  if (!transitionName2)\n    return null;\n  if (_typeof$1(transitionName2) === \"object\") {\n    var type4 = transitionType.replace(/-\\w/g, function(match) {\n      return match[1].toUpperCase();\n    });\n    return transitionName2[type4];\n  }\n  return \"\".concat(transitionName2, \"-\").concat(transitionType);\n}\nvar STATUS_NONE = \"none\";\nvar STATUS_APPEAR = \"appear\";\nvar STATUS_ENTER = \"enter\";\nvar STATUS_LEAVE = \"leave\";\nvar STEP_NONE = \"none\";\nvar STEP_PREPARE = \"prepare\";\nvar STEP_START = \"start\";\nvar STEP_ACTIVE = \"active\";\nvar STEP_ACTIVATED = \"end\";\nfunction useMountStatus(defaultValue) {\n  var destroyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultValue), _useState2 = _slicedToArray(_useState, 2), val = _useState2[0], setVal = _useState2[1];\n  function setValue2(next) {\n    if (!destroyRef.current) {\n      setVal(next);\n    }\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return function() {\n      destroyRef.current = true;\n    };\n  }, []);\n  return [val, setValue2];\n}\nvar useIsomorphicLayoutEffect = canUseDom() ? react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\nvar raf = function raf2(callback) {\n  return +setTimeout(callback, 16);\n};\nvar caf = function caf2(num) {\n  return clearTimeout(num);\n};\nif (typeof window !== \"undefined\" && \"requestAnimationFrame\" in window) {\n  raf = function raf3(callback) {\n    return window.requestAnimationFrame(callback);\n  };\n  caf = function caf3(handle) {\n    return window.cancelAnimationFrame(handle);\n  };\n}\nvar rafUUID = 0;\nvar rafIds = /* @__PURE__ */ new Map();\nfunction cleanup(id2) {\n  rafIds.delete(id2);\n}\nfunction wrapperRaf$1(callback) {\n  var times = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n  rafUUID += 1;\n  var id2 = rafUUID;\n  function callRef(leftTimes) {\n    if (leftTimes === 0) {\n      cleanup(id2);\n      callback();\n    } else {\n      var realId = raf(function() {\n        callRef(leftTimes - 1);\n      });\n      rafIds.set(id2, realId);\n    }\n  }\n  callRef(times);\n  return id2;\n}\nwrapperRaf$1.cancel = function(id2) {\n  var realId = rafIds.get(id2);\n  cleanup(realId);\n  return caf(realId);\n};\nvar useNextFrame = function() {\n  var nextFrameRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  function cancelNextFrame() {\n    wrapperRaf$1.cancel(nextFrameRef.current);\n  }\n  function nextFrame(callback) {\n    var delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 2;\n    cancelNextFrame();\n    var nextFrameId = wrapperRaf$1(function() {\n      if (delay <= 1) {\n        callback({\n          isCanceled: function isCanceled() {\n            return nextFrameId !== nextFrameRef.current;\n          }\n        });\n      } else {\n        nextFrame(callback, delay - 1);\n      }\n    });\n    nextFrameRef.current = nextFrameId;\n  }\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    return function() {\n      cancelNextFrame();\n    };\n  }, []);\n  return [nextFrame, cancelNextFrame];\n};\nvar STEP_QUEUE = [STEP_PREPARE, STEP_START, STEP_ACTIVE, STEP_ACTIVATED];\nvar SkipStep = false;\nvar DoStep = true;\nfunction isActive(step) {\n  return step === STEP_ACTIVE || step === STEP_ACTIVATED;\n}\nvar useStepQueue = function(status, callback) {\n  var _useState = useMountStatus(STEP_NONE), _useState2 = _slicedToArray(_useState, 2), step = _useState2[0], setStep = _useState2[1];\n  var _useNextFrame = useNextFrame(), _useNextFrame2 = _slicedToArray(_useNextFrame, 2), nextFrame = _useNextFrame2[0], cancelNextFrame = _useNextFrame2[1];\n  function startQueue() {\n    setStep(STEP_PREPARE);\n  }\n  useIsomorphicLayoutEffect(function() {\n    if (step !== STEP_NONE && step !== STEP_ACTIVATED) {\n      var index2 = STEP_QUEUE.indexOf(step);\n      var nextStep = STEP_QUEUE[index2 + 1];\n      var result = callback(step);\n      if (result === SkipStep) {\n        setStep(nextStep);\n      } else {\n        nextFrame(function(info) {\n          function doNext() {\n            if (info.isCanceled())\n              return;\n            setStep(nextStep);\n          }\n          if (result === true) {\n            doNext();\n          } else {\n            Promise.resolve(result).then(doNext);\n          }\n        });\n      }\n    }\n  }, [status, step]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    return function() {\n      cancelNextFrame();\n    };\n  }, []);\n  return [startQueue, step];\n};\nvar useDomMotionEvents = function(callback) {\n  var cacheElementRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var callbackRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(callback);\n  callbackRef.current = callback;\n  var onInternalMotionEnd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(event) {\n    callbackRef.current(event);\n  }, []);\n  function removeMotionEvents(element) {\n    if (element) {\n      element.removeEventListener(transitionEndName, onInternalMotionEnd);\n      element.removeEventListener(animationEndName, onInternalMotionEnd);\n    }\n  }\n  function patchMotionEvents(element) {\n    if (cacheElementRef.current && cacheElementRef.current !== element) {\n      removeMotionEvents(cacheElementRef.current);\n    }\n    if (element && element !== cacheElementRef.current) {\n      element.addEventListener(transitionEndName, onInternalMotionEnd);\n      element.addEventListener(animationEndName, onInternalMotionEnd);\n      cacheElementRef.current = element;\n    }\n  }\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    return function() {\n      removeMotionEvents(cacheElementRef.current);\n    };\n  }, []);\n  return [patchMotionEvents, removeMotionEvents];\n};\nfunction useStatus(supportMotion, visible, getElement2, _ref) {\n  var _ref$motionEnter = _ref.motionEnter, motionEnter = _ref$motionEnter === void 0 ? true : _ref$motionEnter, _ref$motionAppear = _ref.motionAppear, motionAppear = _ref$motionAppear === void 0 ? true : _ref$motionAppear, _ref$motionLeave = _ref.motionLeave, motionLeave = _ref$motionLeave === void 0 ? true : _ref$motionLeave, motionDeadline = _ref.motionDeadline, motionLeaveImmediately = _ref.motionLeaveImmediately, onAppearPrepare = _ref.onAppearPrepare, onEnterPrepare = _ref.onEnterPrepare, onLeavePrepare = _ref.onLeavePrepare, onAppearStart = _ref.onAppearStart, onEnterStart = _ref.onEnterStart, onLeaveStart = _ref.onLeaveStart, onAppearActive = _ref.onAppearActive, onEnterActive = _ref.onEnterActive, onLeaveActive = _ref.onLeaveActive, onAppearEnd = _ref.onAppearEnd, onEnterEnd = _ref.onEnterEnd, onLeaveEnd = _ref.onLeaveEnd, onVisibleChanged = _ref.onVisibleChanged;\n  var _useState = useMountStatus(), _useState2 = _slicedToArray(_useState, 2), asyncVisible = _useState2[0], setAsyncVisible = _useState2[1];\n  var _useState3 = useMountStatus(STATUS_NONE), _useState4 = _slicedToArray(_useState3, 2), status = _useState4[0], setStatus = _useState4[1];\n  var _useState5 = useMountStatus(null), _useState6 = _slicedToArray(_useState5, 2), style2 = _useState6[0], setStyle = _useState6[1];\n  var mountedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  var deadlineRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  var destroyedRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  var cacheElementRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  function getDomElement() {\n    var element = getElement2();\n    return element || cacheElementRef.current;\n  }\n  var activeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  function onInternalMotionEnd(event) {\n    var element = getDomElement();\n    if (event && !event.deadline && event.target !== element) {\n      return;\n    }\n    var canEnd;\n    if (status === STATUS_APPEAR && activeRef.current) {\n      canEnd = onAppearEnd === null || onAppearEnd === void 0 ? void 0 : onAppearEnd(element, event);\n    } else if (status === STATUS_ENTER && activeRef.current) {\n      canEnd = onEnterEnd === null || onEnterEnd === void 0 ? void 0 : onEnterEnd(element, event);\n    } else if (status === STATUS_LEAVE && activeRef.current) {\n      canEnd = onLeaveEnd === null || onLeaveEnd === void 0 ? void 0 : onLeaveEnd(element, event);\n    }\n    if (canEnd !== false && !destroyedRef.current) {\n      setStatus(STATUS_NONE);\n      setStyle(null);\n    }\n  }\n  var _useDomMotionEvents = useDomMotionEvents(onInternalMotionEnd), _useDomMotionEvents2 = _slicedToArray(_useDomMotionEvents, 1), patchMotionEvents = _useDomMotionEvents2[0];\n  var eventHandlers = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    var _ref2, _ref3, _ref4;\n    switch (status) {\n      case STATUS_APPEAR:\n        return _ref2 = {}, _defineProperty$1(_ref2, STEP_PREPARE, onAppearPrepare), _defineProperty$1(_ref2, STEP_START, onAppearStart), _defineProperty$1(_ref2, STEP_ACTIVE, onAppearActive), _ref2;\n      case STATUS_ENTER:\n        return _ref3 = {}, _defineProperty$1(_ref3, STEP_PREPARE, onEnterPrepare), _defineProperty$1(_ref3, STEP_START, onEnterStart), _defineProperty$1(_ref3, STEP_ACTIVE, onEnterActive), _ref3;\n      case STATUS_LEAVE:\n        return _ref4 = {}, _defineProperty$1(_ref4, STEP_PREPARE, onLeavePrepare), _defineProperty$1(_ref4, STEP_START, onLeaveStart), _defineProperty$1(_ref4, STEP_ACTIVE, onLeaveActive), _ref4;\n      default:\n        return {};\n    }\n  }, [status]);\n  var _useStepQueue = useStepQueue(status, function(newStep) {\n    if (newStep === STEP_PREPARE) {\n      var onPrepare = eventHandlers[STEP_PREPARE];\n      if (!onPrepare) {\n        return SkipStep;\n      }\n      return onPrepare(getDomElement());\n    }\n    if (step in eventHandlers) {\n      var _eventHandlers$step;\n      setStyle(((_eventHandlers$step = eventHandlers[step]) === null || _eventHandlers$step === void 0 ? void 0 : _eventHandlers$step.call(eventHandlers, getDomElement(), null)) || null);\n    }\n    if (step === STEP_ACTIVE) {\n      patchMotionEvents(getDomElement());\n      if (motionDeadline > 0) {\n        clearTimeout(deadlineRef.current);\n        deadlineRef.current = setTimeout(function() {\n          onInternalMotionEnd({\n            deadline: true\n          });\n        }, motionDeadline);\n      }\n    }\n    return DoStep;\n  }), _useStepQueue2 = _slicedToArray(_useStepQueue, 2), startStep = _useStepQueue2[0], step = _useStepQueue2[1];\n  var active = isActive(step);\n  activeRef.current = active;\n  useIsomorphicLayoutEffect(function() {\n    setAsyncVisible(visible);\n    var isMounted = mountedRef.current;\n    mountedRef.current = true;\n    if (!supportMotion) {\n      return;\n    }\n    var nextStatus;\n    if (!isMounted && visible && motionAppear) {\n      nextStatus = STATUS_APPEAR;\n    }\n    if (isMounted && visible && motionEnter) {\n      nextStatus = STATUS_ENTER;\n    }\n    if (isMounted && !visible && motionLeave || !isMounted && motionLeaveImmediately && !visible && motionLeave) {\n      nextStatus = STATUS_LEAVE;\n    }\n    if (nextStatus) {\n      setStatus(nextStatus);\n      startStep();\n    }\n  }, [visible]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    if (status === STATUS_APPEAR && !motionAppear || status === STATUS_ENTER && !motionEnter || status === STATUS_LEAVE && !motionLeave) {\n      setStatus(STATUS_NONE);\n    }\n  }, [motionAppear, motionEnter, motionLeave]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return function() {\n      clearTimeout(deadlineRef.current);\n      destroyedRef.current = true;\n    };\n  }, []);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    if (asyncVisible !== void 0 && status === STATUS_NONE) {\n      onVisibleChanged === null || onVisibleChanged === void 0 ? void 0 : onVisibleChanged(asyncVisible);\n    }\n  }, [asyncVisible, status]);\n  var mergedStyle = style2;\n  if (eventHandlers[STEP_PREPARE] && step === STEP_START) {\n    mergedStyle = _objectSpread2$1({\n      transition: \"none\"\n    }, mergedStyle);\n  }\n  return [status, step, mergedStyle, asyncVisible !== null && asyncVisible !== void 0 ? asyncVisible : visible];\n}\nvar DomWrapper$1 = /* @__PURE__ */ function(_React$Component) {\n  _inherits(DomWrapper2, _React$Component);\n  var _super = _createSuper(DomWrapper2);\n  function DomWrapper2() {\n    _classCallCheck(this, DomWrapper2);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DomWrapper2, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return DomWrapper2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nfunction genCSSMotion(config) {\n  var transitionSupport = config;\n  if (_typeof$1(config) === \"object\") {\n    transitionSupport = config.transitionSupport;\n  }\n  function isSupportTransition(props) {\n    return !!(props.motionName && transitionSupport);\n  }\n  var CSSMotion2 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(props, ref) {\n    var _props$visible = props.visible, visible = _props$visible === void 0 ? true : _props$visible, _props$removeOnLeave = props.removeOnLeave, removeOnLeave = _props$removeOnLeave === void 0 ? true : _props$removeOnLeave, forceRender = props.forceRender, children = props.children, motionName = props.motionName, leavedClassName = props.leavedClassName, eventProps = props.eventProps;\n    var supportMotion = isSupportTransition(props);\n    var nodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var wrapperNodeRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    function getDomElement() {\n      try {\n        return nodeRef.current instanceof HTMLElement ? nodeRef.current : findDOMNode(wrapperNodeRef.current);\n      } catch (e2) {\n        return null;\n      }\n    }\n    var _useStatus = useStatus(supportMotion, visible, getDomElement, props), _useStatus2 = _slicedToArray(_useStatus, 4), status = _useStatus2[0], statusStep = _useStatus2[1], statusStyle = _useStatus2[2], mergedVisible = _useStatus2[3];\n    var renderedRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(mergedVisible);\n    if (mergedVisible) {\n      renderedRef.current = true;\n    }\n    var setNodeRef = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(node) {\n      nodeRef.current = node;\n      fillRef(ref, node);\n    }, []);\n    var motionChildren;\n    var mergedProps = _objectSpread2$1(_objectSpread2$1({}, eventProps), {}, {\n      visible\n    });\n    if (!children) {\n      motionChildren = null;\n    } else if (status === STATUS_NONE || !isSupportTransition(props)) {\n      if (mergedVisible) {\n        motionChildren = children(_objectSpread2$1({}, mergedProps), setNodeRef);\n      } else if (!removeOnLeave && renderedRef.current) {\n        motionChildren = children(_objectSpread2$1(_objectSpread2$1({}, mergedProps), {}, {\n          className: leavedClassName\n        }), setNodeRef);\n      } else if (forceRender) {\n        motionChildren = children(_objectSpread2$1(_objectSpread2$1({}, mergedProps), {}, {\n          style: {\n            display: \"none\"\n          }\n        }), setNodeRef);\n      } else {\n        motionChildren = null;\n      }\n    } else {\n      var _classNames;\n      var statusSuffix;\n      if (statusStep === STEP_PREPARE) {\n        statusSuffix = \"prepare\";\n      } else if (isActive(statusStep)) {\n        statusSuffix = \"active\";\n      } else if (statusStep === STEP_START) {\n        statusSuffix = \"start\";\n      }\n      motionChildren = children(_objectSpread2$1(_objectSpread2$1({}, mergedProps), {}, {\n        className: classNames(getTransitionName$2(motionName, status), (_classNames = {}, _defineProperty$1(_classNames, getTransitionName$2(motionName, \"\".concat(status, \"-\").concat(statusSuffix)), statusSuffix), _defineProperty$1(_classNames, motionName, typeof motionName === \"string\"), _classNames)),\n        style: statusStyle\n      }), setNodeRef);\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DomWrapper$1, {\n      ref: wrapperNodeRef\n    }, motionChildren);\n  });\n  CSSMotion2.displayName = \"CSSMotion\";\n  return CSSMotion2;\n}\nvar CSSMotion = genCSSMotion(supportTransition);\nvar STATUS_ADD = \"add\";\nvar STATUS_KEEP = \"keep\";\nvar STATUS_REMOVE = \"remove\";\nvar STATUS_REMOVED = \"removed\";\nfunction wrapKeyToObject(key2) {\n  var keyObj;\n  if (key2 && _typeof$1(key2) === \"object\" && \"key\" in key2) {\n    keyObj = key2;\n  } else {\n    keyObj = {\n      key: key2\n    };\n  }\n  return _objectSpread2$1(_objectSpread2$1({}, keyObj), {}, {\n    key: String(keyObj.key)\n  });\n}\nfunction parseKeys() {\n  var keys2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n  return keys2.map(wrapKeyToObject);\n}\nfunction diffKeys() {\n  var prevKeys = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n  var currentKeys = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];\n  var list = [];\n  var currentIndex = 0;\n  var currentLen = currentKeys.length;\n  var prevKeyObjects = parseKeys(prevKeys);\n  var currentKeyObjects = parseKeys(currentKeys);\n  prevKeyObjects.forEach(function(keyObj) {\n    var hit = false;\n    for (var i = currentIndex; i < currentLen; i += 1) {\n      var currentKeyObj = currentKeyObjects[i];\n      if (currentKeyObj.key === keyObj.key) {\n        if (currentIndex < i) {\n          list = list.concat(currentKeyObjects.slice(currentIndex, i).map(function(obj) {\n            return _objectSpread2$1(_objectSpread2$1({}, obj), {}, {\n              status: STATUS_ADD\n            });\n          }));\n          currentIndex = i;\n        }\n        list.push(_objectSpread2$1(_objectSpread2$1({}, currentKeyObj), {}, {\n          status: STATUS_KEEP\n        }));\n        currentIndex += 1;\n        hit = true;\n        break;\n      }\n    }\n    if (!hit) {\n      list.push(_objectSpread2$1(_objectSpread2$1({}, keyObj), {}, {\n        status: STATUS_REMOVE\n      }));\n    }\n  });\n  if (currentIndex < currentLen) {\n    list = list.concat(currentKeyObjects.slice(currentIndex).map(function(obj) {\n      return _objectSpread2$1(_objectSpread2$1({}, obj), {}, {\n        status: STATUS_ADD\n      });\n    }));\n  }\n  var keys2 = {};\n  list.forEach(function(_ref) {\n    var key2 = _ref.key;\n    keys2[key2] = (keys2[key2] || 0) + 1;\n  });\n  var duplicatedKeys = Object.keys(keys2).filter(function(key2) {\n    return keys2[key2] > 1;\n  });\n  duplicatedKeys.forEach(function(matchKey) {\n    list = list.filter(function(_ref2) {\n      var key2 = _ref2.key, status = _ref2.status;\n      return key2 !== matchKey || status !== STATUS_REMOVE;\n    });\n    list.forEach(function(node) {\n      if (node.key === matchKey) {\n        node.status = STATUS_KEEP;\n      }\n    });\n  });\n  return list;\n}\nvar _excluded$6 = [\"component\", \"children\", \"onVisibleChanged\"], _excluded2 = [\"status\"];\nvar MOTION_PROP_NAMES = [\"eventProps\", \"visible\", \"children\", \"motionName\", \"motionAppear\", \"motionEnter\", \"motionLeave\", \"motionLeaveImmediately\", \"motionDeadline\", \"removeOnLeave\", \"leavedClassName\", \"onAppearStart\", \"onAppearActive\", \"onAppearEnd\", \"onEnterStart\", \"onEnterActive\", \"onEnterEnd\", \"onLeaveStart\", \"onLeaveActive\", \"onLeaveEnd\"];\nfunction genCSSMotionList(transitionSupport) {\n  var CSSMotion$1 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : CSSMotion;\n  var CSSMotionList2 = /* @__PURE__ */ function(_React$Component) {\n    _inherits(CSSMotionList3, _React$Component);\n    var _super = _createSuper(CSSMotionList3);\n    function CSSMotionList3() {\n      var _this;\n      _classCallCheck(this, CSSMotionList3);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        keyEntities: []\n      };\n      _this.removeKey = function(removeKey) {\n        _this.setState(function(_ref) {\n          var keyEntities = _ref.keyEntities;\n          return {\n            keyEntities: keyEntities.map(function(entity) {\n              if (entity.key !== removeKey)\n                return entity;\n              return _objectSpread2$1(_objectSpread2$1({}, entity), {}, {\n                status: STATUS_REMOVED\n              });\n            })\n          };\n        });\n      };\n      return _this;\n    }\n    _createClass(CSSMotionList3, [{\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n        var keyEntities = this.state.keyEntities;\n        var _this$props = this.props, component = _this$props.component, children = _this$props.children, _onVisibleChanged = _this$props.onVisibleChanged, restProps = _objectWithoutProperties(_this$props, _excluded$6);\n        var Component2 = component || react__WEBPACK_IMPORTED_MODULE_0__.Fragment;\n        var motionProps = {};\n        MOTION_PROP_NAMES.forEach(function(prop) {\n          motionProps[prop] = restProps[prop];\n          delete restProps[prop];\n        });\n        delete restProps.keys;\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component2, restProps, keyEntities.map(function(_ref2) {\n          var status = _ref2.status, eventProps = _objectWithoutProperties(_ref2, _excluded2);\n          var visible = status === STATUS_ADD || status === STATUS_KEEP;\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CSSMotion$1, _extends$1({}, motionProps, {\n            key: eventProps.key,\n            visible,\n            eventProps,\n            onVisibleChanged: function onVisibleChanged(changedVisible) {\n              _onVisibleChanged === null || _onVisibleChanged === void 0 ? void 0 : _onVisibleChanged(changedVisible, {\n                key: eventProps.key\n              });\n              if (!changedVisible) {\n                _this2.removeKey(eventProps.key);\n              }\n            }\n          }), children);\n        }));\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(_ref3, _ref4) {\n        var keys2 = _ref3.keys;\n        var keyEntities = _ref4.keyEntities;\n        var parsedKeyObjects = parseKeys(keys2);\n        var mixedKeyEntities = diffKeys(keyEntities, parsedKeyObjects);\n        return {\n          keyEntities: mixedKeyEntities.filter(function(entity) {\n            var prevEntity = keyEntities.find(function(_ref5) {\n              var key2 = _ref5.key;\n              return entity.key === key2;\n            });\n            if (prevEntity && prevEntity.status === STATUS_REMOVED && entity.status === STATUS_REMOVE) {\n              return false;\n            }\n            return true;\n          })\n        };\n      }\n    }]);\n    return CSSMotionList3;\n  }(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n  CSSMotionList2.defaultProps = {\n    component: \"div\"\n  };\n  return CSSMotionList2;\n}\nvar CSSMotionList = genCSSMotionList(supportTransition);\nvar Notice = /* @__PURE__ */ function(_Component) {\n  _inherits(Notice2, _Component);\n  var _super = _createSuper(Notice2);\n  function Notice2() {\n    var _this;\n    _classCallCheck(this, Notice2);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.closeTimer = null;\n    _this.close = function(e2) {\n      if (e2) {\n        e2.stopPropagation();\n      }\n      _this.clearCloseTimer();\n      var _this$props = _this.props, onClose2 = _this$props.onClose, noticeKey = _this$props.noticeKey;\n      if (onClose2) {\n        onClose2(noticeKey);\n      }\n    };\n    _this.startCloseTimer = function() {\n      if (_this.props.duration) {\n        _this.closeTimer = window.setTimeout(function() {\n          _this.close();\n        }, _this.props.duration * 1e3);\n      }\n    };\n    _this.clearCloseTimer = function() {\n      if (_this.closeTimer) {\n        clearTimeout(_this.closeTimer);\n        _this.closeTimer = null;\n      }\n    };\n    return _this;\n  }\n  _createClass(Notice2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.startCloseTimer();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.duration !== prevProps.duration || this.props.updateMark !== prevProps.updateMark || this.props.visible !== prevProps.visible && this.props.visible) {\n        this.restartCloseTimer();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearCloseTimer();\n    }\n  }, {\n    key: \"restartCloseTimer\",\n    value: function restartCloseTimer() {\n      this.clearCloseTimer();\n      this.startCloseTimer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props2 = this.props, prefixCls = _this$props2.prefixCls, className = _this$props2.className, closable = _this$props2.closable, closeIcon = _this$props2.closeIcon, style2 = _this$props2.style, onClick = _this$props2.onClick, children = _this$props2.children, holder = _this$props2.holder;\n      var componentClass = \"\".concat(prefixCls, \"-notice\");\n      var dataOrAriaAttributeProps = Object.keys(this.props).reduce(function(acc, key2) {\n        if (key2.substr(0, 5) === \"data-\" || key2.substr(0, 5) === \"aria-\" || key2 === \"role\") {\n          acc[key2] = _this2.props[key2];\n        }\n        return acc;\n      }, {});\n      var node = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", _extends$1({\n        className: classNames(componentClass, className, _defineProperty$1({}, \"\".concat(componentClass, \"-closable\"), closable)),\n        style: style2,\n        onMouseEnter: this.clearCloseTimer,\n        onMouseLeave: this.startCloseTimer,\n        onClick\n      }, dataOrAriaAttributeProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: \"\".concat(componentClass, \"-content\")\n      }, children), closable ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", {\n        tabIndex: 0,\n        onClick: this.close,\n        className: \"\".concat(componentClass, \"-close\")\n      }, closeIcon || /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"\".concat(componentClass, \"-close-x\")\n      })) : null);\n      if (holder) {\n        return /* @__PURE__ */ react_dom__WEBPACK_IMPORTED_MODULE_1___default().createPortal(node, holder);\n      }\n      return node;\n    }\n  }]);\n  return Notice2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nNotice.defaultProps = {\n  onClose: function onClose() {\n  },\n  duration: 1.5\n};\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr))\n    return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null)\n    return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction useNotification(notificationInstance2) {\n  var createdRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState([]), _React$useState2 = _slicedToArray(_React$useState, 2), elements = _React$useState2[0], setElements = _React$useState2[1];\n  function notify(noticeProps) {\n    var firstMount = true;\n    notificationInstance2.add(noticeProps, function(div, props) {\n      var key2 = props.key;\n      if (div && (!createdRef.current[key2] || firstMount)) {\n        var noticeEle = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Notice, _extends$1({}, props, {\n          holder: div\n        }));\n        createdRef.current[key2] = noticeEle;\n        setElements(function(originElements) {\n          var index2 = originElements.findIndex(function(ele) {\n            return ele.key === props.key;\n          });\n          if (index2 === -1) {\n            return [].concat(_toConsumableArray(originElements), [noticeEle]);\n          }\n          var cloneList = _toConsumableArray(originElements);\n          cloneList[index2] = noticeEle;\n          return cloneList;\n        });\n      }\n      firstMount = false;\n    });\n  }\n  return [notify, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, elements)];\n}\nvar seed = 0;\nvar now = Date.now();\nfunction getUuid() {\n  var id2 = seed;\n  seed += 1;\n  return \"rcNotification_\".concat(now, \"_\").concat(id2);\n}\nvar Notification = /* @__PURE__ */ function(_Component) {\n  _inherits(Notification2, _Component);\n  var _super = _createSuper(Notification2);\n  function Notification2() {\n    var _this;\n    _classCallCheck(this, Notification2);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      notices: []\n    };\n    _this.hookRefs = /* @__PURE__ */ new Map();\n    _this.add = function(originNotice, holderCallback) {\n      var key2 = originNotice.key || getUuid();\n      var notice2 = _objectSpread2$1(_objectSpread2$1({}, originNotice), {}, {\n        key: key2\n      });\n      var maxCount2 = _this.props.maxCount;\n      _this.setState(function(previousState) {\n        var notices = previousState.notices;\n        var noticeIndex = notices.map(function(v2) {\n          return v2.notice.key;\n        }).indexOf(key2);\n        var updatedNotices = notices.concat();\n        if (noticeIndex !== -1) {\n          updatedNotices.splice(noticeIndex, 1, {\n            notice: notice2,\n            holderCallback\n          });\n        } else {\n          if (maxCount2 && notices.length >= maxCount2) {\n            notice2.key = updatedNotices[0].notice.key;\n            notice2.updateMark = getUuid();\n            notice2.userPassKey = key2;\n            updatedNotices.shift();\n          }\n          updatedNotices.push({\n            notice: notice2,\n            holderCallback\n          });\n        }\n        return {\n          notices: updatedNotices\n        };\n      });\n    };\n    _this.remove = function(removeKey) {\n      _this.setState(function(_ref) {\n        var notices = _ref.notices;\n        return {\n          notices: notices.filter(function(_ref2) {\n            var _ref2$notice = _ref2.notice, key2 = _ref2$notice.key, userPassKey = _ref2$notice.userPassKey;\n            var mergedKey = userPassKey || key2;\n            return mergedKey !== removeKey;\n          })\n        };\n      });\n    };\n    _this.noticePropsMap = {};\n    return _this;\n  }\n  _createClass(Notification2, [{\n    key: \"getTransitionName\",\n    value: function getTransitionName3() {\n      var _this$props = this.props, prefixCls = _this$props.prefixCls, animation = _this$props.animation;\n      var transitionName2 = this.props.transitionName;\n      if (!transitionName2 && animation) {\n        transitionName2 = \"\".concat(prefixCls, \"-\").concat(animation);\n      }\n      return transitionName2;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var notices = this.state.notices;\n      var _this$props2 = this.props, prefixCls = _this$props2.prefixCls, className = _this$props2.className, closeIcon = _this$props2.closeIcon, style2 = _this$props2.style;\n      var noticeKeys = [];\n      notices.forEach(function(_ref3, index2) {\n        var notice2 = _ref3.notice, holderCallback = _ref3.holderCallback;\n        var updateMark = index2 === notices.length - 1 ? notice2.updateMark : void 0;\n        var key2 = notice2.key, userPassKey = notice2.userPassKey;\n        var noticeProps = _objectSpread2$1(_objectSpread2$1(_objectSpread2$1({\n          prefixCls,\n          closeIcon\n        }, notice2), notice2.props), {}, {\n          key: key2,\n          noticeKey: userPassKey || key2,\n          updateMark,\n          onClose: function onClose2(noticeKey) {\n            var _notice$onClose;\n            _this2.remove(noticeKey);\n            (_notice$onClose = notice2.onClose) === null || _notice$onClose === void 0 ? void 0 : _notice$onClose.call(notice2);\n          },\n          onClick: notice2.onClick,\n          children: notice2.content\n        });\n        noticeKeys.push(key2);\n        _this2.noticePropsMap[key2] = {\n          props: noticeProps,\n          holderCallback\n        };\n      });\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n        className: classNames(prefixCls, className),\n        style: style2\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CSSMotionList, {\n        keys: noticeKeys,\n        motionName: this.getTransitionName(),\n        onVisibleChanged: function onVisibleChanged(changedVisible, _ref4) {\n          var key2 = _ref4.key;\n          if (!changedVisible) {\n            delete _this2.noticePropsMap[key2];\n          }\n        }\n      }, function(_ref5) {\n        var key2 = _ref5.key, motionClassName = _ref5.className, motionStyle = _ref5.style, visible = _ref5.visible;\n        var _this2$noticePropsMap = _this2.noticePropsMap[key2], noticeProps = _this2$noticePropsMap.props, holderCallback = _this2$noticePropsMap.holderCallback;\n        if (holderCallback) {\n          return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n            key: key2,\n            className: classNames(motionClassName, \"\".concat(prefixCls, \"-hook-holder\")),\n            style: _objectSpread2$1({}, motionStyle),\n            ref: function ref(div) {\n              if (typeof key2 === \"undefined\") {\n                return;\n              }\n              if (div) {\n                _this2.hookRefs.set(key2, div);\n                holderCallback(div, noticeProps);\n              } else {\n                _this2.hookRefs.delete(key2);\n              }\n            }\n          });\n        }\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Notice, _extends$1({}, noticeProps, {\n          className: classNames(motionClassName, noticeProps === null || noticeProps === void 0 ? void 0 : noticeProps.className),\n          style: _objectSpread2$1(_objectSpread2$1({}, motionStyle), noticeProps === null || noticeProps === void 0 ? void 0 : noticeProps.style),\n          visible\n        }));\n      }));\n    }\n  }]);\n  return Notification2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nNotification.newInstance = void 0;\nNotification.defaultProps = {\n  prefixCls: \"rc-notification\",\n  animation: \"fade\",\n  style: {\n    top: 65,\n    left: \"50%\"\n  }\n};\nNotification.newInstance = function newNotificationInstance(properties, callback) {\n  var _ref6 = properties || {}, getContainer2 = _ref6.getContainer, props = _objectWithoutProperties(_ref6, [\"getContainer\"]);\n  var div = document.createElement(\"div\");\n  if (getContainer2) {\n    var root2 = getContainer2();\n    root2.appendChild(div);\n  } else {\n    document.body.appendChild(div);\n  }\n  var called = false;\n  function ref(notification2) {\n    if (called) {\n      return;\n    }\n    called = true;\n    callback({\n      notice: function notice2(noticeProps) {\n        notification2.add(noticeProps);\n      },\n      removeNotice: function removeNotice(key2) {\n        notification2.remove(key2);\n      },\n      component: notification2,\n      destroy: function destroy3() {\n        react_dom__WEBPACK_IMPORTED_MODULE_1___default().unmountComponentAtNode(div);\n        if (div.parentNode) {\n          div.parentNode.removeChild(div);\n        }\n      },\n      useNotification: function useNotification$1() {\n        return useNotification(notification2);\n      }\n    });\n  }\n  react_dom__WEBPACK_IMPORTED_MODULE_1___default().render(/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Notification, _extends$1({}, props, {\n    ref\n  })), div);\n};\nvar LoadingOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"0 0 1024 1024\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M988 548c-19.9 0-36-16.1-36-36 0-59.4-11.6-117-34.6-171.3a440.45 440.45 0 00-94.3-139.9 437.71 437.71 0 00-139.9-94.3C629 83.6 571.4 72 512 72c-19.9 0-36-16.1-36-36s16.1-36 36-36c69.1 0 136.2 13.5 199.3 40.3C772.3 66 827 103 874 150c47 47 83.9 101.8 109.7 162.7 26.7 63.1 40.2 130.2 40.2 199.3.1 19.9-16 36-35.9 36z\" } }] }, \"name\": \"loading\", \"theme\": \"outlined\" };\nvar LoadingOutlinedSvg = LoadingOutlined$2;\nvar IconContext = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)({});\nvar IconContext$1 = IconContext;\nfunction bound01(n2, max) {\n  if (isOnePointZero(n2)) {\n    n2 = \"100%\";\n  }\n  var isPercent = isPercentage(n2);\n  n2 = max === 360 ? n2 : Math.min(max, Math.max(0, parseFloat(n2)));\n  if (isPercent) {\n    n2 = parseInt(String(n2 * max), 10) / 100;\n  }\n  if (Math.abs(n2 - max) < 1e-6) {\n    return 1;\n  }\n  if (max === 360) {\n    n2 = (n2 < 0 ? n2 % max + max : n2 % max) / parseFloat(String(max));\n  } else {\n    n2 = n2 % max / parseFloat(String(max));\n  }\n  return n2;\n}\nfunction clamp01(val) {\n  return Math.min(1, Math.max(0, val));\n}\nfunction isOnePointZero(n2) {\n  return typeof n2 === \"string\" && n2.indexOf(\".\") !== -1 && parseFloat(n2) === 1;\n}\nfunction isPercentage(n2) {\n  return typeof n2 === \"string\" && n2.indexOf(\"%\") !== -1;\n}\nfunction boundAlpha(a) {\n  a = parseFloat(a);\n  if (isNaN(a) || a < 0 || a > 1) {\n    a = 1;\n  }\n  return a;\n}\nfunction convertToPercentage(n2) {\n  if (n2 <= 1) {\n    return Number(n2) * 100 + \"%\";\n  }\n  return n2;\n}\nfunction pad2(c2) {\n  return c2.length === 1 ? \"0\" + c2 : String(c2);\n}\nfunction rgbToRgb(r2, g2, b2) {\n  return {\n    r: bound01(r2, 255) * 255,\n    g: bound01(g2, 255) * 255,\n    b: bound01(b2, 255) * 255\n  };\n}\nfunction rgbToHsl(r2, g2, b2) {\n  r2 = bound01(r2, 255);\n  g2 = bound01(g2, 255);\n  b2 = bound01(b2, 255);\n  var max = Math.max(r2, g2, b2);\n  var min = Math.min(r2, g2, b2);\n  var h = 0;\n  var s = 0;\n  var l2 = (max + min) / 2;\n  if (max === min) {\n    s = 0;\n    h = 0;\n  } else {\n    var d2 = max - min;\n    s = l2 > 0.5 ? d2 / (2 - max - min) : d2 / (max + min);\n    switch (max) {\n      case r2:\n        h = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);\n        break;\n      case g2:\n        h = (b2 - r2) / d2 + 2;\n        break;\n      case b2:\n        h = (r2 - g2) / d2 + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return { h, s, l: l2 };\n}\nfunction hue2rgb(p2, q2, t2) {\n  if (t2 < 0) {\n    t2 += 1;\n  }\n  if (t2 > 1) {\n    t2 -= 1;\n  }\n  if (t2 < 1 / 6) {\n    return p2 + (q2 - p2) * (6 * t2);\n  }\n  if (t2 < 1 / 2) {\n    return q2;\n  }\n  if (t2 < 2 / 3) {\n    return p2 + (q2 - p2) * (2 / 3 - t2) * 6;\n  }\n  return p2;\n}\nfunction hslToRgb(h, s, l2) {\n  var r2;\n  var g2;\n  var b2;\n  h = bound01(h, 360);\n  s = bound01(s, 100);\n  l2 = bound01(l2, 100);\n  if (s === 0) {\n    g2 = l2;\n    b2 = l2;\n    r2 = l2;\n  } else {\n    var q2 = l2 < 0.5 ? l2 * (1 + s) : l2 + s - l2 * s;\n    var p2 = 2 * l2 - q2;\n    r2 = hue2rgb(p2, q2, h + 1 / 3);\n    g2 = hue2rgb(p2, q2, h);\n    b2 = hue2rgb(p2, q2, h - 1 / 3);\n  }\n  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };\n}\nfunction rgbToHsv(r2, g2, b2) {\n  r2 = bound01(r2, 255);\n  g2 = bound01(g2, 255);\n  b2 = bound01(b2, 255);\n  var max = Math.max(r2, g2, b2);\n  var min = Math.min(r2, g2, b2);\n  var h = 0;\n  var v2 = max;\n  var d2 = max - min;\n  var s = max === 0 ? 0 : d2 / max;\n  if (max === min) {\n    h = 0;\n  } else {\n    switch (max) {\n      case r2:\n        h = (g2 - b2) / d2 + (g2 < b2 ? 6 : 0);\n        break;\n      case g2:\n        h = (b2 - r2) / d2 + 2;\n        break;\n      case b2:\n        h = (r2 - g2) / d2 + 4;\n        break;\n    }\n    h /= 6;\n  }\n  return { h, s, v: v2 };\n}\nfunction hsvToRgb(h, s, v2) {\n  h = bound01(h, 360) * 6;\n  s = bound01(s, 100);\n  v2 = bound01(v2, 100);\n  var i = Math.floor(h);\n  var f2 = h - i;\n  var p2 = v2 * (1 - s);\n  var q2 = v2 * (1 - f2 * s);\n  var t2 = v2 * (1 - (1 - f2) * s);\n  var mod = i % 6;\n  var r2 = [v2, q2, p2, p2, t2, v2][mod];\n  var g2 = [t2, v2, v2, q2, p2, p2][mod];\n  var b2 = [p2, p2, t2, v2, v2, q2][mod];\n  return { r: r2 * 255, g: g2 * 255, b: b2 * 255 };\n}\nfunction rgbToHex(r2, g2, b2, allow3Char) {\n  var hex2 = [\n    pad2(Math.round(r2).toString(16)),\n    pad2(Math.round(g2).toString(16)),\n    pad2(Math.round(b2).toString(16))\n  ];\n  if (allow3Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1))) {\n    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0);\n  }\n  return hex2.join(\"\");\n}\nfunction rgbaToHex(r2, g2, b2, a, allow4Char) {\n  var hex2 = [\n    pad2(Math.round(r2).toString(16)),\n    pad2(Math.round(g2).toString(16)),\n    pad2(Math.round(b2).toString(16)),\n    pad2(convertDecimalToHex(a))\n  ];\n  if (allow4Char && hex2[0].startsWith(hex2[0].charAt(1)) && hex2[1].startsWith(hex2[1].charAt(1)) && hex2[2].startsWith(hex2[2].charAt(1)) && hex2[3].startsWith(hex2[3].charAt(1))) {\n    return hex2[0].charAt(0) + hex2[1].charAt(0) + hex2[2].charAt(0) + hex2[3].charAt(0);\n  }\n  return hex2.join(\"\");\n}\nfunction convertDecimalToHex(d2) {\n  return Math.round(parseFloat(d2) * 255).toString(16);\n}\nfunction convertHexToDecimal(h) {\n  return parseIntFromHex(h) / 255;\n}\nfunction parseIntFromHex(val) {\n  return parseInt(val, 16);\n}\nfunction numberInputToObject(color) {\n  return {\n    r: color >> 16,\n    g: (color & 65280) >> 8,\n    b: color & 255\n  };\n}\nvar names = {\n  aliceblue: \"#f0f8ff\",\n  antiquewhite: \"#faebd7\",\n  aqua: \"#00ffff\",\n  aquamarine: \"#7fffd4\",\n  azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  bisque: \"#ffe4c4\",\n  black: \"#000000\",\n  blanchedalmond: \"#ffebcd\",\n  blue: \"#0000ff\",\n  blueviolet: \"#8a2be2\",\n  brown: \"#a52a2a\",\n  burlywood: \"#deb887\",\n  cadetblue: \"#5f9ea0\",\n  chartreuse: \"#7fff00\",\n  chocolate: \"#d2691e\",\n  coral: \"#ff7f50\",\n  cornflowerblue: \"#6495ed\",\n  cornsilk: \"#fff8dc\",\n  crimson: \"#dc143c\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgoldenrod: \"#b8860b\",\n  darkgray: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkgrey: \"#a9a9a9\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkseagreen: \"#8fbc8f\",\n  darkslateblue: \"#483d8b\",\n  darkslategray: \"#2f4f4f\",\n  darkslategrey: \"#2f4f4f\",\n  darkturquoise: \"#00ced1\",\n  darkviolet: \"#9400d3\",\n  deeppink: \"#ff1493\",\n  deepskyblue: \"#00bfff\",\n  dimgray: \"#696969\",\n  dimgrey: \"#696969\",\n  dodgerblue: \"#1e90ff\",\n  firebrick: \"#b22222\",\n  floralwhite: \"#fffaf0\",\n  forestgreen: \"#228b22\",\n  fuchsia: \"#ff00ff\",\n  gainsboro: \"#dcdcdc\",\n  ghostwhite: \"#f8f8ff\",\n  goldenrod: \"#daa520\",\n  gold: \"#ffd700\",\n  gray: \"#808080\",\n  green: \"#008000\",\n  greenyellow: \"#adff2f\",\n  grey: \"#808080\",\n  honeydew: \"#f0fff0\",\n  hotpink: \"#ff69b4\",\n  indianred: \"#cd5c5c\",\n  indigo: \"#4b0082\",\n  ivory: \"#fffff0\",\n  khaki: \"#f0e68c\",\n  lavenderblush: \"#fff0f5\",\n  lavender: \"#e6e6fa\",\n  lawngreen: \"#7cfc00\",\n  lemonchiffon: \"#fffacd\",\n  lightblue: \"#add8e6\",\n  lightcoral: \"#f08080\",\n  lightcyan: \"#e0ffff\",\n  lightgoldenrodyellow: \"#fafad2\",\n  lightgray: \"#d3d3d3\",\n  lightgreen: \"#90ee90\",\n  lightgrey: \"#d3d3d3\",\n  lightpink: \"#ffb6c1\",\n  lightsalmon: \"#ffa07a\",\n  lightseagreen: \"#20b2aa\",\n  lightskyblue: \"#87cefa\",\n  lightslategray: \"#778899\",\n  lightslategrey: \"#778899\",\n  lightsteelblue: \"#b0c4de\",\n  lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  limegreen: \"#32cd32\",\n  linen: \"#faf0e6\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  mediumaquamarine: \"#66cdaa\",\n  mediumblue: \"#0000cd\",\n  mediumorchid: \"#ba55d3\",\n  mediumpurple: \"#9370db\",\n  mediumseagreen: \"#3cb371\",\n  mediumslateblue: \"#7b68ee\",\n  mediumspringgreen: \"#00fa9a\",\n  mediumturquoise: \"#48d1cc\",\n  mediumvioletred: \"#c71585\",\n  midnightblue: \"#191970\",\n  mintcream: \"#f5fffa\",\n  mistyrose: \"#ffe4e1\",\n  moccasin: \"#ffe4b5\",\n  navajowhite: \"#ffdead\",\n  navy: \"#000080\",\n  oldlace: \"#fdf5e6\",\n  olive: \"#808000\",\n  olivedrab: \"#6b8e23\",\n  orange: \"#ffa500\",\n  orangered: \"#ff4500\",\n  orchid: \"#da70d6\",\n  palegoldenrod: \"#eee8aa\",\n  palegreen: \"#98fb98\",\n  paleturquoise: \"#afeeee\",\n  palevioletred: \"#db7093\",\n  papayawhip: \"#ffefd5\",\n  peachpuff: \"#ffdab9\",\n  peru: \"#cd853f\",\n  pink: \"#ffc0cb\",\n  plum: \"#dda0dd\",\n  powderblue: \"#b0e0e6\",\n  purple: \"#800080\",\n  rebeccapurple: \"#663399\",\n  red: \"#ff0000\",\n  rosybrown: \"#bc8f8f\",\n  royalblue: \"#4169e1\",\n  saddlebrown: \"#8b4513\",\n  salmon: \"#fa8072\",\n  sandybrown: \"#f4a460\",\n  seagreen: \"#2e8b57\",\n  seashell: \"#fff5ee\",\n  sienna: \"#a0522d\",\n  silver: \"#c0c0c0\",\n  skyblue: \"#87ceeb\",\n  slateblue: \"#6a5acd\",\n  slategray: \"#708090\",\n  slategrey: \"#708090\",\n  snow: \"#fffafa\",\n  springgreen: \"#00ff7f\",\n  steelblue: \"#4682b4\",\n  tan: \"#d2b48c\",\n  teal: \"#008080\",\n  thistle: \"#d8bfd8\",\n  tomato: \"#ff6347\",\n  turquoise: \"#40e0d0\",\n  violet: \"#ee82ee\",\n  wheat: \"#f5deb3\",\n  white: \"#ffffff\",\n  whitesmoke: \"#f5f5f5\",\n  yellow: \"#ffff00\",\n  yellowgreen: \"#9acd32\"\n};\nfunction inputToRGB(color) {\n  var rgb = { r: 0, g: 0, b: 0 };\n  var a = 1;\n  var s = null;\n  var v2 = null;\n  var l2 = null;\n  var ok = false;\n  var format2 = false;\n  if (typeof color === \"string\") {\n    color = stringInputToObject(color);\n  }\n  if (typeof color === \"object\") {\n    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n      rgb = rgbToRgb(color.r, color.g, color.b);\n      ok = true;\n      format2 = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n      s = convertToPercentage(color.s);\n      v2 = convertToPercentage(color.v);\n      rgb = hsvToRgb(color.h, s, v2);\n      ok = true;\n      format2 = \"hsv\";\n    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n      s = convertToPercentage(color.s);\n      l2 = convertToPercentage(color.l);\n      rgb = hslToRgb(color.h, s, l2);\n      ok = true;\n      format2 = \"hsl\";\n    }\n    if (Object.prototype.hasOwnProperty.call(color, \"a\")) {\n      a = color.a;\n    }\n  }\n  a = boundAlpha(a);\n  return {\n    ok,\n    format: color.format || format2,\n    r: Math.min(255, Math.max(rgb.r, 0)),\n    g: Math.min(255, Math.max(rgb.g, 0)),\n    b: Math.min(255, Math.max(rgb.b, 0)),\n    a\n  };\n}\nvar CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\nvar CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\nvar CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\nvar PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\nvar matchers = {\n  CSS_UNIT: new RegExp(CSS_UNIT),\n  rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n  rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n  hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n  hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n  hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n  hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n  hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n  hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n  hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n};\nfunction stringInputToObject(color) {\n  color = color.trim().toLowerCase();\n  if (color.length === 0) {\n    return false;\n  }\n  var named = false;\n  if (names[color]) {\n    color = names[color];\n    named = true;\n  } else if (color === \"transparent\") {\n    return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n  }\n  var match = matchers.rgb.exec(color);\n  if (match) {\n    return { r: match[1], g: match[2], b: match[3] };\n  }\n  match = matchers.rgba.exec(color);\n  if (match) {\n    return { r: match[1], g: match[2], b: match[3], a: match[4] };\n  }\n  match = matchers.hsl.exec(color);\n  if (match) {\n    return { h: match[1], s: match[2], l: match[3] };\n  }\n  match = matchers.hsla.exec(color);\n  if (match) {\n    return { h: match[1], s: match[2], l: match[3], a: match[4] };\n  }\n  match = matchers.hsv.exec(color);\n  if (match) {\n    return { h: match[1], s: match[2], v: match[3] };\n  }\n  match = matchers.hsva.exec(color);\n  if (match) {\n    return { h: match[1], s: match[2], v: match[3], a: match[4] };\n  }\n  match = matchers.hex8.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      a: convertHexToDecimal(match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  match = matchers.hex6.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1]),\n      g: parseIntFromHex(match[2]),\n      b: parseIntFromHex(match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  match = matchers.hex4.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1] + match[1]),\n      g: parseIntFromHex(match[2] + match[2]),\n      b: parseIntFromHex(match[3] + match[3]),\n      a: convertHexToDecimal(match[4] + match[4]),\n      format: named ? \"name\" : \"hex8\"\n    };\n  }\n  match = matchers.hex3.exec(color);\n  if (match) {\n    return {\n      r: parseIntFromHex(match[1] + match[1]),\n      g: parseIntFromHex(match[2] + match[2]),\n      b: parseIntFromHex(match[3] + match[3]),\n      format: named ? \"name\" : \"hex\"\n    };\n  }\n  return false;\n}\nfunction isValidCSSUnit(color) {\n  return Boolean(matchers.CSS_UNIT.exec(String(color)));\n}\nvar TinyColor = function() {\n  function TinyColor2(color, opts) {\n    if (color === void 0) {\n      color = \"\";\n    }\n    if (opts === void 0) {\n      opts = {};\n    }\n    var _a;\n    if (color instanceof TinyColor2) {\n      return color;\n    }\n    if (typeof color === \"number\") {\n      color = numberInputToObject(color);\n    }\n    this.originalInput = color;\n    var rgb = inputToRGB(color);\n    this.originalInput = color;\n    this.r = rgb.r;\n    this.g = rgb.g;\n    this.b = rgb.b;\n    this.a = rgb.a;\n    this.roundA = Math.round(100 * this.a) / 100;\n    this.format = (_a = opts.format) !== null && _a !== void 0 ? _a : rgb.format;\n    this.gradientType = opts.gradientType;\n    if (this.r < 1) {\n      this.r = Math.round(this.r);\n    }\n    if (this.g < 1) {\n      this.g = Math.round(this.g);\n    }\n    if (this.b < 1) {\n      this.b = Math.round(this.b);\n    }\n    this.isValid = rgb.ok;\n  }\n  TinyColor2.prototype.isDark = function() {\n    return this.getBrightness() < 128;\n  };\n  TinyColor2.prototype.isLight = function() {\n    return !this.isDark();\n  };\n  TinyColor2.prototype.getBrightness = function() {\n    var rgb = this.toRgb();\n    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1e3;\n  };\n  TinyColor2.prototype.getLuminance = function() {\n    var rgb = this.toRgb();\n    var R;\n    var G;\n    var B;\n    var RsRGB = rgb.r / 255;\n    var GsRGB = rgb.g / 255;\n    var BsRGB = rgb.b / 255;\n    if (RsRGB <= 0.03928) {\n      R = RsRGB / 12.92;\n    } else {\n      R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n    }\n    if (GsRGB <= 0.03928) {\n      G = GsRGB / 12.92;\n    } else {\n      G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n    }\n    if (BsRGB <= 0.03928) {\n      B = BsRGB / 12.92;\n    } else {\n      B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n    }\n    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n  };\n  TinyColor2.prototype.getAlpha = function() {\n    return this.a;\n  };\n  TinyColor2.prototype.setAlpha = function(alpha) {\n    this.a = boundAlpha(alpha);\n    this.roundA = Math.round(100 * this.a) / 100;\n    return this;\n  };\n  TinyColor2.prototype.toHsv = function() {\n    var hsv = rgbToHsv(this.r, this.g, this.b);\n    return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this.a };\n  };\n  TinyColor2.prototype.toHsvString = function() {\n    var hsv = rgbToHsv(this.r, this.g, this.b);\n    var h = Math.round(hsv.h * 360);\n    var s = Math.round(hsv.s * 100);\n    var v2 = Math.round(hsv.v * 100);\n    return this.a === 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v2 + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v2 + \"%, \" + this.roundA + \")\";\n  };\n  TinyColor2.prototype.toHsl = function() {\n    var hsl = rgbToHsl(this.r, this.g, this.b);\n    return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this.a };\n  };\n  TinyColor2.prototype.toHslString = function() {\n    var hsl = rgbToHsl(this.r, this.g, this.b);\n    var h = Math.round(hsl.h * 360);\n    var s = Math.round(hsl.s * 100);\n    var l2 = Math.round(hsl.l * 100);\n    return this.a === 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l2 + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l2 + \"%, \" + this.roundA + \")\";\n  };\n  TinyColor2.prototype.toHex = function(allow3Char) {\n    if (allow3Char === void 0) {\n      allow3Char = false;\n    }\n    return rgbToHex(this.r, this.g, this.b, allow3Char);\n  };\n  TinyColor2.prototype.toHexString = function(allow3Char) {\n    if (allow3Char === void 0) {\n      allow3Char = false;\n    }\n    return \"#\" + this.toHex(allow3Char);\n  };\n  TinyColor2.prototype.toHex8 = function(allow4Char) {\n    if (allow4Char === void 0) {\n      allow4Char = false;\n    }\n    return rgbaToHex(this.r, this.g, this.b, this.a, allow4Char);\n  };\n  TinyColor2.prototype.toHex8String = function(allow4Char) {\n    if (allow4Char === void 0) {\n      allow4Char = false;\n    }\n    return \"#\" + this.toHex8(allow4Char);\n  };\n  TinyColor2.prototype.toRgb = function() {\n    return {\n      r: Math.round(this.r),\n      g: Math.round(this.g),\n      b: Math.round(this.b),\n      a: this.a\n    };\n  };\n  TinyColor2.prototype.toRgbString = function() {\n    var r2 = Math.round(this.r);\n    var g2 = Math.round(this.g);\n    var b2 = Math.round(this.b);\n    return this.a === 1 ? \"rgb(\" + r2 + \", \" + g2 + \", \" + b2 + \")\" : \"rgba(\" + r2 + \", \" + g2 + \", \" + b2 + \", \" + this.roundA + \")\";\n  };\n  TinyColor2.prototype.toPercentageRgb = function() {\n    var fmt = function(x2) {\n      return Math.round(bound01(x2, 255) * 100) + \"%\";\n    };\n    return {\n      r: fmt(this.r),\n      g: fmt(this.g),\n      b: fmt(this.b),\n      a: this.a\n    };\n  };\n  TinyColor2.prototype.toPercentageRgbString = function() {\n    var rnd = function(x2) {\n      return Math.round(bound01(x2, 255) * 100);\n    };\n    return this.a === 1 ? \"rgb(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%)\" : \"rgba(\" + rnd(this.r) + \"%, \" + rnd(this.g) + \"%, \" + rnd(this.b) + \"%, \" + this.roundA + \")\";\n  };\n  TinyColor2.prototype.toName = function() {\n    if (this.a === 0) {\n      return \"transparent\";\n    }\n    if (this.a < 1) {\n      return false;\n    }\n    var hex2 = \"#\" + rgbToHex(this.r, this.g, this.b, false);\n    for (var _i = 0, _a = Object.entries(names); _i < _a.length; _i++) {\n      var _b = _a[_i], key2 = _b[0], value = _b[1];\n      if (hex2 === value) {\n        return key2;\n      }\n    }\n    return false;\n  };\n  TinyColor2.prototype.toString = function(format2) {\n    var formatSet = Boolean(format2);\n    format2 = format2 !== null && format2 !== void 0 ? format2 : this.format;\n    var formattedString = false;\n    var hasAlpha = this.a < 1 && this.a >= 0;\n    var needsAlphaFormat = !formatSet && hasAlpha && (format2.startsWith(\"hex\") || format2 === \"name\");\n    if (needsAlphaFormat) {\n      if (format2 === \"name\" && this.a === 0) {\n        return this.toName();\n      }\n      return this.toRgbString();\n    }\n    if (format2 === \"rgb\") {\n      formattedString = this.toRgbString();\n    }\n    if (format2 === \"prgb\") {\n      formattedString = this.toPercentageRgbString();\n    }\n    if (format2 === \"hex\" || format2 === \"hex6\") {\n      formattedString = this.toHexString();\n    }\n    if (format2 === \"hex3\") {\n      formattedString = this.toHexString(true);\n    }\n    if (format2 === \"hex4\") {\n      formattedString = this.toHex8String(true);\n    }\n    if (format2 === \"hex8\") {\n      formattedString = this.toHex8String();\n    }\n    if (format2 === \"name\") {\n      formattedString = this.toName();\n    }\n    if (format2 === \"hsl\") {\n      formattedString = this.toHslString();\n    }\n    if (format2 === \"hsv\") {\n      formattedString = this.toHsvString();\n    }\n    return formattedString || this.toHexString();\n  };\n  TinyColor2.prototype.toNumber = function() {\n    return (Math.round(this.r) << 16) + (Math.round(this.g) << 8) + Math.round(this.b);\n  };\n  TinyColor2.prototype.clone = function() {\n    return new TinyColor2(this.toString());\n  };\n  TinyColor2.prototype.lighten = function(amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.brighten = function(amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var rgb = this.toRgb();\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return new TinyColor2(rgb);\n  };\n  TinyColor2.prototype.darken = function(amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.tint = function(amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    return this.mix(\"white\", amount);\n  };\n  TinyColor2.prototype.shade = function(amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    return this.mix(\"black\", amount);\n  };\n  TinyColor2.prototype.desaturate = function(amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.saturate = function(amount) {\n    if (amount === void 0) {\n      amount = 10;\n    }\n    var hsl = this.toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.greyscale = function() {\n    return this.desaturate(100);\n  };\n  TinyColor2.prototype.spin = function(amount) {\n    var hsl = this.toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.mix = function(color, amount) {\n    if (amount === void 0) {\n      amount = 50;\n    }\n    var rgb1 = this.toRgb();\n    var rgb2 = new TinyColor2(color).toRgb();\n    var p2 = amount / 100;\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p2 + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p2 + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p2 + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p2 + rgb1.a\n    };\n    return new TinyColor2(rgba);\n  };\n  TinyColor2.prototype.analogous = function(results, slices) {\n    if (results === void 0) {\n      results = 6;\n    }\n    if (slices === void 0) {\n      slices = 30;\n    }\n    var hsl = this.toHsl();\n    var part = 360 / slices;\n    var ret = [this];\n    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results; ) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(new TinyColor2(hsl));\n    }\n    return ret;\n  };\n  TinyColor2.prototype.complement = function() {\n    var hsl = this.toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return new TinyColor2(hsl);\n  };\n  TinyColor2.prototype.monochromatic = function(results) {\n    if (results === void 0) {\n      results = 6;\n    }\n    var hsv = this.toHsv();\n    var h = hsv.h;\n    var s = hsv.s;\n    var v2 = hsv.v;\n    var res = [];\n    var modification = 1 / results;\n    while (results--) {\n      res.push(new TinyColor2({ h, s, v: v2 }));\n      v2 = (v2 + modification) % 1;\n    }\n    return res;\n  };\n  TinyColor2.prototype.splitcomplement = function() {\n    var hsl = this.toHsl();\n    var h = hsl.h;\n    return [\n      this,\n      new TinyColor2({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n      new TinyColor2({ h: (h + 216) % 360, s: hsl.s, l: hsl.l })\n    ];\n  };\n  TinyColor2.prototype.onBackground = function(background) {\n    var fg = this.toRgb();\n    var bg = new TinyColor2(background).toRgb();\n    return new TinyColor2({\n      r: bg.r + (fg.r - bg.r) * fg.a,\n      g: bg.g + (fg.g - bg.g) * fg.a,\n      b: bg.b + (fg.b - bg.b) * fg.a\n    });\n  };\n  TinyColor2.prototype.triad = function() {\n    return this.polyad(3);\n  };\n  TinyColor2.prototype.tetrad = function() {\n    return this.polyad(4);\n  };\n  TinyColor2.prototype.polyad = function(n2) {\n    var hsl = this.toHsl();\n    var h = hsl.h;\n    var result = [this];\n    var increment = 360 / n2;\n    for (var i = 1; i < n2; i++) {\n      result.push(new TinyColor2({ h: (h + i * increment) % 360, s: hsl.s, l: hsl.l }));\n    }\n    return result;\n  };\n  TinyColor2.prototype.equals = function(color) {\n    return this.toRgbString() === new TinyColor2(color).toRgbString();\n  };\n  return TinyColor2;\n}();\nvar hueStep = 2;\nvar saturationStep = 0.16;\nvar saturationStep2 = 0.05;\nvar brightnessStep1 = 0.05;\nvar brightnessStep2 = 0.15;\nvar lightColorCount = 5;\nvar darkColorCount = 4;\nvar darkColorMap = [{\n  index: 7,\n  opacity: 0.15\n}, {\n  index: 6,\n  opacity: 0.25\n}, {\n  index: 5,\n  opacity: 0.3\n}, {\n  index: 5,\n  opacity: 0.45\n}, {\n  index: 5,\n  opacity: 0.65\n}, {\n  index: 5,\n  opacity: 0.85\n}, {\n  index: 4,\n  opacity: 0.9\n}, {\n  index: 3,\n  opacity: 0.95\n}, {\n  index: 2,\n  opacity: 0.97\n}, {\n  index: 1,\n  opacity: 0.98\n}];\nfunction toHsv(_ref) {\n  var r2 = _ref.r, g2 = _ref.g, b2 = _ref.b;\n  var hsv = rgbToHsv(r2, g2, b2);\n  return {\n    h: hsv.h * 360,\n    s: hsv.s,\n    v: hsv.v\n  };\n}\nfunction toHex(_ref2) {\n  var r2 = _ref2.r, g2 = _ref2.g, b2 = _ref2.b;\n  return \"#\".concat(rgbToHex(r2, g2, b2, false));\n}\nfunction mix$1(rgb1, rgb2, amount) {\n  var p2 = amount / 100;\n  var rgb = {\n    r: (rgb2.r - rgb1.r) * p2 + rgb1.r,\n    g: (rgb2.g - rgb1.g) * p2 + rgb1.g,\n    b: (rgb2.b - rgb1.b) * p2 + rgb1.b\n  };\n  return rgb;\n}\nfunction getHue(hsv, i, light) {\n  var hue;\n  if (Math.round(hsv.h) >= 60 && Math.round(hsv.h) <= 240) {\n    hue = light ? Math.round(hsv.h) - hueStep * i : Math.round(hsv.h) + hueStep * i;\n  } else {\n    hue = light ? Math.round(hsv.h) + hueStep * i : Math.round(hsv.h) - hueStep * i;\n  }\n  if (hue < 0) {\n    hue += 360;\n  } else if (hue >= 360) {\n    hue -= 360;\n  }\n  return hue;\n}\nfunction getSaturation(hsv, i, light) {\n  if (hsv.h === 0 && hsv.s === 0) {\n    return hsv.s;\n  }\n  var saturation;\n  if (light) {\n    saturation = hsv.s - saturationStep * i;\n  } else if (i === darkColorCount) {\n    saturation = hsv.s + saturationStep;\n  } else {\n    saturation = hsv.s + saturationStep2 * i;\n  }\n  if (saturation > 1) {\n    saturation = 1;\n  }\n  if (light && i === lightColorCount && saturation > 0.1) {\n    saturation = 0.1;\n  }\n  if (saturation < 0.06) {\n    saturation = 0.06;\n  }\n  return Number(saturation.toFixed(2));\n}\nfunction getValue$4(hsv, i, light) {\n  var value;\n  if (light) {\n    value = hsv.v + brightnessStep1 * i;\n  } else {\n    value = hsv.v - brightnessStep2 * i;\n  }\n  if (value > 1) {\n    value = 1;\n  }\n  return Number(value.toFixed(2));\n}\nfunction generate$1(color) {\n  var opts = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  var patterns = [];\n  var pColor = inputToRGB(color);\n  for (var i = lightColorCount; i > 0; i -= 1) {\n    var hsv = toHsv(pColor);\n    var colorString = toHex(inputToRGB({\n      h: getHue(hsv, i, true),\n      s: getSaturation(hsv, i, true),\n      v: getValue$4(hsv, i, true)\n    }));\n    patterns.push(colorString);\n  }\n  patterns.push(toHex(pColor));\n  for (var _i = 1; _i <= darkColorCount; _i += 1) {\n    var _hsv = toHsv(pColor);\n    var _colorString = toHex(inputToRGB({\n      h: getHue(_hsv, _i),\n      s: getSaturation(_hsv, _i),\n      v: getValue$4(_hsv, _i)\n    }));\n    patterns.push(_colorString);\n  }\n  if (opts.theme === \"dark\") {\n    return darkColorMap.map(function(_ref3) {\n      var index2 = _ref3.index, opacity = _ref3.opacity;\n      var darkColorString = toHex(mix$1(inputToRGB(opts.backgroundColor || \"#141414\"), inputToRGB(patterns[index2]), opacity * 100));\n      return darkColorString;\n    });\n  }\n  return patterns;\n}\nvar presetPrimaryColors = {\n  red: \"#F5222D\",\n  volcano: \"#FA541C\",\n  orange: \"#FA8C16\",\n  gold: \"#FAAD14\",\n  yellow: \"#FADB14\",\n  lime: \"#A0D911\",\n  green: \"#52C41A\",\n  cyan: \"#13C2C2\",\n  blue: \"#1890FF\",\n  geekblue: \"#2F54EB\",\n  purple: \"#722ED1\",\n  magenta: \"#EB2F96\",\n  grey: \"#666666\"\n};\nvar presetPalettes = {};\nvar presetDarkPalettes = {};\nObject.keys(presetPrimaryColors).forEach(function(key2) {\n  presetPalettes[key2] = generate$1(presetPrimaryColors[key2]);\n  presetPalettes[key2].primary = presetPalettes[key2][5];\n  presetDarkPalettes[key2] = generate$1(presetPrimaryColors[key2], {\n    theme: \"dark\",\n    backgroundColor: \"#141414\"\n  });\n  presetDarkPalettes[key2].primary = presetDarkPalettes[key2][5];\n});\npresetPalettes.red;\npresetPalettes.volcano;\npresetPalettes.gold;\npresetPalettes.orange;\npresetPalettes.yellow;\npresetPalettes.lime;\npresetPalettes.green;\npresetPalettes.cyan;\npresetPalettes.blue;\npresetPalettes.geekblue;\npresetPalettes.purple;\npresetPalettes.magenta;\npresetPalettes.grey;\nvar warned = {};\nfunction warning$2(valid, message2) {\n}\nfunction call(method4, valid, message2) {\n  if (!valid && !warned[message2]) {\n    method4(false, message2);\n    warned[message2] = true;\n  }\n}\nfunction warningOnce(valid, message2) {\n  call(warning$2, valid, message2);\n}\nvar MARK_KEY = \"rc-util-key\";\nfunction getMark() {\n  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, mark = _ref.mark;\n  if (mark) {\n    return mark.startsWith(\"data-\") ? mark : \"data-\".concat(mark);\n  }\n  return MARK_KEY;\n}\nfunction getContainer$1(option) {\n  if (option.attachTo) {\n    return option.attachTo;\n  }\n  var head = document.querySelector(\"head\");\n  return head || document.body;\n}\nfunction injectCSS(css2) {\n  var _option$csp;\n  var option = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  if (!canUseDom()) {\n    return null;\n  }\n  var styleNode = document.createElement(\"style\");\n  if ((_option$csp = option.csp) === null || _option$csp === void 0 ? void 0 : _option$csp.nonce) {\n    var _option$csp2;\n    styleNode.nonce = (_option$csp2 = option.csp) === null || _option$csp2 === void 0 ? void 0 : _option$csp2.nonce;\n  }\n  styleNode.innerHTML = css2;\n  var container = getContainer$1(option);\n  var firstChild = container.firstChild;\n  if (option.prepend && container.prepend) {\n    container.prepend(styleNode);\n  } else if (option.prepend && firstChild) {\n    container.insertBefore(styleNode, firstChild);\n  } else {\n    container.appendChild(styleNode);\n  }\n  return styleNode;\n}\nvar containerCache = /* @__PURE__ */ new Map();\nfunction findExistNode(key2) {\n  var option = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  var container = getContainer$1(option);\n  return Array.from(containerCache.get(container).children).find(function(node) {\n    return node.tagName === \"STYLE\" && node.getAttribute(getMark(option)) === key2;\n  });\n}\nfunction updateCSS(css2, key2) {\n  var option = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  var container = getContainer$1(option);\n  if (!containerCache.has(container)) {\n    var placeholderStyle = injectCSS(\"\", option);\n    var parentNode = placeholderStyle.parentNode;\n    containerCache.set(container, parentNode);\n    parentNode.removeChild(placeholderStyle);\n  }\n  var existNode = findExistNode(key2, option);\n  if (existNode) {\n    var _option$csp3, _option$csp4;\n    if (((_option$csp3 = option.csp) === null || _option$csp3 === void 0 ? void 0 : _option$csp3.nonce) && existNode.nonce !== ((_option$csp4 = option.csp) === null || _option$csp4 === void 0 ? void 0 : _option$csp4.nonce)) {\n      var _option$csp5;\n      existNode.nonce = (_option$csp5 = option.csp) === null || _option$csp5 === void 0 ? void 0 : _option$csp5.nonce;\n    }\n    if (existNode.innerHTML !== css2) {\n      existNode.innerHTML = css2;\n    }\n    return existNode;\n  }\n  var newNode = injectCSS(css2, option);\n  newNode.setAttribute(getMark(option), key2);\n  return newNode;\n}\nfunction warning$1(valid, message2) {\n  warningOnce(valid, \"[@ant-design/icons] \".concat(message2));\n}\nfunction isIconDefinition(target) {\n  return _typeof$1(target) === \"object\" && typeof target.name === \"string\" && typeof target.theme === \"string\" && (_typeof$1(target.icon) === \"object\" || typeof target.icon === \"function\");\n}\nfunction normalizeAttrs() {\n  var attrs = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n  return Object.keys(attrs).reduce(function(acc, key2) {\n    var val = attrs[key2];\n    switch (key2) {\n      case \"class\":\n        acc.className = val;\n        delete acc.class;\n        break;\n      default:\n        acc[key2] = val;\n    }\n    return acc;\n  }, {});\n}\nfunction generate(node, key2, rootProps) {\n  if (!rootProps) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(node.tag, _objectSpread2$1({\n      key: key2\n    }, normalizeAttrs(node.attrs)), (node.children || []).map(function(child, index2) {\n      return generate(child, \"\".concat(key2, \"-\").concat(node.tag, \"-\").concat(index2));\n    }));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(node.tag, _objectSpread2$1(_objectSpread2$1({\n    key: key2\n  }, normalizeAttrs(node.attrs)), rootProps), (node.children || []).map(function(child, index2) {\n    return generate(child, \"\".concat(key2, \"-\").concat(node.tag, \"-\").concat(index2));\n  }));\n}\nfunction getSecondaryColor(primaryColor) {\n  return generate$1(primaryColor)[0];\n}\nfunction normalizeTwoToneColors(twoToneColor) {\n  if (!twoToneColor) {\n    return [];\n  }\n  return Array.isArray(twoToneColor) ? twoToneColor : [twoToneColor];\n}\nvar iconStyles = \"\\n.anticon {\\n  display: inline-block;\\n  color: inherit;\\n  font-style: normal;\\n  line-height: 0;\\n  text-align: center;\\n  text-transform: none;\\n  vertical-align: -0.125em;\\n  text-rendering: optimizeLegibility;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\n.anticon > * {\\n  line-height: 1;\\n}\\n\\n.anticon svg {\\n  display: inline-block;\\n}\\n\\n.anticon::before {\\n  display: none;\\n}\\n\\n.anticon .anticon-icon {\\n  display: block;\\n}\\n\\n.anticon[tabindex] {\\n  cursor: pointer;\\n}\\n\\n.anticon-spin::before,\\n.anticon-spin {\\n  display: inline-block;\\n  -webkit-animation: loadingCircle 1s infinite linear;\\n  animation: loadingCircle 1s infinite linear;\\n}\\n\\n@-webkit-keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n@keyframes loadingCircle {\\n  100% {\\n    -webkit-transform: rotate(360deg);\\n    transform: rotate(360deg);\\n  }\\n}\\n\";\nvar useInsertStyles = function useInsertStyles2() {\n  var styleStr = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : iconStyles;\n  var _useContext = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(IconContext$1), csp = _useContext.csp;\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    updateCSS(styleStr, \"@ant-design-icons\", {\n      prepend: true,\n      csp\n    });\n  }, []);\n};\nvar _excluded$5 = [\"icon\", \"className\", \"onClick\", \"style\", \"primaryColor\", \"secondaryColor\"];\nvar twoToneColorPalette = {\n  primaryColor: \"#333\",\n  secondaryColor: \"#E6E6E6\",\n  calculated: false\n};\nfunction setTwoToneColors(_ref) {\n  var primaryColor = _ref.primaryColor, secondaryColor = _ref.secondaryColor;\n  twoToneColorPalette.primaryColor = primaryColor;\n  twoToneColorPalette.secondaryColor = secondaryColor || getSecondaryColor(primaryColor);\n  twoToneColorPalette.calculated = !!secondaryColor;\n}\nfunction getTwoToneColors() {\n  return _objectSpread2$1({}, twoToneColorPalette);\n}\nvar IconBase = function IconBase2(props) {\n  var icon = props.icon, className = props.className, onClick = props.onClick, style2 = props.style, primaryColor = props.primaryColor, secondaryColor = props.secondaryColor, restProps = _objectWithoutProperties(props, _excluded$5);\n  var colors = twoToneColorPalette;\n  if (primaryColor) {\n    colors = {\n      primaryColor,\n      secondaryColor: secondaryColor || getSecondaryColor(primaryColor)\n    };\n  }\n  useInsertStyles();\n  warning$1(isIconDefinition(icon), \"icon should be icon definiton, but got \".concat(icon));\n  if (!isIconDefinition(icon)) {\n    return null;\n  }\n  var target = icon;\n  if (target && typeof target.icon === \"function\") {\n    target = _objectSpread2$1(_objectSpread2$1({}, target), {}, {\n      icon: target.icon(colors.primaryColor, colors.secondaryColor)\n    });\n  }\n  return generate(target.icon, \"svg-\".concat(target.name), _objectSpread2$1({\n    className,\n    onClick,\n    style: style2,\n    \"data-icon\": target.name,\n    width: \"1em\",\n    height: \"1em\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\"\n  }, restProps));\n};\nIconBase.displayName = \"IconReact\";\nIconBase.getTwoToneColors = getTwoToneColors;\nIconBase.setTwoToneColors = setTwoToneColors;\nvar ReactIcon = IconBase;\nfunction setTwoToneColor(twoToneColor) {\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor), _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2), primaryColor = _normalizeTwoToneColo2[0], secondaryColor = _normalizeTwoToneColo2[1];\n  return ReactIcon.setTwoToneColors({\n    primaryColor,\n    secondaryColor\n  });\n}\nfunction getTwoToneColor() {\n  var colors = ReactIcon.getTwoToneColors();\n  if (!colors.calculated) {\n    return colors.primaryColor;\n  }\n  return [colors.primaryColor, colors.secondaryColor];\n}\nvar _excluded$4 = [\"className\", \"icon\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"twoToneColor\"];\nsetTwoToneColor(\"#1890ff\");\nvar Icon = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(props, ref) {\n  var _classNames;\n  var className = props.className, icon = props.icon, spin = props.spin, rotate = props.rotate, tabIndex = props.tabIndex, onClick = props.onClick, twoToneColor = props.twoToneColor, restProps = _objectWithoutProperties(props, _excluded$4);\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(IconContext$1), _React$useContext$pre = _React$useContext.prefixCls, prefixCls = _React$useContext$pre === void 0 ? \"anticon\" : _React$useContext$pre;\n  var classString = classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(icon.name), !!icon.name), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-spin\"), !!spin || icon.name === \"loading\"), _classNames), className);\n  var iconTabIndex = tabIndex;\n  if (iconTabIndex === void 0 && onClick) {\n    iconTabIndex = -1;\n  }\n  var svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : void 0;\n  var _normalizeTwoToneColo = normalizeTwoToneColors(twoToneColor), _normalizeTwoToneColo2 = _slicedToArray(_normalizeTwoToneColo, 2), primaryColor = _normalizeTwoToneColo2[0], secondaryColor = _normalizeTwoToneColo2[1];\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", _objectSpread2$1(_objectSpread2$1({\n    role: \"img\",\n    \"aria-label\": icon.name\n  }, restProps), {}, {\n    ref,\n    tabIndex: iconTabIndex,\n    onClick,\n    className: classString\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ReactIcon, {\n    icon,\n    primaryColor,\n    secondaryColor,\n    style: svgStyle\n  }));\n});\nIcon.displayName = \"AntdIcon\";\nIcon.getTwoToneColor = getTwoToneColor;\nIcon.setTwoToneColor = setTwoToneColor;\nvar AntdIcon = Icon;\nvar LoadingOutlined = function LoadingOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: LoadingOutlinedSvg\n  }));\n};\nLoadingOutlined.displayName = \"LoadingOutlined\";\nvar LoadingOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(LoadingOutlined);\nvar ExclamationCircleFilled$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"filled\" };\nvar ExclamationCircleFilledSvg = ExclamationCircleFilled$2;\nvar ExclamationCircleFilled = function ExclamationCircleFilled2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: ExclamationCircleFilledSvg\n  }));\n};\nExclamationCircleFilled.displayName = \"ExclamationCircleFilled\";\nvar ExclamationCircleFilled$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(ExclamationCircleFilled);\nvar CloseCircleFilled$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\" } }] }, \"name\": \"close-circle\", \"theme\": \"filled\" };\nvar CloseCircleFilledSvg = CloseCircleFilled$2;\nvar CloseCircleFilled = function CloseCircleFilled2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: CloseCircleFilledSvg\n  }));\n};\nCloseCircleFilled.displayName = \"CloseCircleFilled\";\nvar CloseCircleFilled$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(CloseCircleFilled);\nvar CheckCircleFilled$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nvar CheckCircleFilledSvg = CheckCircleFilled$2;\nvar CheckCircleFilled = function CheckCircleFilled2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nCheckCircleFilled.displayName = \"CheckCircleFilled\";\nvar CheckCircleFilled$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(CheckCircleFilled);\nvar InfoCircleFilled$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm32 664c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V456c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272zm-32-344a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"info-circle\", \"theme\": \"filled\" };\nvar InfoCircleFilledSvg = InfoCircleFilled$2;\nvar InfoCircleFilled = function InfoCircleFilled2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: InfoCircleFilledSvg\n  }));\n};\nInfoCircleFilled.displayName = \"InfoCircleFilled\";\nvar InfoCircleFilled$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(InfoCircleFilled);\nfunction toArray$1(children) {\n  var option = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  var ret = [];\n  react__WEBPACK_IMPORTED_MODULE_0___default().Children.forEach(children, function(child) {\n    if ((child === void 0 || child === null) && !option.keepEmpty) {\n      return;\n    }\n    if (Array.isArray(child)) {\n      ret = ret.concat(toArray$1(child));\n    } else if (reactIs.exports.isFragment(child) && child.props) {\n      ret = ret.concat(toArray$1(child.props.children, option));\n    } else {\n      ret.push(child);\n    }\n  });\n  return ret;\n}\nvar HOOK_MARK = \"RC_FORM_INTERNAL_HOOKS\";\nvar warningFunc = function warningFunc2() {\n  warningOnce(false, \"Can not find FormContext. Please make sure you wrap Field under Form.\");\n};\nvar Context = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  getFieldValue: warningFunc,\n  getFieldsValue: warningFunc,\n  getFieldError: warningFunc,\n  getFieldWarning: warningFunc,\n  getFieldsError: warningFunc,\n  isFieldsTouched: warningFunc,\n  isFieldTouched: warningFunc,\n  isFieldValidating: warningFunc,\n  isFieldsValidating: warningFunc,\n  resetFields: warningFunc,\n  setFields: warningFunc,\n  setFieldsValue: warningFunc,\n  validateFields: warningFunc,\n  submit: warningFunc,\n  getInternalHooks: function getInternalHooks() {\n    warningFunc();\n    return {\n      dispatch: warningFunc,\n      initEntityValue: warningFunc,\n      registerField: warningFunc,\n      useSubscribe: warningFunc,\n      setInitialValues: warningFunc,\n      setCallbacks: warningFunc,\n      getFields: warningFunc,\n      setValidateMessages: warningFunc,\n      setPreserve: warningFunc,\n      getInitialValue: warningFunc\n    };\n  }\n});\nfunction toArray(value) {\n  if (value === void 0 || value === null) {\n    return [];\n  }\n  return Array.isArray(value) ? value : [value];\n}\nvar runtime = { exports: {} };\n(function(module) {\n  var runtime2 = function(exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1;\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n    function define(obj, key2, value) {\n      Object.defineProperty(obj, key2, {\n        value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n      return obj[key2];\n    }\n    try {\n      define({}, \"\");\n    } catch (err) {\n      define = function(obj, key2, value) {\n        return obj[key2] = value;\n      };\n    }\n    function wrap(innerFn, outerFn, self2, tryLocsList) {\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context2(tryLocsList || []);\n      generator._invoke = makeInvokeMethod(innerFn, self2, context);\n      return generator;\n    }\n    exports.wrap = wrap;\n    function tryCatch(fn, obj, arg) {\n      try {\n        return { type: \"normal\", arg: fn.call(obj, arg) };\n      } catch (err) {\n        return { type: \"throw\", arg: err };\n      }\n    }\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\";\n    var ContinueSentinel = {};\n    function Generator() {\n    }\n    function GeneratorFunction() {\n    }\n    function GeneratorFunctionPrototype() {\n    }\n    var IteratorPrototype = {};\n    define(IteratorPrototype, iteratorSymbol, function() {\n      return this;\n    });\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = GeneratorFunctionPrototype;\n    define(Gp, \"constructor\", GeneratorFunctionPrototype);\n    define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n    GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\");\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function(method4) {\n        define(prototype, method4, function(arg) {\n          return this._invoke(method4, arg);\n        });\n      });\n    }\n    exports.isGeneratorFunction = function(genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n    exports.mark = function(genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n        define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n      }\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    };\n    exports.awrap = function(arg) {\n      return { __await: arg };\n    };\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method4, arg, resolve, reject) {\n        var record = tryCatch(generator[method4], generator, arg);\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function(value2) {\n              invoke(\"next\", value2, resolve, reject);\n            }, function(err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n          return PromiseImpl.resolve(value).then(function(unwrapped) {\n            result.value = unwrapped;\n            resolve(result);\n          }, function(error) {\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n      var previousPromise;\n      function enqueue(method4, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function(resolve, reject) {\n            invoke(method4, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n      this._invoke = enqueue;\n    }\n    defineIteratorMethods(AsyncIterator.prototype);\n    define(AsyncIterator.prototype, asyncIteratorSymbol, function() {\n      return this;\n    });\n    exports.AsyncIterator = AsyncIterator;\n    exports.async = function(innerFn, outerFn, self2, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0)\n        PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self2, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function(result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n    function makeInvokeMethod(innerFn, self2, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method4, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n        if (state === GenStateCompleted) {\n          if (method4 === \"throw\") {\n            throw arg;\n          }\n          return doneResult();\n        }\n        context.method = method4;\n        context.arg = arg;\n        while (true) {\n          var delegate = context.delegate;\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel)\n                continue;\n              return delegateResult;\n            }\n          }\n          if (context.method === \"next\") {\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self2, context);\n          if (record.type === \"normal\") {\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted;\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    }\n    function maybeInvokeDelegate(delegate, context) {\n      var method4 = delegate.iterator[context.method];\n      if (method4 === undefined$1) {\n        context.delegate = null;\n        if (context.method === \"throw\") {\n          if (delegate.iterator[\"return\"]) {\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n            if (context.method === \"throw\") {\n              return ContinueSentinel;\n            }\n          }\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n        return ContinueSentinel;\n      }\n      var record = tryCatch(method4, delegate.iterator, context.arg);\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n      var info = record.arg;\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n      if (info.done) {\n        context[delegate.resultName] = info.value;\n        context.next = delegate.nextLoc;\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        return info;\n      }\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n    defineIteratorMethods(Gp);\n    define(Gp, toStringTagSymbol, \"Generator\");\n    define(Gp, iteratorSymbol, function() {\n      return this;\n    });\n    define(Gp, \"toString\", function() {\n      return \"[object Generator]\";\n    });\n    function pushTryEntry(locs) {\n      var entry = { tryLoc: locs[0] };\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n      this.tryEntries.push(entry);\n    }\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n    function Context2(tryLocsList) {\n      this.tryEntries = [{ tryLoc: \"root\" }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n    exports.keys = function(object4) {\n      var keys2 = [];\n      for (var key2 in object4) {\n        keys2.push(key2);\n      }\n      keys2.reverse();\n      return function next() {\n        while (keys2.length) {\n          var key3 = keys2.pop();\n          if (key3 in object4) {\n            next.value = key3;\n            next.done = false;\n            return next;\n          }\n        }\n        next.done = true;\n        return next;\n      };\n    };\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n        if (!isNaN(iterable.length)) {\n          var i = -1, next = function next2() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next2.value = iterable[i];\n                next2.done = false;\n                return next2;\n              }\n            }\n            next2.value = undefined$1;\n            next2.done = true;\n            return next2;\n          };\n          return next.next = next;\n        }\n      }\n      return { next: doneResult };\n    }\n    exports.values = values;\n    function doneResult() {\n      return { value: undefined$1, done: true };\n    }\n    Context2.prototype = {\n      constructor: Context2,\n      reset: function(skipTempReset) {\n        this.prev = 0;\n        this.next = 0;\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n        if (!skipTempReset) {\n          for (var name in this) {\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function() {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n        return this.rval;\n      },\n      dispatchException: function(exception) {\n        if (this.done) {\n          throw exception;\n        }\n        var context = this;\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n          if (caught) {\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n          return !!caught;\n        }\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n          if (entry.tryLoc === \"root\") {\n            return handle(\"end\");\n          }\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function(type4, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n        if (finallyEntry && (type4 === \"break\" || type4 === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          finallyEntry = null;\n        }\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type4;\n        record.arg = arg;\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n        return this.complete(record);\n      },\n      complete: function(record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n        return ContinueSentinel;\n      },\n      finish: function(finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function(tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n            return thrown;\n          }\n        }\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function(iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName,\n          nextLoc\n        };\n        if (this.method === \"next\") {\n          this.arg = undefined$1;\n        }\n        return ContinueSentinel;\n      }\n    };\n    return exports;\n  }(module.exports);\n  try {\n    regeneratorRuntime = runtime2;\n  } catch (accidentalStrictMode) {\n    if (typeof globalThis === \"object\") {\n      globalThis.regeneratorRuntime = runtime2;\n    } else {\n      Function(\"r\", \"regeneratorRuntime = r\")(runtime2);\n    }\n  }\n})(runtime);\nvar regenerator = runtime.exports;\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key2, arg) {\n  try {\n    var info = gen[key2](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function() {\n    var self2 = this, args = arguments;\n    return new Promise(function(resolve, reject) {\n      var gen = fn.apply(self2, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(void 0);\n    });\n  };\n}\nfunction _extends() {\n  _extends = Object.assign || function(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key2 in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key2)) {\n          target[key2] = source[key2];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf2(o2) {\n    return o2.__proto__ || Object.getPrototypeOf(o2);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p2) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p3) {\n    o2.__proto__ = p3;\n    return o2;\n  };\n  return _setPrototypeOf(o, p2);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct)\n    return false;\n  if (Reflect.construct.sham)\n    return false;\n  if (typeof Proxy === \"function\")\n    return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {\n    }));\n    return true;\n  } catch (e2) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct2(Parent2, args2, Class2) {\n      var a = [null];\n      a.push.apply(a, args2);\n      var Constructor = Function.bind.apply(Parent2, a);\n      var instance = new Constructor();\n      if (Class2)\n        _setPrototypeOf(instance, Class2.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? /* @__PURE__ */ new Map() : void 0;\n  _wrapNativeSuper = function _wrapNativeSuper2(Class2) {\n    if (Class2 === null || !_isNativeFunction(Class2))\n      return Class2;\n    if (typeof Class2 !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class2))\n        return _cache.get(Class2);\n      _cache.set(Class2, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class2, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class2.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class2);\n  };\n  return _wrapNativeSuper(Class);\n}\nvar formatRegExp = /%[sdj%]/g;\nvar warning = function warning2() {\n};\nif (typeof process !== \"undefined\" && process.env && false) {}\nfunction convertFieldsError(errors) {\n  if (!errors || !errors.length)\n    return null;\n  var fields = {};\n  errors.forEach(function(error) {\n    var field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\nfunction format(template) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n  var i = 0;\n  var len = args.length;\n  if (typeof template === \"function\") {\n    return template.apply(null, args);\n  }\n  if (typeof template === \"string\") {\n    var str = template.replace(formatRegExp, function(x2) {\n      if (x2 === \"%%\") {\n        return \"%\";\n      }\n      if (i >= len) {\n        return x2;\n      }\n      switch (x2) {\n        case \"%s\":\n          return String(args[i++]);\n        case \"%d\":\n          return Number(args[i++]);\n        case \"%j\":\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return \"[Circular]\";\n          }\n          break;\n        default:\n          return x2;\n      }\n    });\n    return str;\n  }\n  return template;\n}\nfunction isNativeStringType(type4) {\n  return type4 === \"string\" || type4 === \"url\" || type4 === \"hex\" || type4 === \"email\" || type4 === \"date\" || type4 === \"pattern\";\n}\nfunction isEmptyValue(value, type4) {\n  if (value === void 0 || value === null) {\n    return true;\n  }\n  if (type4 === \"array\" && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type4) && typeof value === \"string\" && !value) {\n    return true;\n  }\n  return false;\n}\nfunction asyncParallelArray(arr, func, callback) {\n  var results = [];\n  var total = 0;\n  var arrLength = arr.length;\n  function count(errors) {\n    results.push.apply(results, errors || []);\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n  arr.forEach(function(a) {\n    func(a, count);\n  });\n}\nfunction asyncSerialArray(arr, func, callback) {\n  var index2 = 0;\n  var arrLength = arr.length;\n  function next(errors) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    var original = index2;\n    index2 = index2 + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n  next([]);\n}\nfunction flattenObjArr(objArr) {\n  var ret = [];\n  Object.keys(objArr).forEach(function(k2) {\n    ret.push.apply(ret, objArr[k2] || []);\n  });\n  return ret;\n}\nvar AsyncValidationError = /* @__PURE__ */ function(_Error) {\n  _inheritsLoose(AsyncValidationError2, _Error);\n  function AsyncValidationError2(errors, fields) {\n    var _this;\n    _this = _Error.call(this, \"Async Validation Error\") || this;\n    _this.errors = errors;\n    _this.fields = fields;\n    return _this;\n  }\n  return AsyncValidationError2;\n}(/* @__PURE__ */ _wrapNativeSuper(Error));\nfunction asyncMap(objArr, option, func, callback, source) {\n  if (option.first) {\n    var _pending = new Promise(function(resolve, reject) {\n      var next = function next2(errors) {\n        callback(errors);\n        return errors.length ? reject(new AsyncValidationError(errors, convertFieldsError(errors))) : resolve(source);\n      };\n      var flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    _pending[\"catch\"](function(e2) {\n      return e2;\n    });\n    return _pending;\n  }\n  var firstFields = option.firstFields === true ? Object.keys(objArr) : option.firstFields || [];\n  var objArrKeys = Object.keys(objArr);\n  var objArrLength = objArrKeys.length;\n  var total = 0;\n  var results = [];\n  var pending = new Promise(function(resolve, reject) {\n    var next = function next2(errors) {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length ? reject(new AsyncValidationError(results, convertFieldsError(results))) : resolve(source);\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n    objArrKeys.forEach(function(key2) {\n      var arr = objArr[key2];\n      if (firstFields.indexOf(key2) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending[\"catch\"](function(e2) {\n    return e2;\n  });\n  return pending;\n}\nfunction isErrorObj(obj) {\n  return !!(obj && obj.message !== void 0);\n}\nfunction getValue$3(value, path) {\n  var v2 = value;\n  for (var i = 0; i < path.length; i++) {\n    if (v2 == void 0) {\n      return v2;\n    }\n    v2 = v2[path[i]];\n  }\n  return v2;\n}\nfunction complementError(rule, source) {\n  return function(oe) {\n    var fieldValue;\n    if (rule.fullFields) {\n      fieldValue = getValue$3(source, rule.fullFields);\n    } else {\n      fieldValue = source[oe.field || rule.fullField];\n    }\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n    return {\n      message: typeof oe === \"function\" ? oe() : oe,\n      fieldValue,\n      field: oe.field || rule.fullField\n    };\n  };\n}\nfunction deepMerge(target, source) {\n  if (source) {\n    for (var s in source) {\n      if (source.hasOwnProperty(s)) {\n        var value = source[s];\n        if (typeof value === \"object\" && typeof target[s] === \"object\") {\n          target[s] = _extends({}, target[s], value);\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\nvar required$1 = function required(rule, value, source, errors, options, type4) {\n  if (rule.required && (!source.hasOwnProperty(rule.field) || isEmptyValue(value, type4 || rule.type))) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\nvar whitespace = function whitespace2(rule, value, source, errors, options) {\n  if (/^\\s+$/.test(value) || value === \"\") {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\nvar pattern$2 = {\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  url: new RegExp(\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\", \"i\"),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\nvar types = {\n  integer: function integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  \"float\": function float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array: function array(value) {\n    return Array.isArray(value);\n  },\n  regexp: function regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e2) {\n      return false;\n    }\n  },\n  date: function date(value) {\n    return typeof value.getTime === \"function\" && typeof value.getMonth === \"function\" && typeof value.getYear === \"function\" && !isNaN(value.getTime());\n  },\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === \"number\";\n  },\n  object: function object(value) {\n    return typeof value === \"object\" && !types.array(value);\n  },\n  method: function method(value) {\n    return typeof value === \"function\";\n  },\n  email: function email(value) {\n    return typeof value === \"string\" && value.length <= 320 && !!value.match(pattern$2.email);\n  },\n  url: function url(value) {\n    return typeof value === \"string\" && value.length <= 2048 && !!value.match(pattern$2.url);\n  },\n  hex: function hex(value) {\n    return typeof value === \"string\" && !!value.match(pattern$2.hex);\n  }\n};\nvar type$1 = function type(rule, value, source, errors, options) {\n  if (rule.required && value === void 0) {\n    required$1(rule, value, source, errors, options);\n    return;\n  }\n  var custom = [\"integer\", \"float\", \"array\", \"regexp\", \"object\", \"method\", \"email\", \"number\", \"date\", \"url\", \"hex\"];\n  var ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n    }\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(format(options.messages.types[ruleType], rule.fullField, rule.type));\n  }\n};\nvar range = function range2(rule, value, source, errors, options) {\n  var len = typeof rule.len === \"number\";\n  var min = typeof rule.min === \"number\";\n  var max = typeof rule.max === \"number\";\n  var spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  var val = value;\n  var key2 = null;\n  var num = typeof value === \"number\";\n  var str = typeof value === \"string\";\n  var arr = Array.isArray(value);\n  if (num) {\n    key2 = \"number\";\n  } else if (str) {\n    key2 = \"string\";\n  } else if (arr) {\n    key2 = \"array\";\n  }\n  if (!key2) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    val = value.replace(spRegexp, \"_\").length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key2].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key2].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key2].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(format(options.messages[key2].range, rule.fullField, rule.min, rule.max));\n  }\n};\nvar ENUM$1 = \"enum\";\nvar enumerable$1 = function enumerable(rule, value, source, errors, options) {\n  rule[ENUM$1] = Array.isArray(rule[ENUM$1]) ? rule[ENUM$1] : [];\n  if (rule[ENUM$1].indexOf(value) === -1) {\n    errors.push(format(options.messages[ENUM$1], rule.fullField, rule[ENUM$1].join(\", \")));\n  }\n};\nvar pattern$1 = function pattern(rule, value, source, errors, options) {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    } else if (typeof rule.pattern === \"string\") {\n      var _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(format(options.messages.pattern.mismatch, rule.fullField, value, rule.pattern));\n      }\n    }\n  }\n};\nvar rules = {\n  required: required$1,\n  whitespace,\n  type: type$1,\n  range,\n  \"enum\": enumerable$1,\n  pattern: pattern$1\n};\nvar string = function string2(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value, \"string\") && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, \"string\");\n    if (!isEmptyValue(value, \"string\")) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\nvar method2 = function method3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== void 0) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar number2 = function number3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (value === \"\") {\n      value = void 0;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== void 0) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar _boolean = function _boolean2(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== void 0) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar regexp2 = function regexp3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar integer2 = function integer3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== void 0) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar floatFn = function floatFn2(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== void 0) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar array2 = function array3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if ((value === void 0 || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, \"array\");\n    if (value !== void 0 && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar object2 = function object3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== void 0) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar ENUM = \"enum\";\nvar enumerable2 = function enumerable3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== void 0) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar pattern2 = function pattern3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value, \"string\") && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, \"string\")) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar date2 = function date3(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value, \"date\") && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, \"date\")) {\n      var dateObject;\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\nvar required2 = function required3(rule, value, callback, source, options) {\n  var errors = [];\n  var type4 = Array.isArray(value) ? \"array\" : typeof value;\n  rules.required(rule, value, source, errors, options, type4);\n  callback(errors);\n};\nvar type2 = function type3(rule, value, callback, source, options) {\n  var ruleType = rule.type;\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\nvar any = function any2(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n};\nvar validators = {\n  string,\n  method: method2,\n  number: number2,\n  \"boolean\": _boolean,\n  regexp: regexp2,\n  integer: integer2,\n  \"float\": floatFn,\n  array: array2,\n  object: object2,\n  \"enum\": enumerable2,\n  pattern: pattern2,\n  date: date2,\n  url: type2,\n  hex: type2,\n  email: type2,\n  required: required2,\n  any\n};\nfunction newMessages() {\n  return {\n    \"default\": \"Validation error on field %s\",\n    required: \"%s is required\",\n    \"enum\": \"%s must be one of %s\",\n    whitespace: \"%s cannot be empty\",\n    date: {\n      format: \"%s date %s is invalid for format %s\",\n      parse: \"%s date could not be parsed, %s is invalid \",\n      invalid: \"%s date %s is invalid\"\n    },\n    types: {\n      string: \"%s is not a %s\",\n      method: \"%s is not a %s (function)\",\n      array: \"%s is not an %s\",\n      object: \"%s is not an %s\",\n      number: \"%s is not a %s\",\n      date: \"%s is not a %s\",\n      \"boolean\": \"%s is not a %s\",\n      integer: \"%s is not an %s\",\n      \"float\": \"%s is not a %s\",\n      regexp: \"%s is not a valid %s\",\n      email: \"%s is not a valid %s\",\n      url: \"%s is not a valid %s\",\n      hex: \"%s is not a valid %s\"\n    },\n    string: {\n      len: \"%s must be exactly %s characters\",\n      min: \"%s must be at least %s characters\",\n      max: \"%s cannot be longer than %s characters\",\n      range: \"%s must be between %s and %s characters\"\n    },\n    number: {\n      len: \"%s must equal %s\",\n      min: \"%s cannot be less than %s\",\n      max: \"%s cannot be greater than %s\",\n      range: \"%s must be between %s and %s\"\n    },\n    array: {\n      len: \"%s must be exactly %s in length\",\n      min: \"%s cannot be less than %s in length\",\n      max: \"%s cannot be greater than %s in length\",\n      range: \"%s must be between %s and %s in length\"\n    },\n    pattern: {\n      mismatch: \"%s value %s does not match pattern %s\"\n    },\n    clone: function clone2() {\n      var cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    }\n  };\n}\nvar messages = newMessages();\nvar Schema = /* @__PURE__ */ function() {\n  function Schema2(descriptor) {\n    this.rules = null;\n    this._messages = messages;\n    this.define(descriptor);\n  }\n  var _proto = Schema2.prototype;\n  _proto.define = function define(rules2) {\n    var _this = this;\n    if (!rules2) {\n      throw new Error(\"Cannot configure a schema with no rules\");\n    }\n    if (typeof rules2 !== \"object\" || Array.isArray(rules2)) {\n      throw new Error(\"Rules must be an object\");\n    }\n    this.rules = {};\n    Object.keys(rules2).forEach(function(name) {\n      var item = rules2[name];\n      _this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  };\n  _proto.messages = function messages2(_messages) {\n    if (_messages) {\n      this._messages = deepMerge(newMessages(), _messages);\n    }\n    return this._messages;\n  };\n  _proto.validate = function validate(source_, o, oc) {\n    var _this2 = this;\n    if (o === void 0) {\n      o = {};\n    }\n    if (oc === void 0) {\n      oc = function oc2() {\n      };\n    }\n    var source = source_;\n    var options = o;\n    var callback = oc;\n    if (typeof options === \"function\") {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n      return Promise.resolve(source);\n    }\n    function complete(results) {\n      var errors = [];\n      var fields = {};\n      function add(e2) {\n        if (Array.isArray(e2)) {\n          var _errors;\n          errors = (_errors = errors).concat.apply(_errors, e2);\n        } else {\n          errors.push(e2);\n        }\n      }\n      for (var i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        callback(errors, fields);\n      }\n    }\n    if (options.messages) {\n      var messages$1 = this.messages();\n      if (messages$1 === messages) {\n        messages$1 = newMessages();\n      }\n      deepMerge(messages$1, options.messages);\n      options.messages = messages$1;\n    } else {\n      options.messages = this.messages();\n    }\n    var series = {};\n    var keys2 = options.keys || Object.keys(this.rules);\n    keys2.forEach(function(z2) {\n      var arr = _this2.rules[z2];\n      var value = source[z2];\n      arr.forEach(function(r2) {\n        var rule = r2;\n        if (typeof rule.transform === \"function\") {\n          if (source === source_) {\n            source = _extends({}, source);\n          }\n          value = source[z2] = rule.transform(value);\n        }\n        if (typeof rule === \"function\") {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = _extends({}, rule);\n        }\n        rule.validator = _this2.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n        rule.field = z2;\n        rule.fullField = rule.fullField || z2;\n        rule.type = _this2.getType(rule);\n        series[z2] = series[z2] || [];\n        series[z2].push({\n          rule,\n          value,\n          source,\n          field: z2\n        });\n      });\n    });\n    var errorFields = {};\n    return asyncMap(series, options, function(data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === \"object\" || rule.type === \"array\") && (typeof rule.fields === \"object\" || typeof rule.defaultField === \"object\");\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n      function addFullField(key2, schema) {\n        return _extends({}, schema, {\n          fullField: rule.fullField + \".\" + key2,\n          fullFields: rule.fullFields ? [].concat(rule.fullFields, [key2]) : [key2]\n        });\n      }\n      function cb(e2) {\n        if (e2 === void 0) {\n          e2 = [];\n        }\n        var errorList = Array.isArray(e2) ? e2 : [e2];\n        if (!options.suppressWarning && errorList.length) {\n          Schema2.warning(\"async-validator:\", errorList);\n        }\n        if (errorList.length && rule.message !== void 0) {\n          errorList = [].concat(rule.message);\n        }\n        var filledErrors = errorList.map(complementError(rule, source));\n        if (options.first && filledErrors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(filledErrors);\n        }\n        if (!deep) {\n          doIt(filledErrors);\n        } else {\n          if (rule.required && !data.value) {\n            if (rule.message !== void 0) {\n              filledErrors = [].concat(rule.message).map(complementError(rule, source));\n            } else if (options.error) {\n              filledErrors = [options.error(rule, format(options.messages.required, rule.field))];\n            }\n            return doIt(filledErrors);\n          }\n          var fieldsSchema = {};\n          if (rule.defaultField) {\n            Object.keys(data.value).map(function(key2) {\n              fieldsSchema[key2] = rule.defaultField;\n            });\n          }\n          fieldsSchema = _extends({}, fieldsSchema, data.rule.fields);\n          var paredFieldsSchema = {};\n          Object.keys(fieldsSchema).forEach(function(field) {\n            var fieldSchema = fieldsSchema[field];\n            var fieldSchemaList = Array.isArray(fieldSchema) ? fieldSchema : [fieldSchema];\n            paredFieldsSchema[field] = fieldSchemaList.map(addFullField.bind(null, field));\n          });\n          var schema = new Schema2(paredFieldsSchema);\n          schema.messages(options.messages);\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n          schema.validate(data.value, data.rule.options || options, function(errs) {\n            var finalErrors = [];\n            if (filledErrors && filledErrors.length) {\n              finalErrors.push.apply(finalErrors, filledErrors);\n            }\n            if (errs && errs.length) {\n              finalErrors.push.apply(finalErrors, errs);\n            }\n            doIt(finalErrors.length ? finalErrors : null);\n          });\n        }\n      }\n      var res;\n      if (rule.asyncValidator) {\n        res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n      } else if (rule.validator) {\n        res = rule.validator(rule, data.value, cb, data.source, options);\n        if (res === true) {\n          cb();\n        } else if (res === false) {\n          cb(typeof rule.message === \"function\" ? rule.message(rule.fullField || rule.field) : rule.message || (rule.fullField || rule.field) + \" fails\");\n        } else if (res instanceof Array) {\n          cb(res);\n        } else if (res instanceof Error) {\n          cb(res.message);\n        }\n      }\n      if (res && res.then) {\n        res.then(function() {\n          return cb();\n        }, function(e2) {\n          return cb(e2);\n        });\n      }\n    }, function(results) {\n      complete(results);\n    }, source);\n  };\n  _proto.getType = function getType(rule) {\n    if (rule.type === void 0 && rule.pattern instanceof RegExp) {\n      rule.type = \"pattern\";\n    }\n    if (typeof rule.validator !== \"function\" && rule.type && !validators.hasOwnProperty(rule.type)) {\n      throw new Error(format(\"Unknown rule type %s\", rule.type));\n    }\n    return rule.type || \"string\";\n  };\n  _proto.getValidationMethod = function getValidationMethod(rule) {\n    if (typeof rule.validator === \"function\") {\n      return rule.validator;\n    }\n    var keys2 = Object.keys(rule);\n    var messageIndex = keys2.indexOf(\"message\");\n    if (messageIndex !== -1) {\n      keys2.splice(messageIndex, 1);\n    }\n    if (keys2.length === 1 && keys2[0] === \"required\") {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || void 0;\n  };\n  return Schema2;\n}();\nSchema.register = function register(type4, validator) {\n  if (typeof validator !== \"function\") {\n    throw new Error(\"Cannot register a validator by type, validator is not a function\");\n  }\n  validators[type4] = validator;\n};\nSchema.warning = warning;\nSchema.messages = messages;\nSchema.validators = validators;\nvar typeTemplate$1 = \"'${name}' is not a valid ${type}\";\nvar defaultValidateMessages = {\n  default: \"Validation error on field '${name}'\",\n  required: \"'${name}' is required\",\n  enum: \"'${name}' must be one of [${enum}]\",\n  whitespace: \"'${name}' cannot be empty\",\n  date: {\n    format: \"'${name}' is invalid for format date\",\n    parse: \"'${name}' could not be parsed as date\",\n    invalid: \"'${name}' is invalid date\"\n  },\n  types: {\n    string: typeTemplate$1,\n    method: typeTemplate$1,\n    array: typeTemplate$1,\n    object: typeTemplate$1,\n    number: typeTemplate$1,\n    date: typeTemplate$1,\n    boolean: typeTemplate$1,\n    integer: typeTemplate$1,\n    float: typeTemplate$1,\n    regexp: typeTemplate$1,\n    email: typeTemplate$1,\n    url: typeTemplate$1,\n    hex: typeTemplate$1\n  },\n  string: {\n    len: \"'${name}' must be exactly ${len} characters\",\n    min: \"'${name}' must be at least ${min} characters\",\n    max: \"'${name}' cannot be longer than ${max} characters\",\n    range: \"'${name}' must be between ${min} and ${max} characters\"\n  },\n  number: {\n    len: \"'${name}' must equal ${len}\",\n    min: \"'${name}' cannot be less than ${min}\",\n    max: \"'${name}' cannot be greater than ${max}\",\n    range: \"'${name}' must be between ${min} and ${max}\"\n  },\n  array: {\n    len: \"'${name}' must be exactly ${len} in length\",\n    min: \"'${name}' cannot be less than ${min} in length\",\n    max: \"'${name}' cannot be greater than ${max} in length\",\n    range: \"'${name}' must be between ${min} and ${max} in length\"\n  },\n  pattern: {\n    mismatch: \"'${name}' does not match pattern ${pattern}\"\n  }\n};\nfunction get(entity, path) {\n  var current = entity;\n  for (var i = 0; i < path.length; i += 1) {\n    if (current === null || current === void 0) {\n      return void 0;\n    }\n    current = current[path[i]];\n  }\n  return current;\n}\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n}\nfunction internalSet(entity, paths, value, removeIfUndefined) {\n  if (!paths.length) {\n    return value;\n  }\n  var _paths = _toArray(paths), path = _paths[0], restPath = _paths.slice(1);\n  var clone2;\n  if (!entity && typeof path === \"number\") {\n    clone2 = [];\n  } else if (Array.isArray(entity)) {\n    clone2 = _toConsumableArray(entity);\n  } else {\n    clone2 = _objectSpread2$1({}, entity);\n  }\n  if (removeIfUndefined && value === void 0 && restPath.length === 1) {\n    delete clone2[path][restPath[0]];\n  } else {\n    clone2[path] = internalSet(clone2[path], restPath, value, removeIfUndefined);\n  }\n  return clone2;\n}\nfunction set(entity, paths, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n  if (paths.length && removeIfUndefined && value === void 0 && !get(entity, paths.slice(0, -1))) {\n    return entity;\n  }\n  return internalSet(entity, paths, value, removeIfUndefined);\n}\nfunction getNamePath(path) {\n  return toArray(path);\n}\nfunction getValue$2(store, namePath) {\n  var value = get(store, namePath);\n  return value;\n}\nfunction setValue(store, namePath, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;\n  var newStore = set(store, namePath, value, removeIfUndefined);\n  return newStore;\n}\nfunction cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function(namePath) {\n    var value = getValue$2(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nfunction containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function(path) {\n    return matchNamePath(path, namePath);\n  });\n}\nfunction isObject$3(obj) {\n  return _typeof$1(obj) === \"object\" && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _objectSpread2$1({}, store);\n  if (!values) {\n    return newStore;\n  }\n  Object.keys(values).forEach(function(key2) {\n    var prevValue = newStore[key2];\n    var value = values[key2];\n    var recursive = isObject$3(prevValue) && isObject$3(value);\n    newStore[key2] = recursive ? internalSetValues(prevValue, value || {}) : value;\n  });\n  return newStore;\n}\nfunction setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n  return restValues.reduce(function(current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nfunction matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n  return namePath.every(function(nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}\nfunction isSimilar(source, target) {\n  if (source === target) {\n    return true;\n  }\n  if (!source && target || source && !target) {\n    return false;\n  }\n  if (!source || !target || _typeof$1(source) !== \"object\" || _typeof$1(target) !== \"object\") {\n    return false;\n  }\n  var sourceKeys = Object.keys(source);\n  var targetKeys = Object.keys(target);\n  var keys2 = new Set([].concat(_toConsumableArray(sourceKeys), _toConsumableArray(targetKeys)));\n  return _toConsumableArray(keys2).every(function(key2) {\n    var sourceValue = source[key2];\n    var targetValue = target[key2];\n    if (typeof sourceValue === \"function\" && typeof targetValue === \"function\") {\n      return true;\n    }\n    return sourceValue === targetValue;\n  });\n}\nfunction defaultGetValueFromEvent(valuePropName) {\n  var event = arguments.length <= 1 ? void 0 : arguments[1];\n  if (event && event.target && _typeof$1(event.target) === \"object\" && valuePropName in event.target) {\n    return event.target[valuePropName];\n  }\n  return event;\n}\nfunction move(array4, moveIndex, toIndex) {\n  var length = array4.length;\n  if (moveIndex < 0 || moveIndex >= length || toIndex < 0 || toIndex >= length) {\n    return array4;\n  }\n  var item = array4[moveIndex];\n  var diff = moveIndex - toIndex;\n  if (diff > 0) {\n    return [].concat(_toConsumableArray(array4.slice(0, toIndex)), [item], _toConsumableArray(array4.slice(toIndex, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, length)));\n  }\n  if (diff < 0) {\n    return [].concat(_toConsumableArray(array4.slice(0, moveIndex)), _toConsumableArray(array4.slice(moveIndex + 1, toIndex + 1)), [item], _toConsumableArray(array4.slice(toIndex + 1, length)));\n  }\n  return array4;\n}\nvar AsyncValidator = Schema;\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function(str) {\n    var key2 = str.slice(2, -1);\n    return kv[key2];\n  });\n}\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator(/* @__PURE__ */ regenerator.mark(function _callee2(name, value, rule, options, messageVariables) {\n    var cloneRule, subRuleField, validator, messages2, result, subResults, kv, fillVariableResult;\n    return regenerator.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cloneRule = _objectSpread2$1({}, rule);\n            delete cloneRule.ruleIndex;\n            subRuleField = null;\n            if (cloneRule && cloneRule.type === \"array\" && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n            validator = new AsyncValidator(_defineProperty$1({}, name, [cloneRule]));\n            messages2 = setValues({}, defaultValidateMessages, options.validateMessages);\n            validator.messages(messages2);\n            result = [];\n            _context2.prev = 8;\n            _context2.next = 11;\n            return Promise.resolve(validator.validate(_defineProperty$1({}, name, value), _objectSpread2$1({}, options)));\n          case 11:\n            _context2.next = 16;\n            break;\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](8);\n            if (_context2.t0.errors) {\n              result = _context2.t0.errors.map(function(_ref4, index2) {\n                var message2 = _ref4.message;\n                return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(message2) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(message2, {\n                  key: \"error_\".concat(index2)\n                }) : message2;\n              });\n            } else {\n              console.error(_context2.t0);\n              result = [messages2.default];\n            }\n          case 16:\n            if (!(!result.length && subRuleField)) {\n              _context2.next = 21;\n              break;\n            }\n            _context2.next = 19;\n            return Promise.all(value.map(function(subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n          case 19:\n            subResults = _context2.sent;\n            return _context2.abrupt(\"return\", subResults.reduce(function(prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n          case 21:\n            kv = _objectSpread2$1(_objectSpread2$1({}, rule), {}, {\n              name,\n              enum: (rule.enum || []).join(\", \")\n            }, messageVariables);\n            fillVariableResult = result.map(function(error) {\n              if (typeof error === \"string\") {\n                return replaceMessage(error, kv);\n              }\n              return error;\n            });\n            return _context2.abrupt(\"return\", fillVariableResult);\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 13]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\nfunction validateRules(namePath, value, rules2, options, validateFirst, messageVariables) {\n  var name = namePath.join(\".\");\n  var filledRules = rules2.map(function(currentRule, ruleIndex) {\n    var originValidatorFunc = currentRule.validator;\n    var cloneRule = _objectSpread2$1(_objectSpread2$1({}, currentRule), {}, {\n      ruleIndex\n    });\n    if (originValidatorFunc) {\n      cloneRule.validator = function(rule, val, callback) {\n        var hasPromise = false;\n        var wrappedCallback = function wrappedCallback2() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          Promise.resolve().then(function() {\n            warningOnce(!hasPromise, \"Your validator function has already return a promise. `callback` will be ignored.\");\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        };\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === \"function\" && typeof promise.catch === \"function\";\n        warningOnce(hasPromise, \"`callback` is deprecated. Please return a promise instead.\");\n        if (hasPromise) {\n          promise.then(function() {\n            callback();\n          }).catch(function(err) {\n            callback(err || \" \");\n          });\n        }\n      };\n    }\n    return cloneRule;\n  }).sort(function(_ref, _ref2) {\n    var w1 = _ref.warningOnly, i1 = _ref.ruleIndex;\n    var w2 = _ref2.warningOnly, i2 = _ref2.ruleIndex;\n    if (!!w1 === !!w2) {\n      return i1 - i2;\n    }\n    if (w1) {\n      return 1;\n    }\n    return -1;\n  });\n  var summaryPromise;\n  if (validateFirst === true) {\n    summaryPromise = new Promise(/* @__PURE__ */ function() {\n      var _ref3 = _asyncToGenerator(/* @__PURE__ */ regenerator.mark(function _callee(resolve, reject) {\n        var i, rule, errors;\n        return regenerator.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n              case 1:\n                if (!(i < filledRules.length)) {\n                  _context.next = 12;\n                  break;\n                }\n                rule = filledRules[i];\n                _context.next = 5;\n                return validateRule(name, value, rule, options, messageVariables);\n              case 5:\n                errors = _context.sent;\n                if (!errors.length) {\n                  _context.next = 9;\n                  break;\n                }\n                reject([{\n                  errors,\n                  rule\n                }]);\n                return _context.abrupt(\"return\");\n              case 9:\n                i += 1;\n                _context.next = 1;\n                break;\n              case 12:\n                resolve([]);\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return function(_x6, _x7) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } else {\n    var rulePromises = filledRules.map(function(rule) {\n      return validateRule(name, value, rule, options, messageVariables).then(function(errors) {\n        return {\n          errors,\n          rule\n        };\n      });\n    });\n    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function(errors) {\n      return Promise.reject(errors);\n    });\n  }\n  summaryPromise.catch(function(e2) {\n    return e2;\n  });\n  return summaryPromise;\n}\nfunction finishOnAllFailed(_x8) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator(/* @__PURE__ */ regenerator.mark(function _callee3(rulePromises) {\n    return regenerator.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Promise.all(rulePromises).then(function(errorsList) {\n              var _ref5;\n              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));\n              return errors;\n            }));\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\nfunction finishOnFirstFailed(_x9) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator(/* @__PURE__ */ regenerator.mark(function _callee4(rulePromises) {\n    var count;\n    return regenerator.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            count = 0;\n            return _context4.abrupt(\"return\", new Promise(function(resolve) {\n              rulePromises.forEach(function(promise) {\n                promise.then(function(ruleError) {\n                  if (ruleError.errors.length) {\n                    resolve([ruleError]);\n                  }\n                  count += 1;\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}\nvar _excluded$3 = [\"name\"];\nvar EMPTY_ERRORS = [];\nfunction requireUpdate(shouldUpdate, prev, next, prevValue, nextValue, info) {\n  if (typeof shouldUpdate === \"function\") {\n    return shouldUpdate(prev, next, \"source\" in info ? {\n      source: info.source\n    } : {});\n  }\n  return prevValue !== nextValue;\n}\nvar Field = /* @__PURE__ */ function(_React$Component) {\n  _inherits(Field2, _React$Component);\n  var _super = _createSuper(Field2);\n  function Field2(props) {\n    var _this;\n    _classCallCheck(this, Field2);\n    _this = _super.call(this, props);\n    _this.state = {\n      resetCount: 0\n    };\n    _this.cancelRegisterFunc = null;\n    _this.mounted = false;\n    _this.touched = false;\n    _this.dirty = false;\n    _this.validatePromise = null;\n    _this.prevValidating = void 0;\n    _this.errors = EMPTY_ERRORS;\n    _this.warnings = EMPTY_ERRORS;\n    _this.cancelRegister = function() {\n      var _this$props = _this.props, preserve = _this$props.preserve, isListField = _this$props.isListField, name = _this$props.name;\n      if (_this.cancelRegisterFunc) {\n        _this.cancelRegisterFunc(isListField, preserve, getNamePath(name));\n      }\n      _this.cancelRegisterFunc = null;\n    };\n    _this.getNamePath = function() {\n      var _this$props2 = _this.props, name = _this$props2.name, fieldContext = _this$props2.fieldContext;\n      var _fieldContext$prefixN = fieldContext.prefixName, prefixName = _fieldContext$prefixN === void 0 ? [] : _fieldContext$prefixN;\n      return name !== void 0 ? [].concat(_toConsumableArray(prefixName), _toConsumableArray(name)) : [];\n    };\n    _this.getRules = function() {\n      var _this$props3 = _this.props, _this$props3$rules = _this$props3.rules, rules2 = _this$props3$rules === void 0 ? [] : _this$props3$rules, fieldContext = _this$props3.fieldContext;\n      return rules2.map(function(rule) {\n        if (typeof rule === \"function\") {\n          return rule(fieldContext);\n        }\n        return rule;\n      });\n    };\n    _this.refresh = function() {\n      if (!_this.mounted)\n        return;\n      _this.setState(function(_ref) {\n        var resetCount = _ref.resetCount;\n        return {\n          resetCount: resetCount + 1\n        };\n      });\n    };\n    _this.triggerMetaEvent = function(destroy3) {\n      var onMetaChange = _this.props.onMetaChange;\n      onMetaChange === null || onMetaChange === void 0 ? void 0 : onMetaChange(_objectSpread2$1(_objectSpread2$1({}, _this.getMeta()), {}, {\n        destroy: destroy3\n      }));\n    };\n    _this.onStoreChange = function(prevStore, namePathList, info) {\n      var _this$props4 = _this.props, shouldUpdate = _this$props4.shouldUpdate, _this$props4$dependen = _this$props4.dependencies, dependencies = _this$props4$dependen === void 0 ? [] : _this$props4$dependen, onReset = _this$props4.onReset;\n      var store = info.store;\n      var namePath = _this.getNamePath();\n      var prevValue = _this.getValue(prevStore);\n      var curValue = _this.getValue(store);\n      var namePathMatch = namePathList && containsNamePath(namePathList, namePath);\n      if (info.type === \"valueUpdate\" && info.source === \"external\" && prevValue !== curValue) {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.validatePromise = null;\n        _this.errors = EMPTY_ERRORS;\n        _this.warnings = EMPTY_ERRORS;\n        _this.triggerMetaEvent();\n      }\n      switch (info.type) {\n        case \"reset\":\n          if (!namePathList || namePathMatch) {\n            _this.touched = false;\n            _this.dirty = false;\n            _this.validatePromise = null;\n            _this.errors = EMPTY_ERRORS;\n            _this.warnings = EMPTY_ERRORS;\n            _this.triggerMetaEvent();\n            onReset === null || onReset === void 0 ? void 0 : onReset();\n            _this.refresh();\n            return;\n          }\n          break;\n        case \"remove\": {\n          if (shouldUpdate) {\n            _this.reRender();\n            return;\n          }\n          break;\n        }\n        case \"setField\": {\n          if (namePathMatch) {\n            var data = info.data;\n            if (\"touched\" in data) {\n              _this.touched = data.touched;\n            }\n            if (\"validating\" in data && !(\"originRCField\" in data)) {\n              _this.validatePromise = data.validating ? Promise.resolve([]) : null;\n            }\n            if (\"errors\" in data) {\n              _this.errors = data.errors || EMPTY_ERRORS;\n            }\n            if (\"warnings\" in data) {\n              _this.warnings = data.warnings || EMPTY_ERRORS;\n            }\n            _this.dirty = true;\n            _this.triggerMetaEvent();\n            _this.reRender();\n            return;\n          }\n          if (shouldUpdate && !namePath.length && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n            return;\n          }\n          break;\n        }\n        case \"dependenciesUpdate\": {\n          var dependencyList = dependencies.map(getNamePath);\n          if (dependencyList.some(function(dependency) {\n            return containsNamePath(info.relatedFields, dependency);\n          })) {\n            _this.reRender();\n            return;\n          }\n          break;\n        }\n        default:\n          if (namePathMatch || (!dependencies.length || namePath.length || shouldUpdate) && requireUpdate(shouldUpdate, prevStore, store, prevValue, curValue, info)) {\n            _this.reRender();\n            return;\n          }\n          break;\n      }\n      if (shouldUpdate === true) {\n        _this.reRender();\n      }\n    };\n    _this.validateRules = function(options) {\n      var namePath = _this.getNamePath();\n      var currentValue = _this.getValue();\n      var rootPromise = Promise.resolve().then(function() {\n        if (!_this.mounted) {\n          return [];\n        }\n        var _this$props5 = _this.props, _this$props5$validate = _this$props5.validateFirst, validateFirst = _this$props5$validate === void 0 ? false : _this$props5$validate, messageVariables = _this$props5.messageVariables;\n        var _ref2 = options || {}, triggerName = _ref2.triggerName;\n        var filteredRules = _this.getRules();\n        if (triggerName) {\n          filteredRules = filteredRules.filter(function(rule) {\n            var validateTrigger = rule.validateTrigger;\n            if (!validateTrigger) {\n              return true;\n            }\n            var triggerList = toArray(validateTrigger);\n            return triggerList.includes(triggerName);\n          });\n        }\n        var promise = validateRules(namePath, currentValue, filteredRules, options, validateFirst, messageVariables);\n        promise.catch(function(e2) {\n          return e2;\n        }).then(function() {\n          var ruleErrors = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : EMPTY_ERRORS;\n          if (_this.validatePromise === rootPromise) {\n            _this.validatePromise = null;\n            var nextErrors = [];\n            var nextWarnings = [];\n            ruleErrors.forEach(function(_ref3) {\n              var warningOnly = _ref3.rule.warningOnly, _ref3$errors = _ref3.errors, errors = _ref3$errors === void 0 ? EMPTY_ERRORS : _ref3$errors;\n              if (warningOnly) {\n                nextWarnings.push.apply(nextWarnings, _toConsumableArray(errors));\n              } else {\n                nextErrors.push.apply(nextErrors, _toConsumableArray(errors));\n              }\n            });\n            _this.errors = nextErrors;\n            _this.warnings = nextWarnings;\n            _this.triggerMetaEvent();\n            _this.reRender();\n          }\n        });\n        return promise;\n      });\n      _this.validatePromise = rootPromise;\n      _this.dirty = true;\n      _this.errors = EMPTY_ERRORS;\n      _this.warnings = EMPTY_ERRORS;\n      _this.triggerMetaEvent();\n      _this.reRender();\n      return rootPromise;\n    };\n    _this.isFieldValidating = function() {\n      return !!_this.validatePromise;\n    };\n    _this.isFieldTouched = function() {\n      return _this.touched;\n    };\n    _this.isFieldDirty = function() {\n      if (_this.dirty || _this.props.initialValue !== void 0) {\n        return true;\n      }\n      var fieldContext = _this.props.fieldContext;\n      var _fieldContext$getInte = fieldContext.getInternalHooks(HOOK_MARK), getInitialValue = _fieldContext$getInte.getInitialValue;\n      if (getInitialValue(_this.getNamePath()) !== void 0) {\n        return true;\n      }\n      return false;\n    };\n    _this.getErrors = function() {\n      return _this.errors;\n    };\n    _this.getWarnings = function() {\n      return _this.warnings;\n    };\n    _this.isListField = function() {\n      return _this.props.isListField;\n    };\n    _this.isList = function() {\n      return _this.props.isList;\n    };\n    _this.isPreserve = function() {\n      return _this.props.preserve;\n    };\n    _this.getMeta = function() {\n      _this.prevValidating = _this.isFieldValidating();\n      var meta = {\n        touched: _this.isFieldTouched(),\n        validating: _this.prevValidating,\n        errors: _this.errors,\n        warnings: _this.warnings,\n        name: _this.getNamePath()\n      };\n      return meta;\n    };\n    _this.getOnlyChild = function(children) {\n      if (typeof children === \"function\") {\n        var meta = _this.getMeta();\n        return _objectSpread2$1(_objectSpread2$1({}, _this.getOnlyChild(children(_this.getControlled(), meta, _this.props.fieldContext))), {}, {\n          isFunction: true\n        });\n      }\n      var childList = toArray$1(children);\n      if (childList.length !== 1 || !/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(childList[0])) {\n        return {\n          child: childList,\n          isFunction: false\n        };\n      }\n      return {\n        child: childList[0],\n        isFunction: false\n      };\n    };\n    _this.getValue = function(store) {\n      var getFieldsValue = _this.props.fieldContext.getFieldsValue;\n      var namePath = _this.getNamePath();\n      return getValue$2(store || getFieldsValue(true), namePath);\n    };\n    _this.getControlled = function() {\n      var childProps = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n      var _this$props6 = _this.props, trigger = _this$props6.trigger, validateTrigger = _this$props6.validateTrigger, getValueFromEvent = _this$props6.getValueFromEvent, normalize2 = _this$props6.normalize, valuePropName = _this$props6.valuePropName, getValueProps = _this$props6.getValueProps, fieldContext = _this$props6.fieldContext;\n      var mergedValidateTrigger = validateTrigger !== void 0 ? validateTrigger : fieldContext.validateTrigger;\n      var namePath = _this.getNamePath();\n      var getInternalHooks3 = fieldContext.getInternalHooks, getFieldsValue = fieldContext.getFieldsValue;\n      var _getInternalHooks = getInternalHooks3(HOOK_MARK), dispatch = _getInternalHooks.dispatch;\n      var value = _this.getValue();\n      var mergedGetValueProps = getValueProps || function(val) {\n        return _defineProperty$1({}, valuePropName, val);\n      };\n      var originTriggerFunc = childProps[trigger];\n      var control = _objectSpread2$1(_objectSpread2$1({}, childProps), mergedGetValueProps(value));\n      control[trigger] = function() {\n        _this.touched = true;\n        _this.dirty = true;\n        _this.triggerMetaEvent();\n        var newValue;\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (getValueFromEvent) {\n          newValue = getValueFromEvent.apply(void 0, args);\n        } else {\n          newValue = defaultGetValueFromEvent.apply(void 0, [valuePropName].concat(args));\n        }\n        if (normalize2) {\n          newValue = normalize2(newValue, value, getFieldsValue(true));\n        }\n        dispatch({\n          type: \"updateValue\",\n          namePath,\n          value: newValue\n        });\n        if (originTriggerFunc) {\n          originTriggerFunc.apply(void 0, args);\n        }\n      };\n      var validateTriggerList = toArray(mergedValidateTrigger || []);\n      validateTriggerList.forEach(function(triggerName) {\n        var originTrigger = control[triggerName];\n        control[triggerName] = function() {\n          if (originTrigger) {\n            originTrigger.apply(void 0, arguments);\n          }\n          var rules2 = _this.props.rules;\n          if (rules2 && rules2.length) {\n            dispatch({\n              type: \"validateField\",\n              namePath,\n              triggerName\n            });\n          }\n        };\n      });\n      return control;\n    };\n    if (props.fieldContext) {\n      var getInternalHooks2 = props.fieldContext.getInternalHooks;\n      var _getInternalHooks2 = getInternalHooks2(HOOK_MARK), initEntityValue = _getInternalHooks2.initEntityValue;\n      initEntityValue(_assertThisInitialized(_this));\n    }\n    return _this;\n  }\n  _createClass(Field2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props7 = this.props, shouldUpdate = _this$props7.shouldUpdate, fieldContext = _this$props7.fieldContext;\n      this.mounted = true;\n      if (fieldContext) {\n        var getInternalHooks2 = fieldContext.getInternalHooks;\n        var _getInternalHooks3 = getInternalHooks2(HOOK_MARK), registerField = _getInternalHooks3.registerField;\n        this.cancelRegisterFunc = registerField(this);\n      }\n      if (shouldUpdate === true) {\n        this.reRender();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.cancelRegister();\n      this.triggerMetaEvent(true);\n      this.mounted = false;\n    }\n  }, {\n    key: \"reRender\",\n    value: function reRender() {\n      if (!this.mounted)\n        return;\n      this.forceUpdate();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var resetCount = this.state.resetCount;\n      var children = this.props.children;\n      var _this$getOnlyChild = this.getOnlyChild(children), child = _this$getOnlyChild.child, isFunction2 = _this$getOnlyChild.isFunction;\n      var returnChildNode;\n      if (isFunction2) {\n        returnChildNode = child;\n      } else if (/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(child)) {\n        returnChildNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, this.getControlled(child.props));\n      } else {\n        warningOnce(!child, \"`children` of Field is not validate ReactElement.\");\n        returnChildNode = child;\n      }\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        key: resetCount\n      }, returnChildNode);\n    }\n  }]);\n  return Field2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nField.contextType = Context;\nField.defaultProps = {\n  trigger: \"onChange\",\n  valuePropName: \"value\"\n};\nfunction WrapperField(_ref5) {\n  var name = _ref5.name, restProps = _objectWithoutProperties(_ref5, _excluded$3);\n  var fieldContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n  var namePath = name !== void 0 ? getNamePath(name) : void 0;\n  var key2 = \"keep\";\n  if (!restProps.isListField) {\n    key2 = \"_\".concat((namePath || []).join(\"_\"));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Field, _extends$1({\n    key: key2,\n    name: namePath\n  }, restProps, {\n    fieldContext\n  }));\n}\nvar ListContext = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nvar List = function List2(_ref) {\n  var name = _ref.name, initialValue = _ref.initialValue, children = _ref.children, rules2 = _ref.rules, validateTrigger = _ref.validateTrigger;\n  var context = react__WEBPACK_IMPORTED_MODULE_0__.useContext(Context);\n  var keyRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n    keys: [],\n    id: 0\n  });\n  var keyManager = keyRef.current;\n  var prefixName = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    var parentPrefixName = getNamePath(context.prefixName) || [];\n    return [].concat(_toConsumableArray(parentPrefixName), _toConsumableArray(getNamePath(name)));\n  }, [context.prefixName, name]);\n  var fieldContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    return _objectSpread2$1(_objectSpread2$1({}, context), {}, {\n      prefixName\n    });\n  }, [context, prefixName]);\n  var listContext = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    return {\n      getKey: function getKey(namePath) {\n        var len = prefixName.length;\n        var pathName = namePath[len];\n        return [keyManager.keys[pathName], namePath.slice(len + 1)];\n      }\n    };\n  }, [prefixName]);\n  if (typeof children !== \"function\") {\n    warningOnce(false, \"Form.List only accepts function as children.\");\n    return null;\n  }\n  var shouldUpdate = function shouldUpdate2(prevValue, nextValue, _ref2) {\n    var source = _ref2.source;\n    if (source === \"internal\") {\n      return false;\n    }\n    return prevValue !== nextValue;\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ListContext.Provider, {\n    value: listContext\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n    value: fieldContext\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(WrapperField, {\n    name: [],\n    shouldUpdate,\n    rules: rules2,\n    validateTrigger,\n    initialValue,\n    isList: true\n  }, function(_ref3, meta) {\n    var _ref3$value = _ref3.value, value = _ref3$value === void 0 ? [] : _ref3$value, onChange = _ref3.onChange;\n    var getFieldValue = context.getFieldValue;\n    var getNewValue = function getNewValue2() {\n      var values = getFieldValue(prefixName || []);\n      return values || [];\n    };\n    var operations = {\n      add: function add(defaultValue, index2) {\n        var newValue = getNewValue();\n        if (index2 >= 0 && index2 <= newValue.length) {\n          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys.slice(0, index2)), [keyManager.id], _toConsumableArray(keyManager.keys.slice(index2)));\n          onChange([].concat(_toConsumableArray(newValue.slice(0, index2)), [defaultValue], _toConsumableArray(newValue.slice(index2))));\n        } else {\n          keyManager.keys = [].concat(_toConsumableArray(keyManager.keys), [keyManager.id]);\n          onChange([].concat(_toConsumableArray(newValue), [defaultValue]));\n        }\n        keyManager.id += 1;\n      },\n      remove: function remove(index2) {\n        var newValue = getNewValue();\n        var indexSet = new Set(Array.isArray(index2) ? index2 : [index2]);\n        if (indexSet.size <= 0) {\n          return;\n        }\n        keyManager.keys = keyManager.keys.filter(function(_, keysIndex) {\n          return !indexSet.has(keysIndex);\n        });\n        onChange(newValue.filter(function(_, valueIndex) {\n          return !indexSet.has(valueIndex);\n        }));\n      },\n      move: function move$1(from, to) {\n        if (from === to) {\n          return;\n        }\n        var newValue = getNewValue();\n        if (from < 0 || from >= newValue.length || to < 0 || to >= newValue.length) {\n          return;\n        }\n        keyManager.keys = move(keyManager.keys, from, to);\n        onChange(move(newValue, from, to));\n      }\n    };\n    var listValue = value || [];\n    if (!Array.isArray(listValue)) {\n      listValue = [];\n    }\n    return children(listValue.map(function(__, index2) {\n      var key2 = keyManager.keys[index2];\n      if (key2 === void 0) {\n        keyManager.keys[index2] = keyManager.id;\n        key2 = keyManager.keys[index2];\n        keyManager.id += 1;\n      }\n      return {\n        name: index2,\n        key: key2,\n        isListField: true\n      };\n    }), operations, meta);\n  })));\n};\nfunction allPromiseFinish(promiseList) {\n  var hasError = false;\n  var count = promiseList.length;\n  var results = [];\n  if (!promiseList.length) {\n    return Promise.resolve([]);\n  }\n  return new Promise(function(resolve, reject) {\n    promiseList.forEach(function(promise, index2) {\n      promise.catch(function(e2) {\n        hasError = true;\n        return e2;\n      }).then(function(result) {\n        count -= 1;\n        results[index2] = result;\n        if (count > 0) {\n          return;\n        }\n        if (hasError) {\n          reject(results);\n        }\n        resolve(results);\n      });\n    });\n  });\n}\nvar SPLIT = \"__@field_split__\";\nfunction normalize(namePath) {\n  return namePath.map(function(cell) {\n    return \"\".concat(_typeof$1(cell), \":\").concat(cell);\n  }).join(SPLIT);\n}\nvar NameMap = /* @__PURE__ */ function() {\n  function NameMap2() {\n    _classCallCheck(this, NameMap2);\n    this.kvs = /* @__PURE__ */ new Map();\n  }\n  _createClass(NameMap2, [{\n    key: \"set\",\n    value: function set2(key2, value) {\n      this.kvs.set(normalize(key2), value);\n    }\n  }, {\n    key: \"get\",\n    value: function get2(key2) {\n      return this.kvs.get(normalize(key2));\n    }\n  }, {\n    key: \"update\",\n    value: function update(key2, updater) {\n      var origin = this.get(key2);\n      var next = updater(origin);\n      if (!next) {\n        this.delete(key2);\n      } else {\n        this.set(key2, next);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key2) {\n      this.kvs.delete(normalize(key2));\n    }\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      return _toConsumableArray(this.kvs.entries()).map(function(_ref) {\n        var _ref2 = _slicedToArray(_ref, 2), key2 = _ref2[0], value = _ref2[1];\n        var cells = key2.split(SPLIT);\n        return callback({\n          key: cells.map(function(cell) {\n            var _cell$match = cell.match(/^([^:]*):(.*)$/), _cell$match2 = _slicedToArray(_cell$match, 3), type4 = _cell$match2[1], unit = _cell$match2[2];\n            return type4 === \"number\" ? Number(unit) : unit;\n          }),\n          value\n        });\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      var json = {};\n      this.map(function(_ref3) {\n        var key2 = _ref3.key, value = _ref3.value;\n        json[key2.join(\".\")] = value;\n        return null;\n      });\n      return json;\n    }\n  }]);\n  return NameMap2;\n}();\nvar _excluded$2 = [\"name\", \"errors\"];\nvar FormStore = /* @__PURE__ */ _createClass(function FormStore2(forceRootUpdate) {\n  var _this = this;\n  _classCallCheck(this, FormStore2);\n  this.formHooked = false;\n  this.forceRootUpdate = void 0;\n  this.subscribable = true;\n  this.store = {};\n  this.fieldEntities = [];\n  this.initialValues = {};\n  this.callbacks = {};\n  this.validateMessages = null;\n  this.preserve = null;\n  this.lastValidatePromise = null;\n  this.getForm = function() {\n    return {\n      getFieldValue: _this.getFieldValue,\n      getFieldsValue: _this.getFieldsValue,\n      getFieldError: _this.getFieldError,\n      getFieldWarning: _this.getFieldWarning,\n      getFieldsError: _this.getFieldsError,\n      isFieldsTouched: _this.isFieldsTouched,\n      isFieldTouched: _this.isFieldTouched,\n      isFieldValidating: _this.isFieldValidating,\n      isFieldsValidating: _this.isFieldsValidating,\n      resetFields: _this.resetFields,\n      setFields: _this.setFields,\n      setFieldsValue: _this.setFieldsValue,\n      validateFields: _this.validateFields,\n      submit: _this.submit,\n      getInternalHooks: _this.getInternalHooks\n    };\n  };\n  this.getInternalHooks = function(key2) {\n    if (key2 === HOOK_MARK) {\n      _this.formHooked = true;\n      return {\n        dispatch: _this.dispatch,\n        initEntityValue: _this.initEntityValue,\n        registerField: _this.registerField,\n        useSubscribe: _this.useSubscribe,\n        setInitialValues: _this.setInitialValues,\n        setCallbacks: _this.setCallbacks,\n        setValidateMessages: _this.setValidateMessages,\n        getFields: _this.getFields,\n        setPreserve: _this.setPreserve,\n        getInitialValue: _this.getInitialValue\n      };\n    }\n    warningOnce(false, \"`getInternalHooks` is internal usage. Should not call directly.\");\n    return null;\n  };\n  this.useSubscribe = function(subscribable) {\n    _this.subscribable = subscribable;\n  };\n  this.setInitialValues = function(initialValues, init) {\n    _this.initialValues = initialValues || {};\n    if (init) {\n      _this.store = setValues({}, initialValues, _this.store);\n    }\n  };\n  this.getInitialValue = function(namePath) {\n    return getValue$2(_this.initialValues, namePath);\n  };\n  this.setCallbacks = function(callbacks) {\n    _this.callbacks = callbacks;\n  };\n  this.setValidateMessages = function(validateMessages) {\n    _this.validateMessages = validateMessages;\n  };\n  this.setPreserve = function(preserve) {\n    _this.preserve = preserve;\n  };\n  this.timeoutId = null;\n  this.warningUnhooked = function() {\n  };\n  this.getFieldEntities = function() {\n    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    if (!pure) {\n      return _this.fieldEntities;\n    }\n    return _this.fieldEntities.filter(function(field) {\n      return field.getNamePath().length;\n    });\n  };\n  this.getFieldsMap = function() {\n    var pure = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;\n    var cache = new NameMap();\n    _this.getFieldEntities(pure).forEach(function(field) {\n      var namePath = field.getNamePath();\n      cache.set(namePath, field);\n    });\n    return cache;\n  };\n  this.getFieldEntitiesForNamePathList = function(nameList) {\n    if (!nameList) {\n      return _this.getFieldEntities(true);\n    }\n    var cache = _this.getFieldsMap(true);\n    return nameList.map(function(name) {\n      var namePath = getNamePath(name);\n      return cache.get(namePath) || {\n        INVALIDATE_NAME_PATH: getNamePath(name)\n      };\n    });\n  };\n  this.getFieldsValue = function(nameList, filterFunc) {\n    _this.warningUnhooked();\n    if (nameList === true && !filterFunc) {\n      return _this.store;\n    }\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(Array.isArray(nameList) ? nameList : null);\n    var filteredNameList = [];\n    fieldEntities.forEach(function(entity) {\n      var _entity$isListField;\n      var namePath = \"INVALIDATE_NAME_PATH\" in entity ? entity.INVALIDATE_NAME_PATH : entity.getNamePath();\n      if (!nameList && ((_entity$isListField = entity.isListField) === null || _entity$isListField === void 0 ? void 0 : _entity$isListField.call(entity))) {\n        return;\n      }\n      if (!filterFunc) {\n        filteredNameList.push(namePath);\n      } else {\n        var meta = \"getMeta\" in entity ? entity.getMeta() : null;\n        if (filterFunc(meta)) {\n          filteredNameList.push(namePath);\n        }\n      }\n    });\n    return cloneByNamePathList(_this.store, filteredNameList.map(getNamePath));\n  };\n  this.getFieldValue = function(name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    return getValue$2(_this.store, namePath);\n  };\n  this.getFieldsError = function(nameList) {\n    _this.warningUnhooked();\n    var fieldEntities = _this.getFieldEntitiesForNamePathList(nameList);\n    return fieldEntities.map(function(entity, index2) {\n      if (entity && !(\"INVALIDATE_NAME_PATH\" in entity)) {\n        return {\n          name: entity.getNamePath(),\n          errors: entity.getErrors(),\n          warnings: entity.getWarnings()\n        };\n      }\n      return {\n        name: getNamePath(nameList[index2]),\n        errors: [],\n        warnings: []\n      };\n    });\n  };\n  this.getFieldError = function(name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    var fieldError = _this.getFieldsError([namePath])[0];\n    return fieldError.errors;\n  };\n  this.getFieldWarning = function(name) {\n    _this.warningUnhooked();\n    var namePath = getNamePath(name);\n    var fieldError = _this.getFieldsError([namePath])[0];\n    return fieldError.warnings;\n  };\n  this.isFieldsTouched = function() {\n    _this.warningUnhooked();\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var arg0 = args[0], arg1 = args[1];\n    var namePathList;\n    var isAllFieldsTouched = false;\n    if (args.length === 0) {\n      namePathList = null;\n    } else if (args.length === 1) {\n      if (Array.isArray(arg0)) {\n        namePathList = arg0.map(getNamePath);\n        isAllFieldsTouched = false;\n      } else {\n        namePathList = null;\n        isAllFieldsTouched = arg0;\n      }\n    } else {\n      namePathList = arg0.map(getNamePath);\n      isAllFieldsTouched = arg1;\n    }\n    var fieldEntities = _this.getFieldEntities(true);\n    var isFieldTouched = function isFieldTouched2(field) {\n      return field.isFieldTouched();\n    };\n    if (!namePathList) {\n      return isAllFieldsTouched ? fieldEntities.every(isFieldTouched) : fieldEntities.some(isFieldTouched);\n    }\n    var map = new NameMap();\n    namePathList.forEach(function(shortNamePath) {\n      map.set(shortNamePath, []);\n    });\n    fieldEntities.forEach(function(field) {\n      var fieldNamePath = field.getNamePath();\n      namePathList.forEach(function(shortNamePath) {\n        if (shortNamePath.every(function(nameUnit, i) {\n          return fieldNamePath[i] === nameUnit;\n        })) {\n          map.update(shortNamePath, function(list) {\n            return [].concat(_toConsumableArray(list), [field]);\n          });\n        }\n      });\n    });\n    var isNamePathListTouched = function isNamePathListTouched2(entities) {\n      return entities.some(isFieldTouched);\n    };\n    var namePathListEntities = map.map(function(_ref) {\n      var value = _ref.value;\n      return value;\n    });\n    return isAllFieldsTouched ? namePathListEntities.every(isNamePathListTouched) : namePathListEntities.some(isNamePathListTouched);\n  };\n  this.isFieldTouched = function(name) {\n    _this.warningUnhooked();\n    return _this.isFieldsTouched([name]);\n  };\n  this.isFieldsValidating = function(nameList) {\n    _this.warningUnhooked();\n    var fieldEntities = _this.getFieldEntities();\n    if (!nameList) {\n      return fieldEntities.some(function(testField) {\n        return testField.isFieldValidating();\n      });\n    }\n    var namePathList = nameList.map(getNamePath);\n    return fieldEntities.some(function(testField) {\n      var fieldNamePath = testField.getNamePath();\n      return containsNamePath(namePathList, fieldNamePath) && testField.isFieldValidating();\n    });\n  };\n  this.isFieldValidating = function(name) {\n    _this.warningUnhooked();\n    return _this.isFieldsValidating([name]);\n  };\n  this.resetWithFieldInitialValue = function() {\n    var info = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    var cache = new NameMap();\n    var fieldEntities = _this.getFieldEntities(true);\n    fieldEntities.forEach(function(field) {\n      var initialValue = field.props.initialValue;\n      var namePath = field.getNamePath();\n      if (initialValue !== void 0) {\n        var records = cache.get(namePath) || /* @__PURE__ */ new Set();\n        records.add({\n          entity: field,\n          value: initialValue\n        });\n        cache.set(namePath, records);\n      }\n    });\n    var resetWithFields = function resetWithFields2(entities) {\n      entities.forEach(function(field) {\n        var initialValue = field.props.initialValue;\n        if (initialValue !== void 0) {\n          var namePath = field.getNamePath();\n          var formInitialValue = _this.getInitialValue(namePath);\n          if (formInitialValue !== void 0) {\n            warningOnce(false, \"Form already set 'initialValues' with path '\".concat(namePath.join(\".\"), \"'. Field can not overwrite it.\"));\n          } else {\n            var records = cache.get(namePath);\n            if (records && records.size > 1) {\n              warningOnce(false, \"Multiple Field with path '\".concat(namePath.join(\".\"), \"' set 'initialValue'. Can not decide which one to pick.\"));\n            } else if (records) {\n              var originValue = _this.getFieldValue(namePath);\n              if (!info.skipExist || originValue === void 0) {\n                _this.store = setValue(_this.store, namePath, _toConsumableArray(records)[0].value);\n              }\n            }\n          }\n        }\n      });\n    };\n    var requiredFieldEntities;\n    if (info.entities) {\n      requiredFieldEntities = info.entities;\n    } else if (info.namePathList) {\n      requiredFieldEntities = [];\n      info.namePathList.forEach(function(namePath) {\n        var records = cache.get(namePath);\n        if (records) {\n          var _requiredFieldEntitie;\n          (_requiredFieldEntitie = requiredFieldEntities).push.apply(_requiredFieldEntitie, _toConsumableArray(_toConsumableArray(records).map(function(r2) {\n            return r2.entity;\n          })));\n        }\n      });\n    } else {\n      requiredFieldEntities = fieldEntities;\n    }\n    resetWithFields(requiredFieldEntities);\n  };\n  this.resetFields = function(nameList) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    if (!nameList) {\n      _this.store = setValues({}, _this.initialValues);\n      _this.resetWithFieldInitialValue();\n      _this.notifyObservers(prevStore, null, {\n        type: \"reset\"\n      });\n      return;\n    }\n    var namePathList = nameList.map(getNamePath);\n    namePathList.forEach(function(namePath) {\n      var initialValue = _this.getInitialValue(namePath);\n      _this.store = setValue(_this.store, namePath, initialValue);\n    });\n    _this.resetWithFieldInitialValue({\n      namePathList\n    });\n    _this.notifyObservers(prevStore, namePathList, {\n      type: \"reset\"\n    });\n  };\n  this.setFields = function(fields) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    fields.forEach(function(fieldData) {\n      var name = fieldData.name;\n      fieldData.errors;\n      var data = _objectWithoutProperties(fieldData, _excluded$2);\n      var namePath = getNamePath(name);\n      if (\"value\" in data) {\n        _this.store = setValue(_this.store, namePath, data.value);\n      }\n      _this.notifyObservers(prevStore, [namePath], {\n        type: \"setField\",\n        data: fieldData\n      });\n    });\n  };\n  this.getFields = function() {\n    var entities = _this.getFieldEntities(true);\n    var fields = entities.map(function(field) {\n      var namePath = field.getNamePath();\n      var meta = field.getMeta();\n      var fieldData = _objectSpread2$1(_objectSpread2$1({}, meta), {}, {\n        name: namePath,\n        value: _this.getFieldValue(namePath)\n      });\n      Object.defineProperty(fieldData, \"originRCField\", {\n        value: true\n      });\n      return fieldData;\n    });\n    return fields;\n  };\n  this.initEntityValue = function(entity) {\n    var initialValue = entity.props.initialValue;\n    if (initialValue !== void 0) {\n      var namePath = entity.getNamePath();\n      var prevValue = getValue$2(_this.store, namePath);\n      if (prevValue === void 0) {\n        _this.store = setValue(_this.store, namePath, initialValue);\n      }\n    }\n  };\n  this.registerField = function(entity) {\n    _this.fieldEntities.push(entity);\n    if (entity.props.initialValue !== void 0) {\n      var prevStore = _this.store;\n      _this.resetWithFieldInitialValue({\n        entities: [entity],\n        skipExist: true\n      });\n      _this.notifyObservers(prevStore, [entity.getNamePath()], {\n        type: \"valueUpdate\",\n        source: \"internal\"\n      });\n    }\n    return function(isListField, preserve) {\n      var subNamePath = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];\n      _this.fieldEntities = _this.fieldEntities.filter(function(item) {\n        return item !== entity;\n      });\n      var mergedPreserve = preserve !== void 0 ? preserve : _this.preserve;\n      if (mergedPreserve === false && (!isListField || subNamePath.length > 1)) {\n        var namePath = entity.getNamePath();\n        var defaultValue = isListField ? void 0 : getValue$2(_this.initialValues, namePath);\n        if (namePath.length && _this.getFieldValue(namePath) !== defaultValue && _this.fieldEntities.every(function(field) {\n          return !matchNamePath(field.getNamePath(), namePath);\n        })) {\n          var _prevStore = _this.store;\n          _this.store = setValue(_prevStore, namePath, defaultValue, true);\n          _this.notifyObservers(_prevStore, [namePath], {\n            type: \"remove\"\n          });\n          _this.triggerDependenciesUpdate(_prevStore, namePath);\n        }\n      }\n    };\n  };\n  this.dispatch = function(action) {\n    switch (action.type) {\n      case \"updateValue\": {\n        var namePath = action.namePath, value = action.value;\n        _this.updateValue(namePath, value);\n        break;\n      }\n      case \"validateField\": {\n        var _namePath = action.namePath, triggerName = action.triggerName;\n        _this.validateFields([_namePath], {\n          triggerName\n        });\n        break;\n      }\n    }\n  };\n  this.notifyObservers = function(prevStore, namePathList, info) {\n    if (_this.subscribable) {\n      var mergedInfo = _objectSpread2$1(_objectSpread2$1({}, info), {}, {\n        store: _this.getFieldsValue(true)\n      });\n      _this.getFieldEntities().forEach(function(_ref2) {\n        var onStoreChange = _ref2.onStoreChange;\n        onStoreChange(prevStore, namePathList, mergedInfo);\n      });\n    } else {\n      _this.forceRootUpdate();\n    }\n  };\n  this.triggerDependenciesUpdate = function(prevStore, namePath) {\n    var childrenFields = _this.getDependencyChildrenFields(namePath);\n    if (childrenFields.length) {\n      _this.validateFields(childrenFields);\n    }\n    _this.notifyObservers(prevStore, childrenFields, {\n      type: \"dependenciesUpdate\",\n      relatedFields: [namePath].concat(_toConsumableArray(childrenFields))\n    });\n    return childrenFields;\n  };\n  this.updateValue = function(name, value) {\n    var namePath = getNamePath(name);\n    var prevStore = _this.store;\n    _this.store = setValue(_this.store, namePath, value);\n    _this.notifyObservers(prevStore, [namePath], {\n      type: \"valueUpdate\",\n      source: \"internal\"\n    });\n    var childrenFields = _this.triggerDependenciesUpdate(prevStore, namePath);\n    var onValuesChange = _this.callbacks.onValuesChange;\n    if (onValuesChange) {\n      var changedValues = cloneByNamePathList(_this.store, [namePath]);\n      onValuesChange(changedValues, _this.getFieldsValue());\n    }\n    _this.triggerOnFieldsChange([namePath].concat(_toConsumableArray(childrenFields)));\n  };\n  this.setFieldsValue = function(store) {\n    _this.warningUnhooked();\n    var prevStore = _this.store;\n    if (store) {\n      _this.store = setValues(_this.store, store);\n    }\n    _this.notifyObservers(prevStore, null, {\n      type: \"valueUpdate\",\n      source: \"external\"\n    });\n  };\n  this.getDependencyChildrenFields = function(rootNamePath) {\n    var children = /* @__PURE__ */ new Set();\n    var childrenFields = [];\n    var dependencies2fields = new NameMap();\n    _this.getFieldEntities().forEach(function(field) {\n      var dependencies = field.props.dependencies;\n      (dependencies || []).forEach(function(dependency) {\n        var dependencyNamePath = getNamePath(dependency);\n        dependencies2fields.update(dependencyNamePath, function() {\n          var fields = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : /* @__PURE__ */ new Set();\n          fields.add(field);\n          return fields;\n        });\n      });\n    });\n    var fillChildren = function fillChildren2(namePath) {\n      var fields = dependencies2fields.get(namePath) || /* @__PURE__ */ new Set();\n      fields.forEach(function(field) {\n        if (!children.has(field)) {\n          children.add(field);\n          var fieldNamePath = field.getNamePath();\n          if (field.isFieldDirty() && fieldNamePath.length) {\n            childrenFields.push(fieldNamePath);\n            fillChildren2(fieldNamePath);\n          }\n        }\n      });\n    };\n    fillChildren(rootNamePath);\n    return childrenFields;\n  };\n  this.triggerOnFieldsChange = function(namePathList, filedErrors) {\n    var onFieldsChange = _this.callbacks.onFieldsChange;\n    if (onFieldsChange) {\n      var fields = _this.getFields();\n      if (filedErrors) {\n        var cache = new NameMap();\n        filedErrors.forEach(function(_ref3) {\n          var name = _ref3.name, errors = _ref3.errors;\n          cache.set(name, errors);\n        });\n        fields.forEach(function(field) {\n          field.errors = cache.get(field.name) || field.errors;\n        });\n      }\n      var changedFields = fields.filter(function(_ref4) {\n        var fieldName = _ref4.name;\n        return containsNamePath(namePathList, fieldName);\n      });\n      onFieldsChange(changedFields, fields);\n    }\n  };\n  this.validateFields = function(nameList, options) {\n    _this.warningUnhooked();\n    var provideNameList = !!nameList;\n    var namePathList = provideNameList ? nameList.map(getNamePath) : [];\n    var promiseList = [];\n    _this.getFieldEntities(true).forEach(function(field) {\n      if (!provideNameList) {\n        namePathList.push(field.getNamePath());\n      }\n      if ((options === null || options === void 0 ? void 0 : options.recursive) && provideNameList) {\n        var namePath = field.getNamePath();\n        if (namePath.every(function(nameUnit, i) {\n          return nameList[i] === nameUnit || nameList[i] === void 0;\n        })) {\n          namePathList.push(namePath);\n        }\n      }\n      if (!field.props.rules || !field.props.rules.length) {\n        return;\n      }\n      var fieldNamePath = field.getNamePath();\n      if (!provideNameList || containsNamePath(namePathList, fieldNamePath)) {\n        var promise = field.validateRules(_objectSpread2$1({\n          validateMessages: _objectSpread2$1(_objectSpread2$1({}, defaultValidateMessages), _this.validateMessages)\n        }, options));\n        promiseList.push(promise.then(function() {\n          return {\n            name: fieldNamePath,\n            errors: [],\n            warnings: []\n          };\n        }).catch(function(ruleErrors) {\n          var mergedErrors = [];\n          var mergedWarnings = [];\n          ruleErrors.forEach(function(_ref5) {\n            var warningOnly = _ref5.rule.warningOnly, errors = _ref5.errors;\n            if (warningOnly) {\n              mergedWarnings.push.apply(mergedWarnings, _toConsumableArray(errors));\n            } else {\n              mergedErrors.push.apply(mergedErrors, _toConsumableArray(errors));\n            }\n          });\n          if (mergedErrors.length) {\n            return Promise.reject({\n              name: fieldNamePath,\n              errors: mergedErrors,\n              warnings: mergedWarnings\n            });\n          }\n          return {\n            name: fieldNamePath,\n            errors: mergedErrors,\n            warnings: mergedWarnings\n          };\n        }));\n      }\n    });\n    var summaryPromise = allPromiseFinish(promiseList);\n    _this.lastValidatePromise = summaryPromise;\n    summaryPromise.catch(function(results) {\n      return results;\n    }).then(function(results) {\n      var resultNamePathList = results.map(function(_ref6) {\n        var name = _ref6.name;\n        return name;\n      });\n      _this.notifyObservers(_this.store, resultNamePathList, {\n        type: \"validateFinish\"\n      });\n      _this.triggerOnFieldsChange(resultNamePathList, results);\n    });\n    var returnPromise = summaryPromise.then(function() {\n      if (_this.lastValidatePromise === summaryPromise) {\n        return Promise.resolve(_this.getFieldsValue(namePathList));\n      }\n      return Promise.reject([]);\n    }).catch(function(results) {\n      var errorList = results.filter(function(result) {\n        return result && result.errors.length;\n      });\n      return Promise.reject({\n        values: _this.getFieldsValue(namePathList),\n        errorFields: errorList,\n        outOfDate: _this.lastValidatePromise !== summaryPromise\n      });\n    });\n    returnPromise.catch(function(e2) {\n      return e2;\n    });\n    return returnPromise;\n  };\n  this.submit = function() {\n    _this.warningUnhooked();\n    _this.validateFields().then(function(values) {\n      var onFinish = _this.callbacks.onFinish;\n      if (onFinish) {\n        try {\n          onFinish(values);\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    }).catch(function(e2) {\n      var onFinishFailed = _this.callbacks.onFinishFailed;\n      if (onFinishFailed) {\n        onFinishFailed(e2);\n      }\n    });\n  };\n  this.forceRootUpdate = forceRootUpdate;\n});\nfunction useForm(form) {\n  var formRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState({}), _React$useState2 = _slicedToArray(_React$useState, 2), forceUpdate = _React$useState2[1];\n  if (!formRef.current) {\n    if (form) {\n      formRef.current = form;\n    } else {\n      var forceReRender = function forceReRender2() {\n        forceUpdate({});\n      };\n      var formStore = new FormStore(forceReRender);\n      formRef.current = formStore.getForm();\n    }\n  }\n  return [formRef.current];\n}\nvar FormContext = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  triggerFormChange: function triggerFormChange() {\n  },\n  triggerFormFinish: function triggerFormFinish() {\n  },\n  registerForm: function registerForm() {\n  },\n  unregisterForm: function unregisterForm() {\n  }\n});\nvar FormProvider = function FormProvider2(_ref) {\n  var validateMessages = _ref.validateMessages, onFormChange = _ref.onFormChange, onFormFinish = _ref.onFormFinish, children = _ref.children;\n  var formContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FormContext);\n  var formsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FormContext.Provider, {\n    value: _objectSpread2$1(_objectSpread2$1({}, formContext), {}, {\n      validateMessages: _objectSpread2$1(_objectSpread2$1({}, formContext.validateMessages), validateMessages),\n      triggerFormChange: function triggerFormChange2(name, changedFields) {\n        if (onFormChange) {\n          onFormChange(name, {\n            changedFields,\n            forms: formsRef.current\n          });\n        }\n        formContext.triggerFormChange(name, changedFields);\n      },\n      triggerFormFinish: function triggerFormFinish2(name, values) {\n        if (onFormFinish) {\n          onFormFinish(name, {\n            values,\n            forms: formsRef.current\n          });\n        }\n        formContext.triggerFormFinish(name, values);\n      },\n      registerForm: function registerForm2(name, form) {\n        if (name) {\n          formsRef.current = _objectSpread2$1(_objectSpread2$1({}, formsRef.current), {}, _defineProperty$1({}, name, form));\n        }\n        formContext.registerForm(name, form);\n      },\n      unregisterForm: function unregisterForm2(name) {\n        var newForms = _objectSpread2$1({}, formsRef.current);\n        delete newForms[name];\n        formsRef.current = newForms;\n        formContext.unregisterForm(name);\n      }\n    })\n  }, children);\n};\nvar _excluded$1 = [\"name\", \"initialValues\", \"fields\", \"form\", \"preserve\", \"children\", \"component\", \"validateMessages\", \"validateTrigger\", \"onValuesChange\", \"onFieldsChange\", \"onFinish\", \"onFinishFailed\"];\nvar Form = function Form2(_ref, ref) {\n  var name = _ref.name, initialValues = _ref.initialValues, fields = _ref.fields, form = _ref.form, preserve = _ref.preserve, children = _ref.children, _ref$component = _ref.component, Component2 = _ref$component === void 0 ? \"form\" : _ref$component, validateMessages = _ref.validateMessages, _ref$validateTrigger = _ref.validateTrigger, validateTrigger = _ref$validateTrigger === void 0 ? \"onChange\" : _ref$validateTrigger, onValuesChange = _ref.onValuesChange, _onFieldsChange = _ref.onFieldsChange, _onFinish = _ref.onFinish, onFinishFailed = _ref.onFinishFailed, restProps = _objectWithoutProperties(_ref, _excluded$1);\n  var formContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(FormContext);\n  var _useForm = useForm(form), _useForm2 = _slicedToArray(_useForm, 1), formInstance = _useForm2[0];\n  var _formInstance$getInte = formInstance.getInternalHooks(HOOK_MARK), useSubscribe = _formInstance$getInte.useSubscribe, setInitialValues = _formInstance$getInte.setInitialValues, setCallbacks = _formInstance$getInte.setCallbacks, setValidateMessages = _formInstance$getInte.setValidateMessages, setPreserve = _formInstance$getInte.setPreserve;\n  react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, function() {\n    return formInstance;\n  });\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    formContext.registerForm(name, formInstance);\n    return function() {\n      formContext.unregisterForm(name);\n    };\n  }, [formContext, formInstance, name]);\n  setValidateMessages(_objectSpread2$1(_objectSpread2$1({}, formContext.validateMessages), validateMessages));\n  setCallbacks({\n    onValuesChange,\n    onFieldsChange: function onFieldsChange(changedFields) {\n      formContext.triggerFormChange(name, changedFields);\n      if (_onFieldsChange) {\n        for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          rest[_key - 1] = arguments[_key];\n        }\n        _onFieldsChange.apply(void 0, [changedFields].concat(rest));\n      }\n    },\n    onFinish: function onFinish(values2) {\n      formContext.triggerFormFinish(name, values2);\n      if (_onFinish) {\n        _onFinish(values2);\n      }\n    },\n    onFinishFailed\n  });\n  setPreserve(preserve);\n  var mountRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  setInitialValues(initialValues, !mountRef.current);\n  if (!mountRef.current) {\n    mountRef.current = true;\n  }\n  var childrenNode = children;\n  var childrenRenderProps = typeof children === \"function\";\n  if (childrenRenderProps) {\n    var values = formInstance.getFieldsValue(true);\n    childrenNode = children(values, formInstance);\n  }\n  useSubscribe(!childrenRenderProps);\n  var prevFieldsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    if (!isSimilar(prevFieldsRef.current || [], fields || [])) {\n      formInstance.setFields(fields || []);\n    }\n    prevFieldsRef.current = fields;\n  }, [fields, formInstance]);\n  var formContextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    return _objectSpread2$1(_objectSpread2$1({}, formInstance), {}, {\n      validateTrigger\n    });\n  }, [formInstance, validateTrigger]);\n  var wrapperNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Context.Provider, {\n    value: formContextValue\n  }, childrenNode);\n  if (Component2 === false) {\n    return wrapperNode;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component2, _extends$1({}, restProps, {\n    onSubmit: function onSubmit(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      formInstance.submit();\n    },\n    onReset: function onReset(event) {\n      var _restProps$onReset;\n      event.preventDefault();\n      formInstance.resetFields();\n      (_restProps$onReset = restProps.onReset) === null || _restProps$onReset === void 0 ? void 0 : _restProps$onReset.call(restProps, event);\n    }\n  }), wrapperNode);\n};\nvar InternalForm = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(Form);\nvar RefForm = InternalForm;\nRefForm.FormProvider = FormProvider;\nRefForm.Field = WrapperField;\nRefForm.List = List;\nRefForm.useForm = useForm;\nvar safeIsNaN = Number.isNaN || function ponyfill(value) {\n  return typeof value === \"number\" && value !== value;\n};\nfunction isEqual$1(first, second) {\n  if (first === second) {\n    return true;\n  }\n  if (safeIsNaN(first) && safeIsNaN(second)) {\n    return true;\n  }\n  return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n  for (var i = 0; i < newInputs.length; i++) {\n    if (!isEqual$1(newInputs[i], lastInputs[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction memoizeOne(resultFn, isEqual2) {\n  if (isEqual2 === void 0) {\n    isEqual2 = areInputsEqual;\n  }\n  var cache = null;\n  function memoized() {\n    var newArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newArgs[_i] = arguments[_i];\n    }\n    if (cache && cache.lastThis === this && isEqual2(newArgs, cache.lastArgs)) {\n      return cache.lastResult;\n    }\n    var lastResult = resultFn.apply(this, newArgs);\n    cache = {\n      lastResult,\n      lastArgs: newArgs,\n      lastThis: this\n    };\n    return lastResult;\n  }\n  memoized.clear = function clear2() {\n    cache = null;\n  };\n  return memoized;\n}\nvar devWarning = function(valid, component, message2) {\n  warningOnce(valid, \"[antd: \".concat(component, \"] \").concat(message2));\n};\nvar Pagination = {\n  items_per_page: \"/ page\",\n  jump_to: \"Go to\",\n  jump_to_confirm: \"confirm\",\n  page: \"Page\",\n  prev_page: \"Previous Page\",\n  next_page: \"Next Page\",\n  prev_5: \"Previous 5 Pages\",\n  next_5: \"Next 5 Pages\",\n  prev_3: \"Previous 3 Pages\",\n  next_3: \"Next 3 Pages\",\n  page_size: \"Page Size\"\n};\nvar locale$2 = {\n  locale: \"en_US\",\n  today: \"Today\",\n  now: \"Now\",\n  backToToday: \"Back to today\",\n  ok: \"Ok\",\n  clear: \"Clear\",\n  month: \"Month\",\n  year: \"Year\",\n  timeSelect: \"select time\",\n  dateSelect: \"select date\",\n  weekSelect: \"Choose a week\",\n  monthSelect: \"Choose a month\",\n  yearSelect: \"Choose a year\",\n  decadeSelect: \"Choose a decade\",\n  yearFormat: \"YYYY\",\n  dateFormat: \"M/D/YYYY\",\n  dayFormat: \"D\",\n  dateTimeFormat: \"M/D/YYYY HH:mm:ss\",\n  monthBeforeYear: true,\n  previousMonth: \"Previous month (PageUp)\",\n  nextMonth: \"Next month (PageDown)\",\n  previousYear: \"Last year (Control + left)\",\n  nextYear: \"Next year (Control + right)\",\n  previousDecade: \"Last decade\",\n  nextDecade: \"Next decade\",\n  previousCentury: \"Last century\",\n  nextCentury: \"Next century\"\n};\nvar locale$1 = {\n  placeholder: \"Select time\",\n  rangePlaceholder: [\"Start time\", \"End time\"]\n};\nvar TimePicker = locale$1;\nvar locale = {\n  lang: _extends$1({\n    placeholder: \"Select date\",\n    yearPlaceholder: \"Select year\",\n    quarterPlaceholder: \"Select quarter\",\n    monthPlaceholder: \"Select month\",\n    weekPlaceholder: \"Select week\",\n    rangePlaceholder: [\"Start date\", \"End date\"],\n    rangeYearPlaceholder: [\"Start year\", \"End year\"],\n    rangeMonthPlaceholder: [\"Start month\", \"End month\"],\n    rangeWeekPlaceholder: [\"Start week\", \"End week\"]\n  }, locale$2),\n  timePickerLocale: _extends$1({}, TimePicker)\n};\nvar DatePicker = locale;\nvar typeTemplate = \"${label} is not a valid ${type}\";\nvar localeValues = {\n  locale: \"en\",\n  Pagination,\n  DatePicker,\n  TimePicker,\n  Calendar: DatePicker,\n  global: {\n    placeholder: \"Please select\"\n  },\n  Table: {\n    filterTitle: \"Filter menu\",\n    filterConfirm: \"OK\",\n    filterReset: \"Reset\",\n    filterEmptyText: \"No filters\",\n    filterCheckall: \"Select all items\",\n    filterSearchPlaceholder: \"Search in filters\",\n    emptyText: \"No data\",\n    selectAll: \"Select current page\",\n    selectInvert: \"Invert current page\",\n    selectNone: \"Clear all data\",\n    selectionAll: \"Select all data\",\n    sortTitle: \"Sort\",\n    expand: \"Expand row\",\n    collapse: \"Collapse row\",\n    triggerDesc: \"Click to sort descending\",\n    triggerAsc: \"Click to sort ascending\",\n    cancelSort: \"Click to cancel sorting\"\n  },\n  Modal: {\n    okText: \"OK\",\n    cancelText: \"Cancel\",\n    justOkText: \"OK\"\n  },\n  Popconfirm: {\n    okText: \"OK\",\n    cancelText: \"Cancel\"\n  },\n  Transfer: {\n    titles: [\"\", \"\"],\n    searchPlaceholder: \"Search here\",\n    itemUnit: \"item\",\n    itemsUnit: \"items\",\n    remove: \"Remove\",\n    selectCurrent: \"Select current page\",\n    removeCurrent: \"Remove current page\",\n    selectAll: \"Select all data\",\n    removeAll: \"Remove all data\",\n    selectInvert: \"Invert current page\"\n  },\n  Upload: {\n    uploading: \"Uploading...\",\n    removeFile: \"Remove file\",\n    uploadError: \"Upload error\",\n    previewFile: \"Preview file\",\n    downloadFile: \"Download file\"\n  },\n  Empty: {\n    description: \"No Data\"\n  },\n  Icon: {\n    icon: \"icon\"\n  },\n  Text: {\n    edit: \"Edit\",\n    copy: \"Copy\",\n    copied: \"Copied\",\n    expand: \"Expand\"\n  },\n  PageHeader: {\n    back: \"Back\"\n  },\n  Form: {\n    optional: \"(optional)\",\n    defaultValidateMessages: {\n      \"default\": \"Field validation error for ${label}\",\n      required: \"Please enter ${label}\",\n      \"enum\": \"${label} must be one of [${enum}]\",\n      whitespace: \"${label} cannot be a blank character\",\n      date: {\n        format: \"${label} date format is invalid\",\n        parse: \"${label} cannot be converted to a date\",\n        invalid: \"${label} is an invalid date\"\n      },\n      types: {\n        string: typeTemplate,\n        method: typeTemplate,\n        array: typeTemplate,\n        object: typeTemplate,\n        number: typeTemplate,\n        date: typeTemplate,\n        \"boolean\": typeTemplate,\n        integer: typeTemplate,\n        \"float\": typeTemplate,\n        regexp: typeTemplate,\n        email: typeTemplate,\n        url: typeTemplate,\n        hex: typeTemplate\n      },\n      string: {\n        len: \"${label} must be ${len} characters\",\n        min: \"${label} must be at least ${min} characters\",\n        max: \"${label} must be up to ${max} characters\",\n        range: \"${label} must be between ${min}-${max} characters\"\n      },\n      number: {\n        len: \"${label} must be equal to ${len}\",\n        min: \"${label} must be minimum ${min}\",\n        max: \"${label} must be maximum ${max}\",\n        range: \"${label} must be between ${min}-${max}\"\n      },\n      array: {\n        len: \"Must be ${len} ${label}\",\n        min: \"At least ${min} ${label}\",\n        max: \"At most ${max} ${label}\",\n        range: \"The amount of ${label} must be between ${min}-${max}\"\n      },\n      pattern: {\n        mismatch: \"${label} does not match the pattern ${pattern}\"\n      }\n    }\n  },\n  Image: {\n    preview: \"Preview\"\n  }\n};\nvar defaultLocale = localeValues;\nvar runtimeLocale = _extends$1({}, defaultLocale.Modal);\nfunction changeConfirmLocale(newLocale) {\n  if (newLocale) {\n    runtimeLocale = _extends$1(_extends$1({}, runtimeLocale), newLocale);\n  } else {\n    runtimeLocale = _extends$1({}, defaultLocale.Modal);\n  }\n}\nvar LocaleContext = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.createContext)(void 0);\nvar LocaleContext$1 = LocaleContext;\nvar ANT_MARK = \"internalMark\";\nvar LocaleProvider = /* @__PURE__ */ function(_React$Component) {\n  _inherits(LocaleProvider2, _React$Component);\n  var _super = _createSuper(LocaleProvider2);\n  function LocaleProvider2(props) {\n    var _this;\n    _classCallCheck(this, LocaleProvider2);\n    _this = _super.call(this, props);\n    _this.getMemoizedContextValue = memoizeOne(function(localeValue) {\n      return _extends$1(_extends$1({}, localeValue), {\n        exist: true\n      });\n    });\n    changeConfirmLocale(props.locale && props.locale.Modal);\n    devWarning(props._ANT_MARK__ === ANT_MARK, \"LocaleProvider\", \"`LocaleProvider` is deprecated. Please use `locale` with `ConfigProvider` instead: http://u.ant.design/locale\");\n    return _this;\n  }\n  _createClass(LocaleProvider2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      changeConfirmLocale(this.props.locale && this.props.locale.Modal);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var locale2 = this.props.locale;\n      if (prevProps.locale !== locale2) {\n        changeConfirmLocale(locale2 && locale2.Modal);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      changeConfirmLocale();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props, locale2 = _this$props.locale, children = _this$props.children;\n      var contextValue = this.getMemoizedContextValue(locale2);\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocaleContext$1.Provider, {\n        value: contextValue\n      }, children);\n    }\n  }]);\n  return LocaleProvider2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nLocaleProvider.defaultProps = {\n  locale: {}\n};\nvar LocaleReceiver = /* @__PURE__ */ function(_React$Component) {\n  _inherits(LocaleReceiver2, _React$Component);\n  var _super = _createSuper(LocaleReceiver2);\n  function LocaleReceiver2() {\n    _classCallCheck(this, LocaleReceiver2);\n    return _super.apply(this, arguments);\n  }\n  _createClass(LocaleReceiver2, [{\n    key: \"getLocale\",\n    value: function getLocale() {\n      var _this$props = this.props, componentName = _this$props.componentName, defaultLocale$1 = _this$props.defaultLocale;\n      var locale2 = defaultLocale$1 || defaultLocale[componentName !== null && componentName !== void 0 ? componentName : \"global\"];\n      var antLocale = this.context;\n      var localeFromContext = componentName && antLocale ? antLocale[componentName] : {};\n      return _extends$1(_extends$1({}, locale2 instanceof Function ? locale2() : locale2), localeFromContext || {});\n    }\n  }, {\n    key: \"getLocaleCode\",\n    value: function getLocaleCode() {\n      var antLocale = this.context;\n      var localeCode = antLocale && antLocale.locale;\n      if (antLocale && antLocale.exist && !localeCode) {\n        return defaultLocale.locale;\n      }\n      return localeCode;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children(this.getLocale(), this.getLocaleCode(), this.context);\n    }\n  }]);\n  return LocaleReceiver2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nLocaleReceiver.defaultProps = {\n  componentName: \"global\"\n};\nLocaleReceiver.contextType = LocaleContext$1;\nvar Empty$2 = function Empty() {\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls(\"empty-img-default\");\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n    className: prefixCls,\n    width: \"184\",\n    height: \"152\",\n    viewBox: \"0 0 184 152\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(24 31.67)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ellipse\", {\n    className: \"\".concat(prefixCls, \"-ellipse\"),\n    cx: \"67.797\",\n    cy: \"106.89\",\n    rx: \"67.797\",\n    ry: \"12.668\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    className: \"\".concat(prefixCls, \"-path-1\"),\n    d: \"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    className: \"\".concat(prefixCls, \"-path-2\"),\n    d: \"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z\",\n    transform: \"translate(13.56)\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    className: \"\".concat(prefixCls, \"-path-3\"),\n    d: \"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    className: \"\".concat(prefixCls, \"-path-4\"),\n    d: \"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z\"\n  })), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    className: \"\".concat(prefixCls, \"-path-5\"),\n    d: \"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"\".concat(prefixCls, \"-g\"),\n    transform: \"translate(149.65 15.383)\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ellipse\", {\n    cx: \"20.654\",\n    cy: \"3.167\",\n    rx: \"2.849\",\n    ry: \"2.815\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z\"\n  }))));\n};\nvar DefaultEmptyImg = Empty$2;\nvar Simple = function Simple2() {\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls;\n  var prefixCls = getPrefixCls(\"empty-img-simple\");\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"svg\", {\n    className: prefixCls,\n    width: \"64\",\n    height: \"41\",\n    viewBox: \"0 0 64 41\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    transform: \"translate(0 1)\",\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"ellipse\", {\n    className: \"\".concat(prefixCls, \"-ellipse\"),\n    cx: \"32\",\n    cy: \"33\",\n    rx: \"32\",\n    ry: \"7\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"g\", {\n    className: \"\".concat(prefixCls, \"-g\"),\n    fillRule: \"nonzero\"\n  }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M55 12.76L44.854 1.258C44.367.474 43.656 0 42.907 0H21.093c-.749 0-1.46.474-1.947 1.257L9 12.761V22h46v-9.24z\"\n  }), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"path\", {\n    d: \"M41.613 15.931c0-1.605.994-2.93 2.227-2.931H55v18.137C55 33.26 53.68 35 52.05 35h-40.1C10.32 35 9 33.259 9 31.137V13h11.16c1.233 0 2.227 1.323 2.227 2.928v.022c0 1.605 1.005 2.901 2.237 2.901h14.752c1.232 0 2.237-1.308 2.237-2.913v-.007z\",\n    className: \"\".concat(prefixCls, \"-path\")\n  }))));\n};\nvar SimpleEmptyImg = Simple;\nvar __rest$8 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar defaultEmptyImg = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DefaultEmptyImg, null);\nvar simpleEmptyImg = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SimpleEmptyImg, null);\nvar Empty2 = function Empty3(_a) {\n  var className = _a.className, customizePrefixCls = _a.prefixCls, _a$image = _a.image, image = _a$image === void 0 ? defaultEmptyImg : _a$image, description = _a.description, children = _a.children, imageStyle = _a.imageStyle, restProps = __rest$8(_a, [\"className\", \"prefixCls\", \"image\", \"description\", \"children\", \"imageStyle\"]);\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls, direction = _React$useContext.direction;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocaleReceiver, {\n    componentName: \"Empty\"\n  }, function(locale2) {\n    var _classNames;\n    var prefixCls = getPrefixCls(\"empty\", customizePrefixCls);\n    var des = typeof description !== \"undefined\" ? description : locale2.description;\n    var alt = typeof des === \"string\" ? des : \"empty\";\n    var imageNode = null;\n    if (typeof image === \"string\") {\n      imageNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"img\", {\n        alt,\n        src: image\n      });\n    } else {\n      imageNode = image;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", _extends$1({\n      className: classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-normal\"), image === simpleEmptyImg), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _classNames), className)\n    }, restProps), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-image\"),\n      style: imageStyle\n    }, imageNode), des && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-description\")\n    }, des), children && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-footer\")\n    }, children));\n  });\n};\nEmpty2.PRESENTED_IMAGE_DEFAULT = defaultEmptyImg;\nEmpty2.PRESENTED_IMAGE_SIMPLE = simpleEmptyImg;\nvar Empty$1 = Empty2;\nvar renderEmpty = function renderEmpty2(componentName) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, null, function(_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var prefix = getPrefixCls(\"empty\");\n    switch (componentName) {\n      case \"Table\":\n      case \"List\":\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Empty$1, {\n          image: Empty$1.PRESENTED_IMAGE_SIMPLE\n        });\n      case \"Select\":\n      case \"TreeSelect\":\n      case \"Cascader\":\n      case \"Transfer\":\n      case \"Mentions\":\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Empty$1, {\n          image: Empty$1.PRESENTED_IMAGE_SIMPLE,\n          className: \"\".concat(prefix, \"-small\")\n        });\n      default:\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Empty$1, null);\n    }\n  });\n};\nvar defaultRenderEmpty = renderEmpty;\nvar defaultGetPrefixCls = function defaultGetPrefixCls2(suffixCls, customizePrefixCls) {\n  if (customizePrefixCls)\n    return customizePrefixCls;\n  return suffixCls ? \"ant-\".concat(suffixCls) : \"ant\";\n};\nvar ConfigContext = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext({\n  getPrefixCls: defaultGetPrefixCls,\n  renderEmpty: defaultRenderEmpty\n});\nvar ConfigConsumer = ConfigContext.Consumer;\nvar SizeContext = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar SizeContextProvider = function SizeContextProvider2(_ref) {\n  var children = _ref.children, size = _ref.size;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SizeContext.Consumer, null, function(originSize) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SizeContext.Provider, {\n      value: size || originSize\n    }, children);\n  });\n};\nvar SizeContext$1 = SizeContext;\nvar CloseOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nvar CloseOutlinedSvg = CloseOutlined$2;\nvar CloseOutlined = function CloseOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nCloseOutlined.displayName = \"CloseOutlined\";\nvar CloseOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(CloseOutlined);\nvar CheckCircleOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M699 353h-46.9c-10.2 0-19.9 4.9-25.9 13.3L469 584.3l-71.2-98.8c-6-8.3-15.6-13.3-25.9-13.3H325c-6.5 0-10.3 7.4-6.5 12.7l124.6 172.8a31.8 31.8 0 0051.7 0l210.6-292c3.9-5.3.1-12.7-6.4-12.7z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"check-circle\", \"theme\": \"outlined\" };\nvar CheckCircleOutlinedSvg = CheckCircleOutlined$2;\nvar CheckCircleOutlined = function CheckCircleOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: CheckCircleOutlinedSvg\n  }));\n};\nCheckCircleOutlined.displayName = \"CheckCircleOutlined\";\nvar CheckCircleOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(CheckCircleOutlined);\nvar CloseCircleOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nvar CloseCircleOutlinedSvg = CloseCircleOutlined$2;\nvar CloseCircleOutlined = function CloseCircleOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\nCloseCircleOutlined.displayName = \"CloseCircleOutlined\";\nvar CloseCircleOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(CloseCircleOutlined);\nvar ExclamationCircleOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 688a48 48 0 1096 0 48 48 0 10-96 0zm24-112h48c4.4 0 8-3.6 8-8V296c0-4.4-3.6-8-8-8h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"outlined\" };\nvar ExclamationCircleOutlinedSvg = ExclamationCircleOutlined$2;\nvar ExclamationCircleOutlined = function ExclamationCircleOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: ExclamationCircleOutlinedSvg\n  }));\n};\nExclamationCircleOutlined.displayName = \"ExclamationCircleOutlined\";\nvar ExclamationCircleOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(ExclamationCircleOutlined);\nvar InfoCircleOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M464 336a48 48 0 1096 0 48 48 0 10-96 0zm72 112h-48c-4.4 0-8 3.6-8 8v272c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V456c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"info-circle\", \"theme\": \"outlined\" };\nvar InfoCircleOutlinedSvg = InfoCircleOutlined$2;\nvar InfoCircleOutlined = function InfoCircleOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: InfoCircleOutlinedSvg\n  }));\n};\nInfoCircleOutlined.displayName = \"InfoCircleOutlined\";\nvar InfoCircleOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(InfoCircleOutlined);\nfunction createUseNotification(getNotificationInstance2, getRCNoticeProps2) {\n  var useNotification$1 = function useNotification$12() {\n    var getPrefixCls;\n    var innerInstance = null;\n    var proxy = {\n      add: function add(noticeProps, holderCallback) {\n        innerInstance === null || innerInstance === void 0 ? void 0 : innerInstance.component.add(noticeProps, holderCallback);\n      }\n    };\n    var _useRCNotification = useNotification(proxy), _useRCNotification2 = _slicedToArray(_useRCNotification, 2), hookNotify = _useRCNotification2[0], holder = _useRCNotification2[1];\n    function notify(args) {\n      var customizePrefixCls = args.prefixCls;\n      var mergedPrefixCls = getPrefixCls(\"notification\", customizePrefixCls);\n      getNotificationInstance2(_extends$1(_extends$1({}, args), {\n        prefixCls: mergedPrefixCls\n      }), function(_ref) {\n        var prefixCls = _ref.prefixCls, instance = _ref.instance;\n        innerInstance = instance;\n        hookNotify(getRCNoticeProps2(args, prefixCls));\n      });\n    }\n    var hookApiRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n    hookApiRef.current.open = notify;\n    [\"success\", \"info\", \"warning\", \"error\"].forEach(function(type4) {\n      hookApiRef.current[type4] = function(args) {\n        return hookApiRef.current.open(_extends$1(_extends$1({}, args), {\n          type: type4\n        }));\n      };\n    });\n    return [hookApiRef.current, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, {\n      key: \"holder\"\n    }, function(context) {\n      getPrefixCls = context.getPrefixCls;\n      return holder;\n    })];\n  };\n  return useNotification$1;\n}\nglobalThis && globalThis.__awaiter || function(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function(resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function(resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e2) {\n        reject(e2);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e2) {\n        reject(e2);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar notificationInstance = {};\nvar defaultDuration$1 = 4.5;\nvar defaultTop$1 = 24;\nvar defaultBottom = 24;\nvar defaultPrefixCls$1 = \"\";\nvar defaultPlacement = \"topRight\";\nvar defaultGetContainer;\nvar defaultCloseIcon;\nvar rtl$1 = false;\nvar maxCount$1;\nfunction setNotificationConfig(options) {\n  var duration = options.duration, placement = options.placement, bottom = options.bottom, top = options.top, getContainer2 = options.getContainer, closeIcon = options.closeIcon, prefixCls = options.prefixCls;\n  if (prefixCls !== void 0) {\n    defaultPrefixCls$1 = prefixCls;\n  }\n  if (duration !== void 0) {\n    defaultDuration$1 = duration;\n  }\n  if (placement !== void 0) {\n    defaultPlacement = placement;\n  } else if (options.rtl) {\n    defaultPlacement = \"topLeft\";\n  }\n  if (bottom !== void 0) {\n    defaultBottom = bottom;\n  }\n  if (top !== void 0) {\n    defaultTop$1 = top;\n  }\n  if (getContainer2 !== void 0) {\n    defaultGetContainer = getContainer2;\n  }\n  if (closeIcon !== void 0) {\n    defaultCloseIcon = closeIcon;\n  }\n  if (options.rtl !== void 0) {\n    rtl$1 = options.rtl;\n  }\n  if (options.maxCount !== void 0) {\n    maxCount$1 = options.maxCount;\n  }\n}\nfunction getPlacementStyle(placement) {\n  var top = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultTop$1;\n  var bottom = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultBottom;\n  var style2;\n  switch (placement) {\n    case \"topLeft\":\n      style2 = {\n        left: 0,\n        top,\n        bottom: \"auto\"\n      };\n      break;\n    case \"topRight\":\n      style2 = {\n        right: 0,\n        top,\n        bottom: \"auto\"\n      };\n      break;\n    case \"bottomLeft\":\n      style2 = {\n        left: 0,\n        top: \"auto\",\n        bottom\n      };\n      break;\n    default:\n      style2 = {\n        right: 0,\n        top: \"auto\",\n        bottom\n      };\n      break;\n  }\n  return style2;\n}\nfunction getNotificationInstance(args, callback) {\n  var _args$placement = args.placement, placement = _args$placement === void 0 ? defaultPlacement : _args$placement, top = args.top, bottom = args.bottom, _args$getContainer = args.getContainer, getContainer2 = _args$getContainer === void 0 ? defaultGetContainer : _args$getContainer, customizePrefixCls = args.prefixCls;\n  var _globalConfig = globalConfig(), getPrefixCls = _globalConfig.getPrefixCls, getIconPrefixCls = _globalConfig.getIconPrefixCls;\n  var prefixCls = getPrefixCls(\"notification\", customizePrefixCls || defaultPrefixCls$1);\n  var iconPrefixCls = getIconPrefixCls();\n  var cacheKey = \"\".concat(prefixCls, \"-\").concat(placement);\n  var cacheInstance = notificationInstance[cacheKey];\n  if (cacheInstance) {\n    Promise.resolve(cacheInstance).then(function(instance) {\n      callback({\n        prefixCls: \"\".concat(prefixCls, \"-notice\"),\n        iconPrefixCls,\n        instance\n      });\n    });\n    return;\n  }\n  var notificationClass = classNames(\"\".concat(prefixCls, \"-\").concat(placement), _defineProperty$1({}, \"\".concat(prefixCls, \"-rtl\"), rtl$1 === true));\n  notificationInstance[cacheKey] = new Promise(function(resolve) {\n    Notification.newInstance({\n      prefixCls,\n      className: notificationClass,\n      style: getPlacementStyle(placement, top, bottom),\n      getContainer: getContainer2,\n      maxCount: maxCount$1\n    }, function(notification2) {\n      resolve(notification2);\n      callback({\n        prefixCls: \"\".concat(prefixCls, \"-notice\"),\n        iconPrefixCls,\n        instance: notification2\n      });\n    });\n  });\n}\nvar typeToIcon$1 = {\n  success: CheckCircleOutlined$1,\n  info: InfoCircleOutlined$1,\n  error: CloseCircleOutlined$1,\n  warning: ExclamationCircleOutlined$1\n};\nfunction getRCNoticeProps$1(args, prefixCls, iconPrefixCls) {\n  var durationArg = args.duration, icon = args.icon, type4 = args.type, description = args.description, message2 = args.message, btn = args.btn, onClose2 = args.onClose, onClick = args.onClick, key2 = args.key, style2 = args.style, className = args.className, _args$closeIcon = args.closeIcon, closeIcon = _args$closeIcon === void 0 ? defaultCloseIcon : _args$closeIcon;\n  var duration = durationArg === void 0 ? defaultDuration$1 : durationArg;\n  var iconNode = null;\n  if (icon) {\n    iconNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-icon\")\n    }, args.icon);\n  } else if (type4) {\n    iconNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(typeToIcon$1[type4] || null, {\n      className: \"\".concat(prefixCls, \"-icon \").concat(prefixCls, \"-icon-\").concat(type4)\n    });\n  }\n  var closeIconToRender = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-close-x\")\n  }, closeIcon || /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CloseOutlined$1, {\n    className: \"\".concat(prefixCls, \"-close-icon\")\n  }));\n  var autoMarginTag = !description && iconNode ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-message-single-line-auto-margin\")\n  }) : null;\n  return {\n    content: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigProvider, {\n      iconPrefixCls\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: iconNode ? \"\".concat(prefixCls, \"-with-icon\") : \"\",\n      role: \"alert\"\n    }, iconNode, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-message\")\n    }, autoMarginTag, message2), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-description\")\n    }, description), btn ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-btn\")\n    }, btn) : null)),\n    duration,\n    closable: true,\n    closeIcon: closeIconToRender,\n    onClose: onClose2,\n    onClick,\n    key: key2,\n    style: style2 || {},\n    className: classNames(className, _defineProperty$1({}, \"\".concat(prefixCls, \"-\").concat(type4), !!type4))\n  };\n}\nfunction notice$1(args) {\n  getNotificationInstance(args, function(_ref) {\n    var prefixCls = _ref.prefixCls, iconPrefixCls = _ref.iconPrefixCls, instance = _ref.instance;\n    instance.notice(getRCNoticeProps$1(args, prefixCls, iconPrefixCls));\n  });\n}\nvar api$1 = {\n  open: notice$1,\n  close: function close(key2) {\n    Object.keys(notificationInstance).forEach(function(cacheKey) {\n      return Promise.resolve(notificationInstance[cacheKey]).then(function(instance) {\n        instance.removeNotice(key2);\n      });\n    });\n  },\n  config: setNotificationConfig,\n  destroy: function destroy() {\n    Object.keys(notificationInstance).forEach(function(cacheKey) {\n      Promise.resolve(notificationInstance[cacheKey]).then(function(instance) {\n        instance.destroy();\n      });\n      delete notificationInstance[cacheKey];\n    });\n  }\n};\n[\"success\", \"info\", \"warning\", \"error\"].forEach(function(type4) {\n  api$1[type4] = function(args) {\n    return api$1.open(_extends$1(_extends$1({}, args), {\n      type: type4\n    }));\n  };\n});\napi$1.warn = api$1.warning;\napi$1.useNotification = createUseNotification(getNotificationInstance, getRCNoticeProps$1);\nvar notification = api$1;\nvar dynamicStyleMark = \"-ant-\".concat(Date.now(), \"-\").concat(Math.random());\nfunction registerTheme(globalPrefixCls2, theme) {\n  var variables = {};\n  var formatColor = function formatColor2(color, updater) {\n    var clone2 = color.clone();\n    clone2 = (updater === null || updater === void 0 ? void 0 : updater(clone2)) || clone2;\n    return clone2.toRgbString();\n  };\n  var fillColor = function fillColor2(colorVal, type4) {\n    var baseColor = new TinyColor(colorVal);\n    var colorPalettes = generate$1(baseColor.toRgbString());\n    variables[\"\".concat(type4, \"-color\")] = formatColor(baseColor);\n    variables[\"\".concat(type4, \"-color-disabled\")] = colorPalettes[1];\n    variables[\"\".concat(type4, \"-color-hover\")] = colorPalettes[4];\n    variables[\"\".concat(type4, \"-color-active\")] = colorPalettes[7];\n    variables[\"\".concat(type4, \"-color-outline\")] = baseColor.clone().setAlpha(0.2).toRgbString();\n    variables[\"\".concat(type4, \"-color-deprecated-bg\")] = colorPalettes[1];\n    variables[\"\".concat(type4, \"-color-deprecated-border\")] = colorPalettes[3];\n  };\n  if (theme.primaryColor) {\n    fillColor(theme.primaryColor, \"primary\");\n    var primaryColor = new TinyColor(theme.primaryColor);\n    var primaryColors = generate$1(primaryColor.toRgbString());\n    primaryColors.forEach(function(color, index2) {\n      variables[\"primary-\".concat(index2 + 1)] = color;\n    });\n    variables[\"primary-color-deprecated-l-35\"] = formatColor(primaryColor, function(c2) {\n      return c2.lighten(35);\n    });\n    variables[\"primary-color-deprecated-l-20\"] = formatColor(primaryColor, function(c2) {\n      return c2.lighten(20);\n    });\n    variables[\"primary-color-deprecated-t-20\"] = formatColor(primaryColor, function(c2) {\n      return c2.tint(20);\n    });\n    variables[\"primary-color-deprecated-t-50\"] = formatColor(primaryColor, function(c2) {\n      return c2.tint(50);\n    });\n    variables[\"primary-color-deprecated-f-12\"] = formatColor(primaryColor, function(c2) {\n      return c2.setAlpha(c2.getAlpha() * 0.12);\n    });\n    var primaryActiveColor = new TinyColor(primaryColors[0]);\n    variables[\"primary-color-active-deprecated-f-30\"] = formatColor(primaryActiveColor, function(c2) {\n      return c2.setAlpha(c2.getAlpha() * 0.3);\n    });\n    variables[\"primary-color-active-deprecated-d-02\"] = formatColor(primaryActiveColor, function(c2) {\n      return c2.darken(2);\n    });\n  }\n  if (theme.successColor) {\n    fillColor(theme.successColor, \"success\");\n  }\n  if (theme.warningColor) {\n    fillColor(theme.warningColor, \"warning\");\n  }\n  if (theme.errorColor) {\n    fillColor(theme.errorColor, \"error\");\n  }\n  if (theme.infoColor) {\n    fillColor(theme.infoColor, \"info\");\n  }\n  var cssList = Object.keys(variables).map(function(key2) {\n    return \"--\".concat(globalPrefixCls2, \"-\").concat(key2, \": \").concat(variables[key2], \";\");\n  });\n  if (canUseDom()) {\n    updateCSS(\"\\n  :root {\\n    \".concat(cssList.join(\"\\n\"), \"\\n  }\\n  \"), \"\".concat(dynamicStyleMark, \"-dynamic-theme\"));\n  } else {\n    devWarning(false, \"ConfigProvider\", \"SSR do not support dynamic theme with css variables.\");\n  }\n}\nvar PASSED_PROPS = [\"getTargetContainer\", \"getPopupContainer\", \"renderEmpty\", \"pageHeader\", \"input\", \"form\"];\nvar defaultPrefixCls = \"ant\";\nvar defaultIconPrefixCls = \"anticon\";\nvar globalPrefixCls;\nvar globalIconPrefixCls;\nfunction getGlobalPrefixCls() {\n  return globalPrefixCls || defaultPrefixCls;\n}\nfunction getGlobalIconPrefixCls() {\n  return globalIconPrefixCls || defaultIconPrefixCls;\n}\nvar setGlobalConfig = function setGlobalConfig2(_ref) {\n  var prefixCls = _ref.prefixCls, iconPrefixCls = _ref.iconPrefixCls, theme = _ref.theme;\n  if (prefixCls !== void 0) {\n    globalPrefixCls = prefixCls;\n  }\n  if (iconPrefixCls !== void 0) {\n    globalIconPrefixCls = iconPrefixCls;\n  }\n  if (theme) {\n    registerTheme(getGlobalPrefixCls(), theme);\n  }\n};\nvar globalConfig = function globalConfig2() {\n  return {\n    getPrefixCls: function getPrefixCls(suffixCls, customizePrefixCls) {\n      if (customizePrefixCls)\n        return customizePrefixCls;\n      return suffixCls ? \"\".concat(getGlobalPrefixCls(), \"-\").concat(suffixCls) : getGlobalPrefixCls();\n    },\n    getIconPrefixCls: getGlobalIconPrefixCls,\n    getRootPrefixCls: function getRootPrefixCls(rootPrefixCls, customizePrefixCls) {\n      if (rootPrefixCls) {\n        return rootPrefixCls;\n      }\n      if (globalPrefixCls) {\n        return globalPrefixCls;\n      }\n      if (customizePrefixCls && customizePrefixCls.includes(\"-\")) {\n        return customizePrefixCls.replace(/^(.*)-[^-]*$/, \"$1\");\n      }\n      return getGlobalPrefixCls();\n    }\n  };\n};\nvar ProviderChildren = function ProviderChildren2(props) {\n  var _a, _b;\n  var children = props.children, csp = props.csp, autoInsertSpaceInButton = props.autoInsertSpaceInButton, form = props.form, locale2 = props.locale, componentSize = props.componentSize, direction = props.direction, space = props.space, virtual = props.virtual, dropdownMatchSelectWidth = props.dropdownMatchSelectWidth, legacyLocale = props.legacyLocale, parentContext = props.parentContext, iconPrefixCls = props.iconPrefixCls;\n  var getPrefixCls = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(suffixCls, customizePrefixCls) {\n    var prefixCls = props.prefixCls;\n    if (customizePrefixCls)\n      return customizePrefixCls;\n    var mergedPrefixCls = prefixCls || parentContext.getPrefixCls(\"\");\n    return suffixCls ? \"\".concat(mergedPrefixCls, \"-\").concat(suffixCls) : mergedPrefixCls;\n  }, [parentContext.getPrefixCls, props.prefixCls]);\n  var config = _extends$1(_extends$1({}, parentContext), {\n    csp,\n    autoInsertSpaceInButton,\n    locale: locale2 || legacyLocale,\n    direction,\n    space,\n    virtual,\n    dropdownMatchSelectWidth,\n    getPrefixCls\n  });\n  PASSED_PROPS.forEach(function(propName) {\n    var propValue = props[propName];\n    if (propValue) {\n      config[propName] = propValue;\n    }\n  });\n  var memoedConfig = useMemo(function() {\n    return config;\n  }, config, function(prevConfig, currentConfig) {\n    var prevKeys = Object.keys(prevConfig);\n    var currentKeys = Object.keys(currentConfig);\n    return prevKeys.length !== currentKeys.length || prevKeys.some(function(key2) {\n      return prevConfig[key2] !== currentConfig[key2];\n    });\n  });\n  var memoIconContextValue = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    return {\n      prefixCls: iconPrefixCls,\n      csp\n    };\n  }, [iconPrefixCls]);\n  var childNode = children;\n  var validateMessages = {};\n  if (locale2) {\n    validateMessages = ((_a = locale2.Form) === null || _a === void 0 ? void 0 : _a.defaultValidateMessages) || ((_b = defaultLocale.Form) === null || _b === void 0 ? void 0 : _b.defaultValidateMessages) || {};\n  }\n  if (form && form.validateMessages) {\n    validateMessages = _extends$1(_extends$1({}, validateMessages), form.validateMessages);\n  }\n  if (Object.keys(validateMessages).length > 0) {\n    childNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(FormProvider, {\n      validateMessages\n    }, children);\n  }\n  if (locale2) {\n    childNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocaleProvider, {\n      locale: locale2,\n      _ANT_MARK__: ANT_MARK\n    }, childNode);\n  }\n  if (iconPrefixCls) {\n    childNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconContext$1.Provider, {\n      value: memoIconContextValue\n    }, childNode);\n  }\n  if (componentSize) {\n    childNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SizeContextProvider, {\n      size: componentSize\n    }, childNode);\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigContext.Provider, {\n    value: memoedConfig\n  }, childNode);\n};\nvar ConfigProvider = function ConfigProvider2(props) {\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    if (props.direction) {\n      message.config({\n        rtl: props.direction === \"rtl\"\n      });\n      notification.config({\n        rtl: props.direction === \"rtl\"\n      });\n    }\n  }, [props.direction]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LocaleReceiver, null, function(_, __, legacyLocale) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, null, function(context) {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ProviderChildren, _extends$1({\n        parentContext: context,\n        legacyLocale\n      }, props));\n    });\n  });\n};\nConfigProvider.ConfigContext = ConfigContext;\nConfigProvider.SizeContext = SizeContext$1;\nConfigProvider.config = setGlobalConfig;\nfunction createUseMessage(getRcNotificationInstance, getRCNoticeProps2) {\n  var useMessage = function useMessage2() {\n    var getPrefixCls;\n    var getPopupContainer;\n    var innerInstance = null;\n    var proxy = {\n      add: function add(noticeProps, holderCallback) {\n        innerInstance === null || innerInstance === void 0 ? void 0 : innerInstance.component.add(noticeProps, holderCallback);\n      }\n    };\n    var _useRCNotification = useNotification(proxy), _useRCNotification2 = _slicedToArray(_useRCNotification, 2), hookNotify = _useRCNotification2[0], holder = _useRCNotification2[1];\n    function notify(args) {\n      var customizePrefixCls = args.prefixCls;\n      var mergedPrefixCls = getPrefixCls(\"message\", customizePrefixCls);\n      var rootPrefixCls = getPrefixCls();\n      var target = args.key || getKeyThenIncreaseKey();\n      var closePromise = new Promise(function(resolve) {\n        var callback = function callback2() {\n          if (typeof args.onClose === \"function\") {\n            args.onClose();\n          }\n          return resolve(true);\n        };\n        getRcNotificationInstance(_extends$1(_extends$1({}, args), {\n          prefixCls: mergedPrefixCls,\n          rootPrefixCls,\n          getPopupContainer\n        }), function(_ref) {\n          var prefixCls = _ref.prefixCls, instance = _ref.instance;\n          innerInstance = instance;\n          hookNotify(getRCNoticeProps2(_extends$1(_extends$1({}, args), {\n            key: target,\n            onClose: callback\n          }), prefixCls));\n        });\n      });\n      var result = function result2() {\n        if (innerInstance) {\n          innerInstance.removeNotice(target);\n        }\n      };\n      result.then = function(filled, rejected) {\n        return closePromise.then(filled, rejected);\n      };\n      result.promise = closePromise;\n      return result;\n    }\n    var hookApiRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({});\n    hookApiRef.current.open = notify;\n    [\"success\", \"info\", \"warning\", \"error\", \"loading\"].forEach(function(type4) {\n      return attachTypeApi(hookApiRef.current, type4);\n    });\n    return [hookApiRef.current, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, {\n      key: \"holder\"\n    }, function(context) {\n      getPrefixCls = context.getPrefixCls;\n      getPopupContainer = context.getPopupContainer;\n      return holder;\n    })];\n  };\n  return useMessage;\n}\nvar messageInstance;\nvar defaultDuration = 3;\nvar defaultTop;\nvar key = 1;\nvar localPrefixCls = \"\";\nvar transitionName = \"move-up\";\nvar hasTransitionName = false;\nvar getContainer;\nvar maxCount;\nvar rtl = false;\nfunction getKeyThenIncreaseKey() {\n  return key++;\n}\nfunction setMessageConfig(options) {\n  if (options.top !== void 0) {\n    defaultTop = options.top;\n    messageInstance = null;\n  }\n  if (options.duration !== void 0) {\n    defaultDuration = options.duration;\n  }\n  if (options.prefixCls !== void 0) {\n    localPrefixCls = options.prefixCls;\n  }\n  if (options.getContainer !== void 0) {\n    getContainer = options.getContainer;\n    messageInstance = null;\n  }\n  if (options.transitionName !== void 0) {\n    transitionName = options.transitionName;\n    messageInstance = null;\n    hasTransitionName = true;\n  }\n  if (options.maxCount !== void 0) {\n    maxCount = options.maxCount;\n    messageInstance = null;\n  }\n  if (options.rtl !== void 0) {\n    rtl = options.rtl;\n  }\n}\nfunction getRCNotificationInstance(args, callback) {\n  var customizePrefixCls = args.prefixCls, getContextPopupContainer = args.getPopupContainer;\n  var _globalConfig = globalConfig(), getPrefixCls = _globalConfig.getPrefixCls, getRootPrefixCls = _globalConfig.getRootPrefixCls, getIconPrefixCls = _globalConfig.getIconPrefixCls;\n  var prefixCls = getPrefixCls(\"message\", customizePrefixCls || localPrefixCls);\n  var rootPrefixCls = getRootPrefixCls(args.rootPrefixCls, prefixCls);\n  var iconPrefixCls = getIconPrefixCls();\n  if (messageInstance) {\n    callback({\n      prefixCls,\n      rootPrefixCls,\n      iconPrefixCls,\n      instance: messageInstance\n    });\n    return;\n  }\n  var instanceConfig = {\n    prefixCls,\n    transitionName: hasTransitionName ? transitionName : \"\".concat(rootPrefixCls, \"-\").concat(transitionName),\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer || getContextPopupContainer,\n    maxCount\n  };\n  Notification.newInstance(instanceConfig, function(instance) {\n    if (messageInstance) {\n      callback({\n        prefixCls,\n        rootPrefixCls,\n        iconPrefixCls,\n        instance: messageInstance\n      });\n      return;\n    }\n    messageInstance = instance;\n    callback({\n      prefixCls,\n      rootPrefixCls,\n      iconPrefixCls,\n      instance\n    });\n  });\n}\nvar typeToIcon = {\n  info: InfoCircleFilled$1,\n  success: CheckCircleFilled$1,\n  error: CloseCircleFilled$1,\n  warning: ExclamationCircleFilled$1,\n  loading: LoadingOutlined$1\n};\nfunction getRCNoticeProps(args, prefixCls, iconPrefixCls) {\n  var _classNames;\n  var duration = args.duration !== void 0 ? args.duration : defaultDuration;\n  var IconComponent = typeToIcon[args.type];\n  var messageClass = classNames(\"\".concat(prefixCls, \"-custom-content\"), (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(args.type), args.type), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), rtl === true), _classNames));\n  return {\n    key: args.key,\n    duration,\n    style: args.style || {},\n    className: args.className,\n    content: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigProvider, {\n      iconPrefixCls\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: messageClass\n    }, args.icon || IconComponent && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(IconComponent, null), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, args.content))),\n    onClose: args.onClose,\n    onClick: args.onClick\n  };\n}\nfunction notice(args) {\n  var target = args.key || getKeyThenIncreaseKey();\n  var closePromise = new Promise(function(resolve) {\n    var callback = function callback2() {\n      if (typeof args.onClose === \"function\") {\n        args.onClose();\n      }\n      return resolve(true);\n    };\n    getRCNotificationInstance(args, function(_ref) {\n      var prefixCls = _ref.prefixCls, iconPrefixCls = _ref.iconPrefixCls, instance = _ref.instance;\n      instance.notice(getRCNoticeProps(_extends$1(_extends$1({}, args), {\n        key: target,\n        onClose: callback\n      }), prefixCls, iconPrefixCls));\n    });\n  });\n  var result = function result2() {\n    if (messageInstance) {\n      messageInstance.removeNotice(target);\n    }\n  };\n  result.then = function(filled, rejected) {\n    return closePromise.then(filled, rejected);\n  };\n  result.promise = closePromise;\n  return result;\n}\nfunction isArgsProps(content) {\n  return Object.prototype.toString.call(content) === \"[object Object]\" && !!content.content;\n}\nvar api = {\n  open: notice,\n  config: setMessageConfig,\n  destroy: function destroy2(messageKey) {\n    if (messageInstance) {\n      if (messageKey) {\n        var _messageInstance = messageInstance, removeNotice = _messageInstance.removeNotice;\n        removeNotice(messageKey);\n      } else {\n        var _messageInstance2 = messageInstance, destroy3 = _messageInstance2.destroy;\n        destroy3();\n        messageInstance = null;\n      }\n    }\n  }\n};\nfunction attachTypeApi(originalApi, type4) {\n  originalApi[type4] = function(content, duration, onClose2) {\n    if (isArgsProps(content)) {\n      return originalApi.open(_extends$1(_extends$1({}, content), {\n        type: type4\n      }));\n    }\n    if (typeof duration === \"function\") {\n      onClose2 = duration;\n      duration = void 0;\n    }\n    return originalApi.open({\n      content,\n      duration,\n      type: type4,\n      onClose: onClose2\n    });\n  };\n}\n[\"success\", \"info\", \"warning\", \"error\", \"loading\"].forEach(function(type4) {\n  return attachTypeApi(api, type4);\n});\napi.warn = api.warning;\napi.useMessage = createUseMessage(getRCNotificationInstance, getRCNoticeProps);\nvar message = api;\nfunction omit(obj, fields) {\n  var clone2 = _objectSpread2$1({}, obj);\n  if (Array.isArray(fields)) {\n    fields.forEach(function(key2) {\n      delete clone2[key2];\n    });\n  }\n  return clone2;\n}\nvar __rest$7 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar CheckableTag = function CheckableTag2(_a) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls, className = _a.className, checked = _a.checked, onChange = _a.onChange, onClick = _a.onClick, restProps = __rest$7(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls;\n  var handleClick = function handleClick2(e2) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e2);\n  };\n  var prefixCls = getPrefixCls(\"tag\", customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", _extends$1({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\nvar CheckableTag$1 = CheckableTag;\nvar tuple = function tuple2() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args;\n};\nvar PresetStatusColorTypes = tuple(\"success\", \"processing\", \"error\", \"default\", \"warning\");\nvar PresetColorTypes = tuple(\"pink\", \"red\", \"yellow\", \"orange\", \"cyan\", \"green\", \"blue\", \"purple\", \"geekblue\", \"magenta\", \"volcano\", \"gold\", \"lime\");\nvar id = 0;\nvar ids = {};\nfunction wrapperRaf(callback) {\n  var delayFrames = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;\n  var myId = id++;\n  var restFrames = delayFrames;\n  function internalCallback() {\n    restFrames -= 1;\n    if (restFrames <= 0) {\n      callback();\n      delete ids[myId];\n    } else {\n      ids[myId] = wrapperRaf$1(internalCallback);\n    }\n  }\n  ids[myId] = wrapperRaf$1(internalCallback);\n  return myId;\n}\nwrapperRaf.cancel = function cancel(pid) {\n  if (pid === void 0)\n    return;\n  wrapperRaf$1.cancel(ids[pid]);\n  delete ids[pid];\n};\nwrapperRaf.ids = ids;\nvar isValidElement = react__WEBPACK_IMPORTED_MODULE_0__.isValidElement;\nfunction replaceElement(element, replacement, props) {\n  if (!isValidElement(element))\n    return replacement;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(element, typeof props === \"function\" ? props(element.props || {}) : props);\n}\nfunction cloneElement(element, props) {\n  return replaceElement(element, element, props);\n}\nvar styleForPseudo;\nfunction isHidden(element) {\n  return !element || element.offsetParent === null || element.hidden;\n}\nfunction isNotGrey(color) {\n  var match = (color || \"\").match(/rgba?\\((\\d*), (\\d*), (\\d*)(, [\\d.]*)?\\)/);\n  if (match && match[1] && match[2] && match[3]) {\n    return !(match[1] === match[2] && match[2] === match[3]);\n  }\n  return true;\n}\nvar Wave = /* @__PURE__ */ function(_React$Component) {\n  _inherits(Wave2, _React$Component);\n  var _super = _createSuper(Wave2);\n  function Wave2() {\n    var _this;\n    _classCallCheck(this, Wave2);\n    _this = _super.apply(this, arguments);\n    _this.containerRef = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n    _this.animationStart = false;\n    _this.destroyed = false;\n    _this.onClick = function(node, waveColor) {\n      var _a, _b;\n      var _this$props = _this.props, insertExtraNode = _this$props.insertExtraNode, disabled = _this$props.disabled;\n      if (disabled || !node || isHidden(node) || node.className.indexOf(\"-leave\") >= 0) {\n        return;\n      }\n      _this.extraNode = document.createElement(\"div\");\n      var _assertThisInitialize = _assertThisInitialized(_this), extraNode = _assertThisInitialize.extraNode;\n      var getPrefixCls = _this.context.getPrefixCls;\n      extraNode.className = \"\".concat(getPrefixCls(\"\"), \"-click-animating-node\");\n      var attributeName = _this.getAttributeName();\n      node.setAttribute(attributeName, \"true\");\n      if (waveColor && waveColor !== \"#ffffff\" && waveColor !== \"rgb(255, 255, 255)\" && isNotGrey(waveColor) && !/rgba\\((?:\\d*, ){3}0\\)/.test(waveColor) && waveColor !== \"transparent\") {\n        extraNode.style.borderColor = waveColor;\n        var nodeRoot = ((_a = node.getRootNode) === null || _a === void 0 ? void 0 : _a.call(node)) || node.ownerDocument;\n        var nodeBody = nodeRoot instanceof Document ? nodeRoot.body : (_b = nodeRoot.firstChild) !== null && _b !== void 0 ? _b : nodeRoot;\n        styleForPseudo = updateCSS(\"\\n      [\".concat(getPrefixCls(\"\"), \"-click-animating-without-extra-node='true']::after, .\").concat(getPrefixCls(\"\"), \"-click-animating-node {\\n        --antd-wave-shadow-color: \").concat(waveColor, \";\\n      }\"), \"antd-wave\", {\n          csp: _this.csp,\n          attachTo: nodeBody\n        });\n      }\n      if (insertExtraNode) {\n        node.appendChild(extraNode);\n      }\n      [\"transition\", \"animation\"].forEach(function(name) {\n        node.addEventListener(\"\".concat(name, \"start\"), _this.onTransitionStart);\n        node.addEventListener(\"\".concat(name, \"end\"), _this.onTransitionEnd);\n      });\n    };\n    _this.onTransitionStart = function(e2) {\n      if (_this.destroyed) {\n        return;\n      }\n      var node = _this.containerRef.current;\n      if (!e2 || e2.target !== node || _this.animationStart) {\n        return;\n      }\n      _this.resetEffect(node);\n    };\n    _this.onTransitionEnd = function(e2) {\n      if (!e2 || e2.animationName !== \"fadeEffect\") {\n        return;\n      }\n      _this.resetEffect(e2.target);\n    };\n    _this.bindAnimationEvent = function(node) {\n      if (!node || !node.getAttribute || node.getAttribute(\"disabled\") || node.className.indexOf(\"disabled\") >= 0) {\n        return;\n      }\n      var onClick = function onClick2(e2) {\n        if (e2.target.tagName === \"INPUT\" || isHidden(e2.target)) {\n          return;\n        }\n        _this.resetEffect(node);\n        var waveColor = getComputedStyle(node).getPropertyValue(\"border-top-color\") || getComputedStyle(node).getPropertyValue(\"border-color\") || getComputedStyle(node).getPropertyValue(\"background-color\");\n        _this.clickWaveTimeoutId = window.setTimeout(function() {\n          return _this.onClick(node, waveColor);\n        }, 0);\n        wrapperRaf.cancel(_this.animationStartId);\n        _this.animationStart = true;\n        _this.animationStartId = wrapperRaf(function() {\n          _this.animationStart = false;\n        }, 10);\n      };\n      node.addEventListener(\"click\", onClick, true);\n      return {\n        cancel: function cancel2() {\n          node.removeEventListener(\"click\", onClick, true);\n        }\n      };\n    };\n    _this.renderWave = function(_ref) {\n      var csp = _ref.csp;\n      var children = _this.props.children;\n      _this.csp = csp;\n      if (!/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(children))\n        return children;\n      var ref = _this.containerRef;\n      if (supportRef(children)) {\n        ref = composeRef(children.ref, _this.containerRef);\n      }\n      return cloneElement(children, {\n        ref\n      });\n    };\n    return _this;\n  }\n  _createClass(Wave2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var node = this.containerRef.current;\n      if (!node || node.nodeType !== 1) {\n        return;\n      }\n      this.instance = this.bindAnimationEvent(node);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.instance) {\n        this.instance.cancel();\n      }\n      if (this.clickWaveTimeoutId) {\n        clearTimeout(this.clickWaveTimeoutId);\n      }\n      this.destroyed = true;\n    }\n  }, {\n    key: \"getAttributeName\",\n    value: function getAttributeName() {\n      var getPrefixCls = this.context.getPrefixCls;\n      var insertExtraNode = this.props.insertExtraNode;\n      return insertExtraNode ? \"\".concat(getPrefixCls(\"\"), \"-click-animating\") : \"\".concat(getPrefixCls(\"\"), \"-click-animating-without-extra-node\");\n    }\n  }, {\n    key: \"resetEffect\",\n    value: function resetEffect(node) {\n      var _this2 = this;\n      if (!node || node === this.extraNode || !(node instanceof Element)) {\n        return;\n      }\n      var insertExtraNode = this.props.insertExtraNode;\n      var attributeName = this.getAttributeName();\n      node.setAttribute(attributeName, \"false\");\n      if (styleForPseudo) {\n        styleForPseudo.innerHTML = \"\";\n      }\n      if (insertExtraNode && this.extraNode && node.contains(this.extraNode)) {\n        node.removeChild(this.extraNode);\n      }\n      [\"transition\", \"animation\"].forEach(function(name) {\n        node.removeEventListener(\"\".concat(name, \"start\"), _this2.onTransitionStart);\n        node.removeEventListener(\"\".concat(name, \"end\"), _this2.onTransitionEnd);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, null, this.renderWave);\n    }\n  }]);\n  return Wave2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nWave.contextType = ConfigContext;\nvar __rest$6 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar PresetColorRegex$1 = new RegExp(\"^(\".concat(PresetColorTypes.join(\"|\"), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join(\"|\"), \")$\"));\nvar InternalTag = function InternalTag2(_a, ref) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls, className = _a.className, style2 = _a.style, children = _a.children, icon = _a.icon, color = _a.color, onClose2 = _a.onClose, closeIcon = _a.closeIcon, _a$closable = _a.closable, closable = _a$closable === void 0 ? false : _a$closable, props = __rest$6(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls, direction = _React$useContext.direction;\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(true), _React$useState2 = _slicedToArray(_React$useState, 2), visible = _React$useState2[0], setVisible = _React$useState2[1];\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    if (\"visible\" in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  var isPresetColor = function isPresetColor2() {\n    if (!color) {\n      return false;\n    }\n    return PresetColorRegex$1.test(color) || PresetStatusColorRegex.test(color);\n  };\n  var tagStyle = _extends$1({\n    backgroundColor: color && !isPresetColor() ? color : void 0\n  }, style2);\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls(\"tag\", customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _classNames), className);\n  var handleCloseClick = function handleCloseClick2(e2) {\n    e2.stopPropagation();\n    onClose2 === null || onClose2 === void 0 ? void 0 : onClose2(e2);\n    if (e2.defaultPrevented) {\n      return;\n    }\n    if (!(\"visible\" in props)) {\n      setVisible(false);\n    }\n  };\n  var renderCloseIcon = function renderCloseIcon2() {\n    if (closable) {\n      return closeIcon ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CloseOutlined$1, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n    return null;\n  };\n  var isNeedWave = \"onClick\" in props || children && children.type === \"a\";\n  var tagProps = omit(props, [\"visible\"]);\n  var iconNode = icon || null;\n  var kids = iconNode ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, iconNode, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, children)) : children;\n  var tagNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", _extends$1({}, tagProps, {\n    ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Wave, null, tagNode) : tagNode;\n};\nvar Tag = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(InternalTag);\nTag.displayName = \"Tag\";\nTag.CheckableTag = CheckableTag$1;\nvar Tag$1 = Tag;\nfunction contains(root2, n2) {\n  if (!root2) {\n    return false;\n  }\n  return root2.contains(n2);\n}\nfunction addEventListenerWrap(target, eventType, cb, option) {\n  var callback = (react_dom__WEBPACK_IMPORTED_MODULE_1___default().unstable_batchedUpdates) ? function run(e2) {\n    react_dom__WEBPACK_IMPORTED_MODULE_1___default().unstable_batchedUpdates(cb, e2);\n  } : cb;\n  if (target.addEventListener) {\n    target.addEventListener(eventType, callback, option);\n  }\n  return {\n    remove: function remove() {\n      if (target.removeEventListener) {\n        target.removeEventListener(eventType, callback);\n      }\n    }\n  };\n}\nvar Portal = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(props, ref) {\n  var didUpdate = props.didUpdate, getContainer2 = props.getContainer, children = props.children;\n  var containerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function() {\n    return {};\n  });\n  var initRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  if (!initRef.current && canUseDom()) {\n    containerRef.current = getContainer2();\n    initRef.current = true;\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    didUpdate === null || didUpdate === void 0 ? void 0 : didUpdate(props);\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return function() {\n      var _containerRef$current, _containerRef$current2;\n      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 ? void 0 : (_containerRef$current2 = _containerRef$current.parentNode) === null || _containerRef$current2 === void 0 ? void 0 : _containerRef$current2.removeChild(containerRef.current);\n    };\n  }, []);\n  return containerRef.current ? /* @__PURE__ */ react_dom__WEBPACK_IMPORTED_MODULE_1___default().createPortal(children, containerRef.current) : null;\n});\nfunction isPointsEq(a1, a2, isAlignPoint) {\n  if (isAlignPoint) {\n    return a1[0] === a2[0];\n  }\n  return a1[0] === a2[0] && a1[1] === a2[1];\n}\nfunction getAlignFromPlacement(builtinPlacements, placementStr, align) {\n  var baseAlign = builtinPlacements[placementStr] || {};\n  return _objectSpread2$1(_objectSpread2$1({}, baseAlign), align);\n}\nfunction getAlignPopupClassName(builtinPlacements, prefixCls, align, isAlignPoint) {\n  var points = align.points;\n  var placements2 = Object.keys(builtinPlacements);\n  for (var i = 0; i < placements2.length; i += 1) {\n    var placement = placements2[i];\n    if (isPointsEq(builtinPlacements[placement].points, points, isAlignPoint)) {\n      return \"\".concat(prefixCls, \"-placement-\").concat(placement);\n    }\n  }\n  return \"\";\n}\nvar isMobile = function() {\n  if (typeof navigator === \"undefined\" || typeof window === \"undefined\") {\n    return false;\n  }\n  var agent = navigator.userAgent || navigator.vendor || window.opera;\n  if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(agent) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(agent === null || agent === void 0 ? void 0 : agent.substr(0, 4))) {\n    return true;\n  }\n  return false;\n};\nfunction getMotion(_ref) {\n  var prefixCls = _ref.prefixCls, motion = _ref.motion, animation = _ref.animation, transitionName2 = _ref.transitionName;\n  if (motion) {\n    return motion;\n  }\n  if (animation) {\n    return {\n      motionName: \"\".concat(prefixCls, \"-\").concat(animation)\n    };\n  }\n  if (transitionName2) {\n    return {\n      motionName: transitionName2\n    };\n  }\n  return null;\n}\nfunction Mask(props) {\n  var prefixCls = props.prefixCls, visible = props.visible, zIndex = props.zIndex, mask = props.mask, maskMotion = props.maskMotion, maskAnimation = props.maskAnimation, maskTransitionName = props.maskTransitionName;\n  if (!mask) {\n    return null;\n  }\n  var motion = {};\n  if (maskMotion || maskTransitionName || maskAnimation) {\n    motion = _objectSpread2$1({\n      motionAppear: true\n    }, getMotion({\n      motion: maskMotion,\n      prefixCls,\n      transitionName: maskTransitionName,\n      animation: maskAnimation\n    }));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CSSMotion, _extends$1({}, motion, {\n    visible,\n    removeOnLeave: true\n  }), function(_ref) {\n    var className = _ref.className;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      style: {\n        zIndex\n      },\n      className: classNames(\"\".concat(prefixCls, \"-mask\"), className)\n    });\n  });\n}\nvar isVisible = function(element) {\n  if (!element) {\n    return false;\n  }\n  if (element.offsetParent) {\n    return true;\n  }\n  if (element.getBBox) {\n    var box = element.getBBox();\n    if (box.width || box.height) {\n      return true;\n    }\n  }\n  if (element.getBoundingClientRect) {\n    var _box = element.getBoundingClientRect();\n    if (_box.width || _box.height) {\n      return true;\n    }\n  }\n  return false;\n};\nfunction ownKeys(object4, enumerableOnly) {\n  var keys2 = Object.keys(object4);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object4);\n    if (enumerableOnly) {\n      symbols = symbols.filter(function(sym) {\n        return Object.getOwnPropertyDescriptor(object4, sym).enumerable;\n      });\n    }\n    keys2.push.apply(keys2, symbols);\n  }\n  return keys2;\n}\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function(key2) {\n        _defineProperty(target, key2, source[key2]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function(key2) {\n        Object.defineProperty(target, key2, Object.getOwnPropertyDescriptor(source, key2));\n      });\n    }\n  }\n  return target;\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function(obj2) {\n      return typeof obj2;\n    };\n  } else {\n    _typeof = function(obj2) {\n      return obj2 && typeof Symbol === \"function\" && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? \"symbol\" : typeof obj2;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _defineProperty(obj, key2, value) {\n  if (key2 in obj) {\n    Object.defineProperty(obj, key2, {\n      value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key2] = value;\n  }\n  return obj;\n}\nvar vendorPrefix;\nvar jsCssMap = {\n  Webkit: \"-webkit-\",\n  Moz: \"-moz-\",\n  ms: \"-ms-\",\n  O: \"-o-\"\n};\nfunction getVendorPrefix() {\n  if (vendorPrefix !== void 0) {\n    return vendorPrefix;\n  }\n  vendorPrefix = \"\";\n  var style2 = document.createElement(\"p\").style;\n  var testProp = \"Transform\";\n  for (var key2 in jsCssMap) {\n    if (key2 + testProp in style2) {\n      vendorPrefix = key2;\n    }\n  }\n  return vendorPrefix;\n}\nfunction getTransitionName$1() {\n  return getVendorPrefix() ? \"\".concat(getVendorPrefix(), \"TransitionProperty\") : \"transitionProperty\";\n}\nfunction getTransformName() {\n  return getVendorPrefix() ? \"\".concat(getVendorPrefix(), \"Transform\") : \"transform\";\n}\nfunction setTransitionProperty(node, value) {\n  var name = getTransitionName$1();\n  if (name) {\n    node.style[name] = value;\n    if (name !== \"transitionProperty\") {\n      node.style.transitionProperty = value;\n    }\n  }\n}\nfunction setTransform(node, value) {\n  var name = getTransformName();\n  if (name) {\n    node.style[name] = value;\n    if (name !== \"transform\") {\n      node.style.transform = value;\n    }\n  }\n}\nfunction getTransitionProperty(node) {\n  return node.style.transitionProperty || node.style[getTransitionName$1()];\n}\nfunction getTransformXY(node) {\n  var style2 = window.getComputedStyle(node, null);\n  var transform = style2.getPropertyValue(\"transform\") || style2.getPropertyValue(getTransformName());\n  if (transform && transform !== \"none\") {\n    var matrix = transform.replace(/[^0-9\\-.,]/g, \"\").split(\",\");\n    return {\n      x: parseFloat(matrix[12] || matrix[4], 0),\n      y: parseFloat(matrix[13] || matrix[5], 0)\n    };\n  }\n  return {\n    x: 0,\n    y: 0\n  };\n}\nvar matrix2d = /matrix\\((.*)\\)/;\nvar matrix3d = /matrix3d\\((.*)\\)/;\nfunction setTransformXY(node, xy) {\n  var style2 = window.getComputedStyle(node, null);\n  var transform = style2.getPropertyValue(\"transform\") || style2.getPropertyValue(getTransformName());\n  if (transform && transform !== \"none\") {\n    var arr;\n    var match2d = transform.match(matrix2d);\n    if (match2d) {\n      match2d = match2d[1];\n      arr = match2d.split(\",\").map(function(item) {\n        return parseFloat(item, 10);\n      });\n      arr[4] = xy.x;\n      arr[5] = xy.y;\n      setTransform(node, \"matrix(\".concat(arr.join(\",\"), \")\"));\n    } else {\n      var match3d = transform.match(matrix3d)[1];\n      arr = match3d.split(\",\").map(function(item) {\n        return parseFloat(item, 10);\n      });\n      arr[12] = xy.x;\n      arr[13] = xy.y;\n      setTransform(node, \"matrix3d(\".concat(arr.join(\",\"), \")\"));\n    }\n  } else {\n    setTransform(node, \"translateX(\".concat(xy.x, \"px) translateY(\").concat(xy.y, \"px) translateZ(0)\"));\n  }\n}\nvar RE_NUM = /[\\-+]?(?:\\d*\\.|)\\d+(?:[eE][\\-+]?\\d+|)/.source;\nvar getComputedStyleX;\nfunction forceRelayout(elem) {\n  var originalStyle = elem.style.display;\n  elem.style.display = \"none\";\n  elem.offsetHeight;\n  elem.style.display = originalStyle;\n}\nfunction css(el, name, v2) {\n  var value = v2;\n  if (_typeof(name) === \"object\") {\n    for (var i in name) {\n      if (name.hasOwnProperty(i)) {\n        css(el, i, name[i]);\n      }\n    }\n    return void 0;\n  }\n  if (typeof value !== \"undefined\") {\n    if (typeof value === \"number\") {\n      value = \"\".concat(value, \"px\");\n    }\n    el.style[name] = value;\n    return void 0;\n  }\n  return getComputedStyleX(el, name);\n}\nfunction getClientPosition(elem) {\n  var box;\n  var x2;\n  var y2;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement;\n  box = elem.getBoundingClientRect();\n  x2 = box.left;\n  y2 = box.top;\n  x2 -= docElem.clientLeft || body.clientLeft || 0;\n  y2 -= docElem.clientTop || body.clientTop || 0;\n  return {\n    left: x2,\n    top: y2\n  };\n}\nfunction getScroll(w2, top) {\n  var ret = w2[\"page\".concat(top ? \"Y\" : \"X\", \"Offset\")];\n  var method4 = \"scroll\".concat(top ? \"Top\" : \"Left\");\n  if (typeof ret !== \"number\") {\n    var d2 = w2.document;\n    ret = d2.documentElement[method4];\n    if (typeof ret !== \"number\") {\n      ret = d2.body[method4];\n    }\n  }\n  return ret;\n}\nfunction getScrollLeft(w2) {\n  return getScroll(w2);\n}\nfunction getScrollTop(w2) {\n  return getScroll(w2, true);\n}\nfunction getOffset(el) {\n  var pos = getClientPosition(el);\n  var doc = el.ownerDocument;\n  var w2 = doc.defaultView || doc.parentWindow;\n  pos.left += getScrollLeft(w2);\n  pos.top += getScrollTop(w2);\n  return pos;\n}\nfunction isWindow(obj) {\n  return obj !== null && obj !== void 0 && obj == obj.window;\n}\nfunction getDocument(node) {\n  if (isWindow(node)) {\n    return node.document;\n  }\n  if (node.nodeType === 9) {\n    return node;\n  }\n  return node.ownerDocument;\n}\nfunction _getComputedStyle(elem, name, cs) {\n  var computedStyle = cs;\n  var val = \"\";\n  var d2 = getDocument(elem);\n  computedStyle = computedStyle || d2.defaultView.getComputedStyle(elem, null);\n  if (computedStyle) {\n    val = computedStyle.getPropertyValue(name) || computedStyle[name];\n  }\n  return val;\n}\nvar _RE_NUM_NO_PX = new RegExp(\"^(\".concat(RE_NUM, \")(?!px)[a-z%]+$\"), \"i\");\nvar RE_POS = /^(top|right|bottom|left)$/;\nvar CURRENT_STYLE = \"currentStyle\";\nvar RUNTIME_STYLE = \"runtimeStyle\";\nvar LEFT = \"left\";\nvar PX = \"px\";\nfunction _getComputedStyleIE(elem, name) {\n  var ret = elem[CURRENT_STYLE] && elem[CURRENT_STYLE][name];\n  if (_RE_NUM_NO_PX.test(ret) && !RE_POS.test(name)) {\n    var style2 = elem.style;\n    var left = style2[LEFT];\n    var rsLeft = elem[RUNTIME_STYLE][LEFT];\n    elem[RUNTIME_STYLE][LEFT] = elem[CURRENT_STYLE][LEFT];\n    style2[LEFT] = name === \"fontSize\" ? \"1em\" : ret || 0;\n    ret = style2.pixelLeft + PX;\n    style2[LEFT] = left;\n    elem[RUNTIME_STYLE][LEFT] = rsLeft;\n  }\n  return ret === \"\" ? \"auto\" : ret;\n}\nif (typeof window !== \"undefined\") {\n  getComputedStyleX = window.getComputedStyle ? _getComputedStyle : _getComputedStyleIE;\n}\nfunction getOffsetDirection(dir, option) {\n  if (dir === \"left\") {\n    return option.useCssRight ? \"right\" : dir;\n  }\n  return option.useCssBottom ? \"bottom\" : dir;\n}\nfunction oppositeOffsetDirection(dir) {\n  if (dir === \"left\") {\n    return \"right\";\n  } else if (dir === \"right\") {\n    return \"left\";\n  } else if (dir === \"top\") {\n    return \"bottom\";\n  } else if (dir === \"bottom\") {\n    return \"top\";\n  }\n}\nfunction setLeftTop(elem, offset2, option) {\n  if (css(elem, \"position\") === \"static\") {\n    elem.style.position = \"relative\";\n  }\n  var presetH = -999;\n  var presetV = -999;\n  var horizontalProperty = getOffsetDirection(\"left\", option);\n  var verticalProperty = getOffsetDirection(\"top\", option);\n  var oppositeHorizontalProperty = oppositeOffsetDirection(horizontalProperty);\n  var oppositeVerticalProperty = oppositeOffsetDirection(verticalProperty);\n  if (horizontalProperty !== \"left\") {\n    presetH = 999;\n  }\n  if (verticalProperty !== \"top\") {\n    presetV = 999;\n  }\n  var originalTransition = \"\";\n  var originalOffset = getOffset(elem);\n  if (\"left\" in offset2 || \"top\" in offset2) {\n    originalTransition = getTransitionProperty(elem) || \"\";\n    setTransitionProperty(elem, \"none\");\n  }\n  if (\"left\" in offset2) {\n    elem.style[oppositeHorizontalProperty] = \"\";\n    elem.style[horizontalProperty] = \"\".concat(presetH, \"px\");\n  }\n  if (\"top\" in offset2) {\n    elem.style[oppositeVerticalProperty] = \"\";\n    elem.style[verticalProperty] = \"\".concat(presetV, \"px\");\n  }\n  forceRelayout(elem);\n  var old = getOffset(elem);\n  var originalStyle = {};\n  for (var key2 in offset2) {\n    if (offset2.hasOwnProperty(key2)) {\n      var dir = getOffsetDirection(key2, option);\n      var preset = key2 === \"left\" ? presetH : presetV;\n      var off = originalOffset[key2] - old[key2];\n      if (dir === key2) {\n        originalStyle[dir] = preset + off;\n      } else {\n        originalStyle[dir] = preset - off;\n      }\n    }\n  }\n  css(elem, originalStyle);\n  forceRelayout(elem);\n  if (\"left\" in offset2 || \"top\" in offset2) {\n    setTransitionProperty(elem, originalTransition);\n  }\n  var ret = {};\n  for (var _key in offset2) {\n    if (offset2.hasOwnProperty(_key)) {\n      var _dir = getOffsetDirection(_key, option);\n      var _off = offset2[_key] - originalOffset[_key];\n      if (_key === _dir) {\n        ret[_dir] = originalStyle[_dir] + _off;\n      } else {\n        ret[_dir] = originalStyle[_dir] - _off;\n      }\n    }\n  }\n  css(elem, ret);\n}\nfunction setTransform$1(elem, offset2) {\n  var originalOffset = getOffset(elem);\n  var originalXY = getTransformXY(elem);\n  var resultXY = {\n    x: originalXY.x,\n    y: originalXY.y\n  };\n  if (\"left\" in offset2) {\n    resultXY.x = originalXY.x + offset2.left - originalOffset.left;\n  }\n  if (\"top\" in offset2) {\n    resultXY.y = originalXY.y + offset2.top - originalOffset.top;\n  }\n  setTransformXY(elem, resultXY);\n}\nfunction setOffset(elem, offset2, option) {\n  if (option.ignoreShake) {\n    var oriOffset = getOffset(elem);\n    var oLeft = oriOffset.left.toFixed(0);\n    var oTop = oriOffset.top.toFixed(0);\n    var tLeft = offset2.left.toFixed(0);\n    var tTop = offset2.top.toFixed(0);\n    if (oLeft === tLeft && oTop === tTop) {\n      return;\n    }\n  }\n  if (option.useCssRight || option.useCssBottom) {\n    setLeftTop(elem, offset2, option);\n  } else if (option.useCssTransform && getTransformName() in document.body.style) {\n    setTransform$1(elem, offset2);\n  } else {\n    setLeftTop(elem, offset2, option);\n  }\n}\nfunction each(arr, fn) {\n  for (var i = 0; i < arr.length; i++) {\n    fn(arr[i]);\n  }\n}\nfunction isBorderBoxFn(elem) {\n  return getComputedStyleX(elem, \"boxSizing\") === \"border-box\";\n}\nvar BOX_MODELS = [\"margin\", \"border\", \"padding\"];\nvar CONTENT_INDEX = -1;\nvar PADDING_INDEX = 2;\nvar BORDER_INDEX = 1;\nvar MARGIN_INDEX = 0;\nfunction swap(elem, options, callback) {\n  var old = {};\n  var style2 = elem.style;\n  var name;\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      old[name] = style2[name];\n      style2[name] = options[name];\n    }\n  }\n  callback.call(elem);\n  for (name in options) {\n    if (options.hasOwnProperty(name)) {\n      style2[name] = old[name];\n    }\n  }\n}\nfunction getPBMWidth(elem, props, which) {\n  var value = 0;\n  var prop;\n  var j;\n  var i;\n  for (j = 0; j < props.length; j++) {\n    prop = props[j];\n    if (prop) {\n      for (i = 0; i < which.length; i++) {\n        var cssProp = void 0;\n        if (prop === \"border\") {\n          cssProp = \"\".concat(prop).concat(which[i], \"Width\");\n        } else {\n          cssProp = prop + which[i];\n        }\n        value += parseFloat(getComputedStyleX(elem, cssProp)) || 0;\n      }\n    }\n  }\n  return value;\n}\nvar domUtils = {\n  getParent: function getParent(element) {\n    var parent = element;\n    do {\n      if (parent.nodeType === 11 && parent.host) {\n        parent = parent.host;\n      } else {\n        parent = parent.parentNode;\n      }\n    } while (parent && parent.nodeType !== 1 && parent.nodeType !== 9);\n    return parent;\n  }\n};\neach([\"Width\", \"Height\"], function(name) {\n  domUtils[\"doc\".concat(name)] = function(refWin) {\n    var d2 = refWin.document;\n    return Math.max(d2.documentElement[\"scroll\".concat(name)], d2.body[\"scroll\".concat(name)], domUtils[\"viewport\".concat(name)](d2));\n  };\n  domUtils[\"viewport\".concat(name)] = function(win) {\n    var prop = \"client\".concat(name);\n    var doc = win.document;\n    var body = doc.body;\n    var documentElement = doc.documentElement;\n    var documentElementProp = documentElement[prop];\n    return doc.compatMode === \"CSS1Compat\" && documentElementProp || body && body[prop] || documentElementProp;\n  };\n});\nfunction getWH(elem, name, ex) {\n  var extra = ex;\n  if (isWindow(elem)) {\n    return name === \"width\" ? domUtils.viewportWidth(elem) : domUtils.viewportHeight(elem);\n  } else if (elem.nodeType === 9) {\n    return name === \"width\" ? domUtils.docWidth(elem) : domUtils.docHeight(elem);\n  }\n  var which = name === \"width\" ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"];\n  var borderBoxValue = name === \"width\" ? elem.getBoundingClientRect().width : elem.getBoundingClientRect().height;\n  var isBorderBox = isBorderBoxFn(elem);\n  var cssBoxValue = 0;\n  if (borderBoxValue === null || borderBoxValue === void 0 || borderBoxValue <= 0) {\n    borderBoxValue = void 0;\n    cssBoxValue = getComputedStyleX(elem, name);\n    if (cssBoxValue === null || cssBoxValue === void 0 || Number(cssBoxValue) < 0) {\n      cssBoxValue = elem.style[name] || 0;\n    }\n    cssBoxValue = parseFloat(cssBoxValue) || 0;\n  }\n  if (extra === void 0) {\n    extra = isBorderBox ? BORDER_INDEX : CONTENT_INDEX;\n  }\n  var borderBoxValueOrIsBorderBox = borderBoxValue !== void 0 || isBorderBox;\n  var val = borderBoxValue || cssBoxValue;\n  if (extra === CONTENT_INDEX) {\n    if (borderBoxValueOrIsBorderBox) {\n      return val - getPBMWidth(elem, [\"border\", \"padding\"], which);\n    }\n    return cssBoxValue;\n  } else if (borderBoxValueOrIsBorderBox) {\n    if (extra === BORDER_INDEX) {\n      return val;\n    }\n    return val + (extra === PADDING_INDEX ? -getPBMWidth(elem, [\"border\"], which) : getPBMWidth(elem, [\"margin\"], which));\n  }\n  return cssBoxValue + getPBMWidth(elem, BOX_MODELS.slice(extra), which);\n}\nvar cssShow = {\n  position: \"absolute\",\n  visibility: \"hidden\",\n  display: \"block\"\n};\nfunction getWHIgnoreDisplay() {\n  for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  var val;\n  var elem = args[0];\n  if (elem.offsetWidth !== 0) {\n    val = getWH.apply(void 0, args);\n  } else {\n    swap(elem, cssShow, function() {\n      val = getWH.apply(void 0, args);\n    });\n  }\n  return val;\n}\neach([\"width\", \"height\"], function(name) {\n  var first = name.charAt(0).toUpperCase() + name.slice(1);\n  domUtils[\"outer\".concat(first)] = function(el, includeMargin) {\n    return el && getWHIgnoreDisplay(el, name, includeMargin ? MARGIN_INDEX : BORDER_INDEX);\n  };\n  var which = name === \"width\" ? [\"Left\", \"Right\"] : [\"Top\", \"Bottom\"];\n  domUtils[name] = function(elem, v2) {\n    var val = v2;\n    if (val !== void 0) {\n      if (elem) {\n        var isBorderBox = isBorderBoxFn(elem);\n        if (isBorderBox) {\n          val += getPBMWidth(elem, [\"padding\", \"border\"], which);\n        }\n        return css(elem, name, val);\n      }\n      return void 0;\n    }\n    return elem && getWHIgnoreDisplay(elem, name, CONTENT_INDEX);\n  };\n});\nfunction mix(to, from) {\n  for (var i in from) {\n    if (from.hasOwnProperty(i)) {\n      to[i] = from[i];\n    }\n  }\n  return to;\n}\nvar utils = {\n  getWindow: function getWindow(node) {\n    if (node && node.document && node.setTimeout) {\n      return node;\n    }\n    var doc = node.ownerDocument || node;\n    return doc.defaultView || doc.parentWindow;\n  },\n  getDocument,\n  offset: function offset(el, value, option) {\n    if (typeof value !== \"undefined\") {\n      setOffset(el, value, option || {});\n    } else {\n      return getOffset(el);\n    }\n  },\n  isWindow,\n  each,\n  css,\n  clone: function clone(obj) {\n    var i;\n    var ret = {};\n    for (i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        ret[i] = obj[i];\n      }\n    }\n    var overflow = obj.overflow;\n    if (overflow) {\n      for (i in obj) {\n        if (obj.hasOwnProperty(i)) {\n          ret.overflow[i] = obj.overflow[i];\n        }\n      }\n    }\n    return ret;\n  },\n  mix,\n  getWindowScrollLeft: function getWindowScrollLeft(w2) {\n    return getScrollLeft(w2);\n  },\n  getWindowScrollTop: function getWindowScrollTop(w2) {\n    return getScrollTop(w2);\n  },\n  merge: function merge() {\n    var ret = {};\n    for (var i = 0; i < arguments.length; i++) {\n      utils.mix(ret, i < 0 || arguments.length <= i ? void 0 : arguments[i]);\n    }\n    return ret;\n  },\n  viewportWidth: 0,\n  viewportHeight: 0\n};\nmix(utils, domUtils);\nvar getParent2 = utils.getParent;\nfunction getOffsetParent(element) {\n  if (utils.isWindow(element) || element.nodeType === 9) {\n    return null;\n  }\n  var doc = utils.getDocument(element);\n  var body = doc.body;\n  var parent;\n  var positionStyle = utils.css(element, \"position\");\n  var skipStatic = positionStyle === \"fixed\" || positionStyle === \"absolute\";\n  if (!skipStatic) {\n    return element.nodeName.toLowerCase() === \"html\" ? null : getParent2(element);\n  }\n  for (parent = getParent2(element); parent && parent !== body && parent.nodeType !== 9; parent = getParent2(parent)) {\n    positionStyle = utils.css(parent, \"position\");\n    if (positionStyle !== \"static\") {\n      return parent;\n    }\n  }\n  return null;\n}\nvar getParent$1 = utils.getParent;\nfunction isAncestorFixed(element) {\n  if (utils.isWindow(element) || element.nodeType === 9) {\n    return false;\n  }\n  var doc = utils.getDocument(element);\n  var body = doc.body;\n  var parent = null;\n  for (parent = getParent$1(element); parent && parent !== body && parent !== doc; parent = getParent$1(parent)) {\n    var positionStyle = utils.css(parent, \"position\");\n    if (positionStyle === \"fixed\") {\n      return true;\n    }\n  }\n  return false;\n}\nfunction getVisibleRectForElement(element, alwaysByViewport) {\n  var visibleRect = {\n    left: 0,\n    right: Infinity,\n    top: 0,\n    bottom: Infinity\n  };\n  var el = getOffsetParent(element);\n  var doc = utils.getDocument(element);\n  var win = doc.defaultView || doc.parentWindow;\n  var body = doc.body;\n  var documentElement = doc.documentElement;\n  while (el) {\n    if ((navigator.userAgent.indexOf(\"MSIE\") === -1 || el.clientWidth !== 0) && el !== body && el !== documentElement && utils.css(el, \"overflow\") !== \"visible\") {\n      var pos = utils.offset(el);\n      pos.left += el.clientLeft;\n      pos.top += el.clientTop;\n      visibleRect.top = Math.max(visibleRect.top, pos.top);\n      visibleRect.right = Math.min(visibleRect.right, pos.left + el.clientWidth);\n      visibleRect.bottom = Math.min(visibleRect.bottom, pos.top + el.clientHeight);\n      visibleRect.left = Math.max(visibleRect.left, pos.left);\n    } else if (el === body || el === documentElement) {\n      break;\n    }\n    el = getOffsetParent(el);\n  }\n  var originalPosition = null;\n  if (!utils.isWindow(element) && element.nodeType !== 9) {\n    originalPosition = element.style.position;\n    var position = utils.css(element, \"position\");\n    if (position === \"absolute\") {\n      element.style.position = \"fixed\";\n    }\n  }\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n  var documentWidth = documentElement.scrollWidth;\n  var documentHeight = documentElement.scrollHeight;\n  var bodyStyle = window.getComputedStyle(body);\n  if (bodyStyle.overflowX === \"hidden\") {\n    documentWidth = win.innerWidth;\n  }\n  if (bodyStyle.overflowY === \"hidden\") {\n    documentHeight = win.innerHeight;\n  }\n  if (element.style) {\n    element.style.position = originalPosition;\n  }\n  if (alwaysByViewport || isAncestorFixed(element)) {\n    visibleRect.left = Math.max(visibleRect.left, scrollX);\n    visibleRect.top = Math.max(visibleRect.top, scrollY);\n    visibleRect.right = Math.min(visibleRect.right, scrollX + viewportWidth);\n    visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + viewportHeight);\n  } else {\n    var maxVisibleWidth = Math.max(documentWidth, scrollX + viewportWidth);\n    visibleRect.right = Math.min(visibleRect.right, maxVisibleWidth);\n    var maxVisibleHeight = Math.max(documentHeight, scrollY + viewportHeight);\n    visibleRect.bottom = Math.min(visibleRect.bottom, maxVisibleHeight);\n  }\n  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null;\n}\nfunction adjustForViewport(elFuturePos, elRegion, visibleRect, overflow) {\n  var pos = utils.clone(elFuturePos);\n  var size = {\n    width: elRegion.width,\n    height: elRegion.height\n  };\n  if (overflow.adjustX && pos.left < visibleRect.left) {\n    pos.left = visibleRect.left;\n  }\n  if (overflow.resizeWidth && pos.left >= visibleRect.left && pos.left + size.width > visibleRect.right) {\n    size.width -= pos.left + size.width - visibleRect.right;\n  }\n  if (overflow.adjustX && pos.left + size.width > visibleRect.right) {\n    pos.left = Math.max(visibleRect.right - size.width, visibleRect.left);\n  }\n  if (overflow.adjustY && pos.top < visibleRect.top) {\n    pos.top = visibleRect.top;\n  }\n  if (overflow.resizeHeight && pos.top >= visibleRect.top && pos.top + size.height > visibleRect.bottom) {\n    size.height -= pos.top + size.height - visibleRect.bottom;\n  }\n  if (overflow.adjustY && pos.top + size.height > visibleRect.bottom) {\n    pos.top = Math.max(visibleRect.bottom - size.height, visibleRect.top);\n  }\n  return utils.mix(pos, size);\n}\nfunction getRegion(node) {\n  var offset2;\n  var w2;\n  var h;\n  if (!utils.isWindow(node) && node.nodeType !== 9) {\n    offset2 = utils.offset(node);\n    w2 = utils.outerWidth(node);\n    h = utils.outerHeight(node);\n  } else {\n    var win = utils.getWindow(node);\n    offset2 = {\n      left: utils.getWindowScrollLeft(win),\n      top: utils.getWindowScrollTop(win)\n    };\n    w2 = utils.viewportWidth(win);\n    h = utils.viewportHeight(win);\n  }\n  offset2.width = w2;\n  offset2.height = h;\n  return offset2;\n}\nfunction getAlignOffset(region, align) {\n  var V = align.charAt(0);\n  var H = align.charAt(1);\n  var w2 = region.width;\n  var h = region.height;\n  var x2 = region.left;\n  var y2 = region.top;\n  if (V === \"c\") {\n    y2 += h / 2;\n  } else if (V === \"b\") {\n    y2 += h;\n  }\n  if (H === \"c\") {\n    x2 += w2 / 2;\n  } else if (H === \"r\") {\n    x2 += w2;\n  }\n  return {\n    left: x2,\n    top: y2\n  };\n}\nfunction getElFuturePos(elRegion, refNodeRegion, points, offset2, targetOffset2) {\n  var p1 = getAlignOffset(refNodeRegion, points[1]);\n  var p2 = getAlignOffset(elRegion, points[0]);\n  var diff = [p2.left - p1.left, p2.top - p1.top];\n  return {\n    left: Math.round(elRegion.left - diff[0] + offset2[0] - targetOffset2[0]),\n    top: Math.round(elRegion.top - diff[1] + offset2[1] - targetOffset2[1])\n  };\n}\nfunction isFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left < visibleRect.left || elFuturePos.left + elRegion.width > visibleRect.right;\n}\nfunction isFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top < visibleRect.top || elFuturePos.top + elRegion.height > visibleRect.bottom;\n}\nfunction isCompleteFailX(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.left > visibleRect.right || elFuturePos.left + elRegion.width < visibleRect.left;\n}\nfunction isCompleteFailY(elFuturePos, elRegion, visibleRect) {\n  return elFuturePos.top > visibleRect.bottom || elFuturePos.top + elRegion.height < visibleRect.top;\n}\nfunction flip(points, reg, map) {\n  var ret = [];\n  utils.each(points, function(p2) {\n    ret.push(p2.replace(reg, function(m2) {\n      return map[m2];\n    }));\n  });\n  return ret;\n}\nfunction flipOffset(offset2, index2) {\n  offset2[index2] = -offset2[index2];\n  return offset2;\n}\nfunction convertOffset(str, offsetLen) {\n  var n2;\n  if (/%$/.test(str)) {\n    n2 = parseInt(str.substring(0, str.length - 1), 10) / 100 * offsetLen;\n  } else {\n    n2 = parseInt(str, 10);\n  }\n  return n2 || 0;\n}\nfunction normalizeOffset(offset2, el) {\n  offset2[0] = convertOffset(offset2[0], el.width);\n  offset2[1] = convertOffset(offset2[1], el.height);\n}\nfunction doAlign(el, tgtRegion, align, isTgtRegionVisible) {\n  var points = align.points;\n  var offset2 = align.offset || [0, 0];\n  var targetOffset2 = align.targetOffset || [0, 0];\n  var overflow = align.overflow;\n  var source = align.source || el;\n  offset2 = [].concat(offset2);\n  targetOffset2 = [].concat(targetOffset2);\n  overflow = overflow || {};\n  var newOverflowCfg = {};\n  var fail = 0;\n  var alwaysByViewport = !!(overflow && overflow.alwaysByViewport);\n  var visibleRect = getVisibleRectForElement(source, alwaysByViewport);\n  var elRegion = getRegion(source);\n  normalizeOffset(offset2, elRegion);\n  normalizeOffset(targetOffset2, tgtRegion);\n  var elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset2, targetOffset2);\n  var newElRegion = utils.merge(elRegion, elFuturePos);\n  if (visibleRect && (overflow.adjustX || overflow.adjustY) && isTgtRegionVisible) {\n    if (overflow.adjustX) {\n      if (isFailX(elFuturePos, elRegion, visibleRect)) {\n        var newPoints = flip(points, /[lr]/gi, {\n          l: \"r\",\n          r: \"l\"\n        });\n        var newOffset = flipOffset(offset2, 0);\n        var newTargetOffset = flipOffset(targetOffset2, 0);\n        var newElFuturePos = getElFuturePos(elRegion, tgtRegion, newPoints, newOffset, newTargetOffset);\n        if (!isCompleteFailX(newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = newPoints;\n          offset2 = newOffset;\n          targetOffset2 = newTargetOffset;\n        }\n      }\n    }\n    if (overflow.adjustY) {\n      if (isFailY(elFuturePos, elRegion, visibleRect)) {\n        var _newPoints = flip(points, /[tb]/gi, {\n          t: \"b\",\n          b: \"t\"\n        });\n        var _newOffset = flipOffset(offset2, 1);\n        var _newTargetOffset = flipOffset(targetOffset2, 1);\n        var _newElFuturePos = getElFuturePos(elRegion, tgtRegion, _newPoints, _newOffset, _newTargetOffset);\n        if (!isCompleteFailY(_newElFuturePos, elRegion, visibleRect)) {\n          fail = 1;\n          points = _newPoints;\n          offset2 = _newOffset;\n          targetOffset2 = _newTargetOffset;\n        }\n      }\n    }\n    if (fail) {\n      elFuturePos = getElFuturePos(elRegion, tgtRegion, points, offset2, targetOffset2);\n      utils.mix(newElRegion, elFuturePos);\n    }\n    var isStillFailX = isFailX(elFuturePos, elRegion, visibleRect);\n    var isStillFailY = isFailY(elFuturePos, elRegion, visibleRect);\n    if (isStillFailX || isStillFailY) {\n      var _newPoints2 = points;\n      if (isStillFailX) {\n        _newPoints2 = flip(points, /[lr]/gi, {\n          l: \"r\",\n          r: \"l\"\n        });\n      }\n      if (isStillFailY) {\n        _newPoints2 = flip(points, /[tb]/gi, {\n          t: \"b\",\n          b: \"t\"\n        });\n      }\n      points = _newPoints2;\n      offset2 = align.offset || [0, 0];\n      targetOffset2 = align.targetOffset || [0, 0];\n    }\n    newOverflowCfg.adjustX = overflow.adjustX && isStillFailX;\n    newOverflowCfg.adjustY = overflow.adjustY && isStillFailY;\n    if (newOverflowCfg.adjustX || newOverflowCfg.adjustY) {\n      newElRegion = adjustForViewport(elFuturePos, elRegion, visibleRect, newOverflowCfg);\n    }\n  }\n  if (newElRegion.width !== elRegion.width) {\n    utils.css(source, \"width\", utils.width(source) + newElRegion.width - elRegion.width);\n  }\n  if (newElRegion.height !== elRegion.height) {\n    utils.css(source, \"height\", utils.height(source) + newElRegion.height - elRegion.height);\n  }\n  utils.offset(source, {\n    left: newElRegion.left,\n    top: newElRegion.top\n  }, {\n    useCssRight: align.useCssRight,\n    useCssBottom: align.useCssBottom,\n    useCssTransform: align.useCssTransform,\n    ignoreShake: align.ignoreShake\n  });\n  return {\n    points,\n    offset: offset2,\n    targetOffset: targetOffset2,\n    overflow: newOverflowCfg\n  };\n}\nfunction isOutOfVisibleRect(target, alwaysByViewport) {\n  var visibleRect = getVisibleRectForElement(target, alwaysByViewport);\n  var targetRegion = getRegion(target);\n  return !visibleRect || targetRegion.left + targetRegion.width <= visibleRect.left || targetRegion.top + targetRegion.height <= visibleRect.top || targetRegion.left >= visibleRect.right || targetRegion.top >= visibleRect.bottom;\n}\nfunction alignElement(el, refNode, align) {\n  var target = align.target || refNode;\n  var refNodeRegion = getRegion(target);\n  var isTargetNotOutOfVisible = !isOutOfVisibleRect(target, align.overflow && align.overflow.alwaysByViewport);\n  return doAlign(el, refNodeRegion, align, isTargetNotOutOfVisible);\n}\nalignElement.__getOffsetParent = getOffsetParent;\nalignElement.__getVisibleRectForElement = getVisibleRectForElement;\nfunction alignPoint(el, tgtPoint, align) {\n  var pageX;\n  var pageY;\n  var doc = utils.getDocument(el);\n  var win = doc.defaultView || doc.parentWindow;\n  var scrollX = utils.getWindowScrollLeft(win);\n  var scrollY = utils.getWindowScrollTop(win);\n  var viewportWidth = utils.viewportWidth(win);\n  var viewportHeight = utils.viewportHeight(win);\n  if (\"pageX\" in tgtPoint) {\n    pageX = tgtPoint.pageX;\n  } else {\n    pageX = scrollX + tgtPoint.clientX;\n  }\n  if (\"pageY\" in tgtPoint) {\n    pageY = tgtPoint.pageY;\n  } else {\n    pageY = scrollY + tgtPoint.clientY;\n  }\n  var tgtRegion = {\n    left: pageX,\n    top: pageY,\n    width: 0,\n    height: 0\n  };\n  var pointInView = pageX >= 0 && pageX <= scrollX + viewportWidth && pageY >= 0 && pageY <= scrollY + viewportHeight;\n  var points = [align.points[0], \"cc\"];\n  return doAlign(el, tgtRegion, _objectSpread2(_objectSpread2({}, align), {}, {\n    points\n  }), pointInView);\n}\nfunction listCacheClear$1() {\n  this.__data__ = [];\n  this.size = 0;\n}\nvar _listCacheClear = listCacheClear$1;\nfunction eq$2(value, other) {\n  return value === other || value !== value && other !== other;\n}\nvar eq_1 = eq$2;\nvar eq$1 = eq_1;\nfunction assocIndexOf$4(array4, key2) {\n  var length = array4.length;\n  while (length--) {\n    if (eq$1(array4[length][0], key2)) {\n      return length;\n    }\n  }\n  return -1;\n}\nvar _assocIndexOf = assocIndexOf$4;\nvar assocIndexOf$3 = _assocIndexOf;\nvar arrayProto = Array.prototype;\nvar splice = arrayProto.splice;\nfunction listCacheDelete$1(key2) {\n  var data = this.__data__, index2 = assocIndexOf$3(data, key2);\n  if (index2 < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index2 == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index2, 1);\n  }\n  --this.size;\n  return true;\n}\nvar _listCacheDelete = listCacheDelete$1;\nvar assocIndexOf$2 = _assocIndexOf;\nfunction listCacheGet$1(key2) {\n  var data = this.__data__, index2 = assocIndexOf$2(data, key2);\n  return index2 < 0 ? void 0 : data[index2][1];\n}\nvar _listCacheGet = listCacheGet$1;\nvar assocIndexOf$1 = _assocIndexOf;\nfunction listCacheHas$1(key2) {\n  return assocIndexOf$1(this.__data__, key2) > -1;\n}\nvar _listCacheHas = listCacheHas$1;\nvar assocIndexOf = _assocIndexOf;\nfunction listCacheSet$1(key2, value) {\n  var data = this.__data__, index2 = assocIndexOf(data, key2);\n  if (index2 < 0) {\n    ++this.size;\n    data.push([key2, value]);\n  } else {\n    data[index2][1] = value;\n  }\n  return this;\n}\nvar _listCacheSet = listCacheSet$1;\nvar listCacheClear = _listCacheClear, listCacheDelete = _listCacheDelete, listCacheGet = _listCacheGet, listCacheHas = _listCacheHas, listCacheSet = _listCacheSet;\nfunction ListCache$4(entries) {\n  var index2 = -1, length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index2 < length) {\n    var entry = entries[index2];\n    this.set(entry[0], entry[1]);\n  }\n}\nListCache$4.prototype.clear = listCacheClear;\nListCache$4.prototype[\"delete\"] = listCacheDelete;\nListCache$4.prototype.get = listCacheGet;\nListCache$4.prototype.has = listCacheHas;\nListCache$4.prototype.set = listCacheSet;\nvar _ListCache = ListCache$4;\nvar ListCache$3 = _ListCache;\nfunction stackClear$1() {\n  this.__data__ = new ListCache$3();\n  this.size = 0;\n}\nvar _stackClear = stackClear$1;\nfunction stackDelete$1(key2) {\n  var data = this.__data__, result = data[\"delete\"](key2);\n  this.size = data.size;\n  return result;\n}\nvar _stackDelete = stackDelete$1;\nfunction stackGet$1(key2) {\n  return this.__data__.get(key2);\n}\nvar _stackGet = stackGet$1;\nfunction stackHas$1(key2) {\n  return this.__data__.has(key2);\n}\nvar _stackHas = stackHas$1;\nvar freeGlobal$1 = typeof commonjsGlobal == \"object\" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;\nvar _freeGlobal = freeGlobal$1;\nvar freeGlobal = _freeGlobal;\nvar freeSelf = typeof self == \"object\" && self && self.Object === Object && self;\nvar root$8 = freeGlobal || freeSelf || Function(\"return this\")();\nvar _root = root$8;\nvar root$7 = _root;\nvar Symbol$4 = root$7.Symbol;\nvar _Symbol = Symbol$4;\nvar Symbol$3 = _Symbol;\nvar objectProto$b = Object.prototype;\nvar hasOwnProperty$9 = objectProto$b.hasOwnProperty;\nvar nativeObjectToString$1 = objectProto$b.toString;\nvar symToStringTag$1 = Symbol$3 ? Symbol$3.toStringTag : void 0;\nfunction getRawTag$1(value) {\n  var isOwn = hasOwnProperty$9.call(value, symToStringTag$1), tag = value[symToStringTag$1];\n  try {\n    value[symToStringTag$1] = void 0;\n    var unmasked = true;\n  } catch (e2) {\n  }\n  var result = nativeObjectToString$1.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag$1] = tag;\n    } else {\n      delete value[symToStringTag$1];\n    }\n  }\n  return result;\n}\nvar _getRawTag = getRawTag$1;\nvar objectProto$a = Object.prototype;\nvar nativeObjectToString = objectProto$a.toString;\nfunction objectToString$1(value) {\n  return nativeObjectToString.call(value);\n}\nvar _objectToString = objectToString$1;\nvar Symbol$2 = _Symbol, getRawTag = _getRawTag, objectToString = _objectToString;\nvar nullTag = \"[object Null]\", undefinedTag = \"[object Undefined]\";\nvar symToStringTag = Symbol$2 ? Symbol$2.toStringTag : void 0;\nfunction baseGetTag$4(value) {\n  if (value == null) {\n    return value === void 0 ? undefinedTag : nullTag;\n  }\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\nvar _baseGetTag = baseGetTag$4;\nfunction isObject$2(value) {\n  var type4 = typeof value;\n  return value != null && (type4 == \"object\" || type4 == \"function\");\n}\nvar isObject_1 = isObject$2;\nvar baseGetTag$3 = _baseGetTag, isObject$1 = isObject_1;\nvar asyncTag = \"[object AsyncFunction]\", funcTag$1 = \"[object Function]\", genTag = \"[object GeneratorFunction]\", proxyTag = \"[object Proxy]\";\nfunction isFunction$2(value) {\n  if (!isObject$1(value)) {\n    return false;\n  }\n  var tag = baseGetTag$3(value);\n  return tag == funcTag$1 || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\nvar isFunction_1 = isFunction$2;\nvar root$6 = _root;\nvar coreJsData$1 = root$6[\"__core-js_shared__\"];\nvar _coreJsData = coreJsData$1;\nvar coreJsData = _coreJsData;\nvar maskSrcKey = function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || \"\");\n  return uid ? \"Symbol(src)_1.\" + uid : \"\";\n}();\nfunction isMasked$1(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\nvar _isMasked = isMasked$1;\nvar funcProto$1 = Function.prototype;\nvar funcToString$1 = funcProto$1.toString;\nfunction toSource$2(func) {\n  if (func != null) {\n    try {\n      return funcToString$1.call(func);\n    } catch (e2) {\n    }\n    try {\n      return func + \"\";\n    } catch (e2) {\n    }\n  }\n  return \"\";\n}\nvar _toSource = toSource$2;\nvar isFunction$1 = isFunction_1, isMasked = _isMasked, isObject = isObject_1, toSource$1 = _toSource;\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\nvar funcProto = Function.prototype, objectProto$9 = Object.prototype;\nvar funcToString = funcProto.toString;\nvar hasOwnProperty$8 = objectProto$9.hasOwnProperty;\nvar reIsNative = RegExp(\"^\" + funcToString.call(hasOwnProperty$8).replace(reRegExpChar, \"\\\\$&\").replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, \"$1.*?\") + \"$\");\nfunction baseIsNative$1(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern4 = isFunction$1(value) ? reIsNative : reIsHostCtor;\n  return pattern4.test(toSource$1(value));\n}\nvar _baseIsNative = baseIsNative$1;\nfunction getValue$1(object4, key2) {\n  return object4 == null ? void 0 : object4[key2];\n}\nvar _getValue = getValue$1;\nvar baseIsNative = _baseIsNative, getValue = _getValue;\nfunction getNative$6(object4, key2) {\n  var value = getValue(object4, key2);\n  return baseIsNative(value) ? value : void 0;\n}\nvar _getNative = getNative$6;\nvar getNative$5 = _getNative, root$5 = _root;\nvar Map$4 = getNative$5(root$5, \"Map\");\nvar _Map = Map$4;\nvar getNative$4 = _getNative;\nvar nativeCreate$4 = getNative$4(Object, \"create\");\nvar _nativeCreate = nativeCreate$4;\nvar nativeCreate$3 = _nativeCreate;\nfunction hashClear$1() {\n  this.__data__ = nativeCreate$3 ? nativeCreate$3(null) : {};\n  this.size = 0;\n}\nvar _hashClear = hashClear$1;\nfunction hashDelete$1(key2) {\n  var result = this.has(key2) && delete this.__data__[key2];\n  this.size -= result ? 1 : 0;\n  return result;\n}\nvar _hashDelete = hashDelete$1;\nvar nativeCreate$2 = _nativeCreate;\nvar HASH_UNDEFINED$2 = \"__lodash_hash_undefined__\";\nvar objectProto$8 = Object.prototype;\nvar hasOwnProperty$7 = objectProto$8.hasOwnProperty;\nfunction hashGet$1(key2) {\n  var data = this.__data__;\n  if (nativeCreate$2) {\n    var result = data[key2];\n    return result === HASH_UNDEFINED$2 ? void 0 : result;\n  }\n  return hasOwnProperty$7.call(data, key2) ? data[key2] : void 0;\n}\nvar _hashGet = hashGet$1;\nvar nativeCreate$1 = _nativeCreate;\nvar objectProto$7 = Object.prototype;\nvar hasOwnProperty$6 = objectProto$7.hasOwnProperty;\nfunction hashHas$1(key2) {\n  var data = this.__data__;\n  return nativeCreate$1 ? data[key2] !== void 0 : hasOwnProperty$6.call(data, key2);\n}\nvar _hashHas = hashHas$1;\nvar nativeCreate = _nativeCreate;\nvar HASH_UNDEFINED$1 = \"__lodash_hash_undefined__\";\nfunction hashSet$1(key2, value) {\n  var data = this.__data__;\n  this.size += this.has(key2) ? 0 : 1;\n  data[key2] = nativeCreate && value === void 0 ? HASH_UNDEFINED$1 : value;\n  return this;\n}\nvar _hashSet = hashSet$1;\nvar hashClear = _hashClear, hashDelete = _hashDelete, hashGet = _hashGet, hashHas = _hashHas, hashSet = _hashSet;\nfunction Hash$1(entries) {\n  var index2 = -1, length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index2 < length) {\n    var entry = entries[index2];\n    this.set(entry[0], entry[1]);\n  }\n}\nHash$1.prototype.clear = hashClear;\nHash$1.prototype[\"delete\"] = hashDelete;\nHash$1.prototype.get = hashGet;\nHash$1.prototype.has = hashHas;\nHash$1.prototype.set = hashSet;\nvar _Hash = Hash$1;\nvar Hash = _Hash, ListCache$2 = _ListCache, Map$3 = _Map;\nfunction mapCacheClear$1() {\n  this.size = 0;\n  this.__data__ = {\n    \"hash\": new Hash(),\n    \"map\": new (Map$3 || ListCache$2)(),\n    \"string\": new Hash()\n  };\n}\nvar _mapCacheClear = mapCacheClear$1;\nfunction isKeyable$1(value) {\n  var type4 = typeof value;\n  return type4 == \"string\" || type4 == \"number\" || type4 == \"symbol\" || type4 == \"boolean\" ? value !== \"__proto__\" : value === null;\n}\nvar _isKeyable = isKeyable$1;\nvar isKeyable = _isKeyable;\nfunction getMapData$4(map, key2) {\n  var data = map.__data__;\n  return isKeyable(key2) ? data[typeof key2 == \"string\" ? \"string\" : \"hash\"] : data.map;\n}\nvar _getMapData = getMapData$4;\nvar getMapData$3 = _getMapData;\nfunction mapCacheDelete$1(key2) {\n  var result = getMapData$3(this, key2)[\"delete\"](key2);\n  this.size -= result ? 1 : 0;\n  return result;\n}\nvar _mapCacheDelete = mapCacheDelete$1;\nvar getMapData$2 = _getMapData;\nfunction mapCacheGet$1(key2) {\n  return getMapData$2(this, key2).get(key2);\n}\nvar _mapCacheGet = mapCacheGet$1;\nvar getMapData$1 = _getMapData;\nfunction mapCacheHas$1(key2) {\n  return getMapData$1(this, key2).has(key2);\n}\nvar _mapCacheHas = mapCacheHas$1;\nvar getMapData = _getMapData;\nfunction mapCacheSet$1(key2, value) {\n  var data = getMapData(this, key2), size = data.size;\n  data.set(key2, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\nvar _mapCacheSet = mapCacheSet$1;\nvar mapCacheClear = _mapCacheClear, mapCacheDelete = _mapCacheDelete, mapCacheGet = _mapCacheGet, mapCacheHas = _mapCacheHas, mapCacheSet = _mapCacheSet;\nfunction MapCache$2(entries) {\n  var index2 = -1, length = entries == null ? 0 : entries.length;\n  this.clear();\n  while (++index2 < length) {\n    var entry = entries[index2];\n    this.set(entry[0], entry[1]);\n  }\n}\nMapCache$2.prototype.clear = mapCacheClear;\nMapCache$2.prototype[\"delete\"] = mapCacheDelete;\nMapCache$2.prototype.get = mapCacheGet;\nMapCache$2.prototype.has = mapCacheHas;\nMapCache$2.prototype.set = mapCacheSet;\nvar _MapCache = MapCache$2;\nvar ListCache$1 = _ListCache, Map$2 = _Map, MapCache$1 = _MapCache;\nvar LARGE_ARRAY_SIZE = 200;\nfunction stackSet$1(key2, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache$1) {\n    var pairs = data.__data__;\n    if (!Map$2 || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key2, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache$1(pairs);\n  }\n  data.set(key2, value);\n  this.size = data.size;\n  return this;\n}\nvar _stackSet = stackSet$1;\nvar ListCache = _ListCache, stackClear = _stackClear, stackDelete = _stackDelete, stackGet = _stackGet, stackHas = _stackHas, stackSet = _stackSet;\nfunction Stack$1(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\nStack$1.prototype.clear = stackClear;\nStack$1.prototype[\"delete\"] = stackDelete;\nStack$1.prototype.get = stackGet;\nStack$1.prototype.has = stackHas;\nStack$1.prototype.set = stackSet;\nvar _Stack = Stack$1;\nvar HASH_UNDEFINED = \"__lodash_hash_undefined__\";\nfunction setCacheAdd$1(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\nvar _setCacheAdd = setCacheAdd$1;\nfunction setCacheHas$1(value) {\n  return this.__data__.has(value);\n}\nvar _setCacheHas = setCacheHas$1;\nvar MapCache = _MapCache, setCacheAdd = _setCacheAdd, setCacheHas = _setCacheHas;\nfunction SetCache$1(values) {\n  var index2 = -1, length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n  while (++index2 < length) {\n    this.add(values[index2]);\n  }\n}\nSetCache$1.prototype.add = SetCache$1.prototype.push = setCacheAdd;\nSetCache$1.prototype.has = setCacheHas;\nvar _SetCache = SetCache$1;\nfunction arraySome$1(array4, predicate) {\n  var index2 = -1, length = array4 == null ? 0 : array4.length;\n  while (++index2 < length) {\n    if (predicate(array4[index2], index2, array4)) {\n      return true;\n    }\n  }\n  return false;\n}\nvar _arraySome = arraySome$1;\nfunction cacheHas$1(cache, key2) {\n  return cache.has(key2);\n}\nvar _cacheHas = cacheHas$1;\nvar SetCache = _SetCache, arraySome = _arraySome, cacheHas = _cacheHas;\nvar COMPARE_PARTIAL_FLAG$3 = 1, COMPARE_UNORDERED_FLAG$1 = 2;\nfunction equalArrays$2(array4, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$3, arrLength = array4.length, othLength = other.length;\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  var arrStacked = stack.get(array4);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array4;\n  }\n  var index2 = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG$1 ? new SetCache() : void 0;\n  stack.set(array4, other);\n  stack.set(other, array4);\n  while (++index2 < arrLength) {\n    var arrValue = array4[index2], othValue = other[index2];\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index2, other, array4, stack) : customizer(arrValue, othValue, index2, array4, other, stack);\n    }\n    if (compared !== void 0) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    if (seen) {\n      if (!arraySome(other, function(othValue2, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n  stack[\"delete\"](array4);\n  stack[\"delete\"](other);\n  return result;\n}\nvar _equalArrays = equalArrays$2;\nvar root$4 = _root;\nvar Uint8Array$1 = root$4.Uint8Array;\nvar _Uint8Array = Uint8Array$1;\nfunction mapToArray$1(map) {\n  var index2 = -1, result = Array(map.size);\n  map.forEach(function(value, key2) {\n    result[++index2] = [key2, value];\n  });\n  return result;\n}\nvar _mapToArray = mapToArray$1;\nfunction setToArray$1(set2) {\n  var index2 = -1, result = Array(set2.size);\n  set2.forEach(function(value) {\n    result[++index2] = value;\n  });\n  return result;\n}\nvar _setToArray = setToArray$1;\nvar Symbol$1 = _Symbol, Uint8Array2 = _Uint8Array, eq = eq_1, equalArrays$1 = _equalArrays, mapToArray = _mapToArray, setToArray = _setToArray;\nvar COMPARE_PARTIAL_FLAG$2 = 1, COMPARE_UNORDERED_FLAG = 2;\nvar boolTag$1 = \"[object Boolean]\", dateTag$1 = \"[object Date]\", errorTag$1 = \"[object Error]\", mapTag$2 = \"[object Map]\", numberTag$1 = \"[object Number]\", regexpTag$1 = \"[object RegExp]\", setTag$2 = \"[object Set]\", stringTag$1 = \"[object String]\", symbolTag = \"[object Symbol]\";\nvar arrayBufferTag$1 = \"[object ArrayBuffer]\", dataViewTag$2 = \"[object DataView]\";\nvar symbolProto = Symbol$1 ? Symbol$1.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;\nfunction equalByTag$1(object4, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag$2:\n      if (object4.byteLength != other.byteLength || object4.byteOffset != other.byteOffset) {\n        return false;\n      }\n      object4 = object4.buffer;\n      other = other.buffer;\n    case arrayBufferTag$1:\n      if (object4.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object4), new Uint8Array2(other))) {\n        return false;\n      }\n      return true;\n    case boolTag$1:\n    case dateTag$1:\n    case numberTag$1:\n      return eq(+object4, +other);\n    case errorTag$1:\n      return object4.name == other.name && object4.message == other.message;\n    case regexpTag$1:\n    case stringTag$1:\n      return object4 == other + \"\";\n    case mapTag$2:\n      var convert = mapToArray;\n    case setTag$2:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG$2;\n      convert || (convert = setToArray);\n      if (object4.size != other.size && !isPartial) {\n        return false;\n      }\n      var stacked = stack.get(object4);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n      stack.set(object4, other);\n      var result = equalArrays$1(convert(object4), convert(other), bitmask, customizer, equalFunc, stack);\n      stack[\"delete\"](object4);\n      return result;\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object4) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\nvar _equalByTag = equalByTag$1;\nfunction arrayPush$1(array4, values) {\n  var index2 = -1, length = values.length, offset2 = array4.length;\n  while (++index2 < length) {\n    array4[offset2 + index2] = values[index2];\n  }\n  return array4;\n}\nvar _arrayPush = arrayPush$1;\nvar isArray$3 = Array.isArray;\nvar isArray_1 = isArray$3;\nvar arrayPush = _arrayPush, isArray$2 = isArray_1;\nfunction baseGetAllKeys$1(object4, keysFunc, symbolsFunc) {\n  var result = keysFunc(object4);\n  return isArray$2(object4) ? result : arrayPush(result, symbolsFunc(object4));\n}\nvar _baseGetAllKeys = baseGetAllKeys$1;\nfunction arrayFilter$1(array4, predicate) {\n  var index2 = -1, length = array4 == null ? 0 : array4.length, resIndex = 0, result = [];\n  while (++index2 < length) {\n    var value = array4[index2];\n    if (predicate(value, index2, array4)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\nvar _arrayFilter = arrayFilter$1;\nfunction stubArray$1() {\n  return [];\n}\nvar stubArray_1 = stubArray$1;\nvar arrayFilter = _arrayFilter, stubArray = stubArray_1;\nvar objectProto$6 = Object.prototype;\nvar propertyIsEnumerable$1 = objectProto$6.propertyIsEnumerable;\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\nvar getSymbols$1 = !nativeGetSymbols ? stubArray : function(object4) {\n  if (object4 == null) {\n    return [];\n  }\n  object4 = Object(object4);\n  return arrayFilter(nativeGetSymbols(object4), function(symbol) {\n    return propertyIsEnumerable$1.call(object4, symbol);\n  });\n};\nvar _getSymbols = getSymbols$1;\nfunction baseTimes$1(n2, iteratee) {\n  var index2 = -1, result = Array(n2);\n  while (++index2 < n2) {\n    result[index2] = iteratee(index2);\n  }\n  return result;\n}\nvar _baseTimes = baseTimes$1;\nfunction isObjectLike$4(value) {\n  return value != null && typeof value == \"object\";\n}\nvar isObjectLike_1 = isObjectLike$4;\nvar baseGetTag$2 = _baseGetTag, isObjectLike$3 = isObjectLike_1;\nvar argsTag$2 = \"[object Arguments]\";\nfunction baseIsArguments$1(value) {\n  return isObjectLike$3(value) && baseGetTag$2(value) == argsTag$2;\n}\nvar _baseIsArguments = baseIsArguments$1;\nvar baseIsArguments = _baseIsArguments, isObjectLike$2 = isObjectLike_1;\nvar objectProto$5 = Object.prototype;\nvar hasOwnProperty$5 = objectProto$5.hasOwnProperty;\nvar propertyIsEnumerable = objectProto$5.propertyIsEnumerable;\nvar isArguments$1 = baseIsArguments(function() {\n  return arguments;\n}()) ? baseIsArguments : function(value) {\n  return isObjectLike$2(value) && hasOwnProperty$5.call(value, \"callee\") && !propertyIsEnumerable.call(value, \"callee\");\n};\nvar isArguments_1 = isArguments$1;\nvar isBuffer$2 = { exports: {} };\nfunction stubFalse() {\n  return false;\n}\nvar stubFalse_1 = stubFalse;\n(function(module, exports) {\n  var root2 = _root, stubFalse2 = stubFalse_1;\n  var freeExports = exports && !exports.nodeType && exports;\n  var freeModule = freeExports && true && module && !module.nodeType && module;\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n  var Buffer2 = moduleExports ? root2.Buffer : void 0;\n  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;\n  var isBuffer2 = nativeIsBuffer || stubFalse2;\n  module.exports = isBuffer2;\n})(isBuffer$2, isBuffer$2.exports);\nvar MAX_SAFE_INTEGER$1 = 9007199254740991;\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\nfunction isIndex$1(value, length) {\n  var type4 = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER$1 : length;\n  return !!length && (type4 == \"number\" || type4 != \"symbol\" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);\n}\nvar _isIndex = isIndex$1;\nvar MAX_SAFE_INTEGER = 9007199254740991;\nfunction isLength$2(value) {\n  return typeof value == \"number\" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\nvar isLength_1 = isLength$2;\nvar baseGetTag$1 = _baseGetTag, isLength$1 = isLength_1, isObjectLike$1 = isObjectLike_1;\nvar argsTag$1 = \"[object Arguments]\", arrayTag$1 = \"[object Array]\", boolTag = \"[object Boolean]\", dateTag = \"[object Date]\", errorTag = \"[object Error]\", funcTag = \"[object Function]\", mapTag$1 = \"[object Map]\", numberTag = \"[object Number]\", objectTag$2 = \"[object Object]\", regexpTag = \"[object RegExp]\", setTag$1 = \"[object Set]\", stringTag = \"[object String]\", weakMapTag$1 = \"[object WeakMap]\";\nvar arrayBufferTag = \"[object ArrayBuffer]\", dataViewTag$1 = \"[object DataView]\", float32Tag = \"[object Float32Array]\", float64Tag = \"[object Float64Array]\", int8Tag = \"[object Int8Array]\", int16Tag = \"[object Int16Array]\", int32Tag = \"[object Int32Array]\", uint8Tag = \"[object Uint8Array]\", uint8ClampedTag = \"[object Uint8ClampedArray]\", uint16Tag = \"[object Uint16Array]\", uint32Tag = \"[object Uint32Array]\";\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag$1] = typedArrayTags[arrayTag$1] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag$1] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag$1] = typedArrayTags[numberTag] = typedArrayTags[objectTag$2] = typedArrayTags[regexpTag] = typedArrayTags[setTag$1] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag$1] = false;\nfunction baseIsTypedArray$1(value) {\n  return isObjectLike$1(value) && isLength$1(value.length) && !!typedArrayTags[baseGetTag$1(value)];\n}\nvar _baseIsTypedArray = baseIsTypedArray$1;\nfunction baseUnary$1(func) {\n  return function(value) {\n    return func(value);\n  };\n}\nvar _baseUnary = baseUnary$1;\nvar _nodeUtil = { exports: {} };\n(function(module, exports) {\n  var freeGlobal2 = _freeGlobal;\n  var freeExports = exports && !exports.nodeType && exports;\n  var freeModule = freeExports && true && module && !module.nodeType && module;\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n  var freeProcess = moduleExports && freeGlobal2.process;\n  var nodeUtil2 = function() {\n    try {\n      var types2 = freeModule && freeModule.require && freeModule.require(\"util\").types;\n      if (types2) {\n        return types2;\n      }\n      return freeProcess && freeProcess.binding && freeProcess.binding(\"util\");\n    } catch (e2) {\n    }\n  }();\n  module.exports = nodeUtil2;\n})(_nodeUtil, _nodeUtil.exports);\nvar baseIsTypedArray = _baseIsTypedArray, baseUnary = _baseUnary, nodeUtil = _nodeUtil.exports;\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\nvar isTypedArray$2 = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nvar isTypedArray_1 = isTypedArray$2;\nvar baseTimes = _baseTimes, isArguments = isArguments_1, isArray$1 = isArray_1, isBuffer$1 = isBuffer$2.exports, isIndex = _isIndex, isTypedArray$1 = isTypedArray_1;\nvar objectProto$4 = Object.prototype;\nvar hasOwnProperty$4 = objectProto$4.hasOwnProperty;\nfunction arrayLikeKeys$1(value, inherited) {\n  var isArr = isArray$1(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer$1(value), isType = !isArr && !isArg && !isBuff && isTypedArray$1(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;\n  for (var key2 in value) {\n    if ((inherited || hasOwnProperty$4.call(value, key2)) && !(skipIndexes && (key2 == \"length\" || isBuff && (key2 == \"offset\" || key2 == \"parent\") || isType && (key2 == \"buffer\" || key2 == \"byteLength\" || key2 == \"byteOffset\") || isIndex(key2, length)))) {\n      result.push(key2);\n    }\n  }\n  return result;\n}\nvar _arrayLikeKeys = arrayLikeKeys$1;\nvar objectProto$3 = Object.prototype;\nfunction isPrototype$1(value) {\n  var Ctor = value && value.constructor, proto = typeof Ctor == \"function\" && Ctor.prototype || objectProto$3;\n  return value === proto;\n}\nvar _isPrototype = isPrototype$1;\nfunction overArg$1(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\nvar _overArg = overArg$1;\nvar overArg = _overArg;\nvar nativeKeys$1 = overArg(Object.keys, Object);\nvar _nativeKeys = nativeKeys$1;\nvar isPrototype = _isPrototype, nativeKeys = _nativeKeys;\nvar objectProto$2 = Object.prototype;\nvar hasOwnProperty$3 = objectProto$2.hasOwnProperty;\nfunction baseKeys$1(object4) {\n  if (!isPrototype(object4)) {\n    return nativeKeys(object4);\n  }\n  var result = [];\n  for (var key2 in Object(object4)) {\n    if (hasOwnProperty$3.call(object4, key2) && key2 != \"constructor\") {\n      result.push(key2);\n    }\n  }\n  return result;\n}\nvar _baseKeys = baseKeys$1;\nvar isFunction = isFunction_1, isLength = isLength_1;\nfunction isArrayLike$1(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\nvar isArrayLike_1 = isArrayLike$1;\nvar arrayLikeKeys = _arrayLikeKeys, baseKeys = _baseKeys, isArrayLike = isArrayLike_1;\nfunction keys$1(object4) {\n  return isArrayLike(object4) ? arrayLikeKeys(object4) : baseKeys(object4);\n}\nvar keys_1 = keys$1;\nvar baseGetAllKeys = _baseGetAllKeys, getSymbols = _getSymbols, keys = keys_1;\nfunction getAllKeys$1(object4) {\n  return baseGetAllKeys(object4, keys, getSymbols);\n}\nvar _getAllKeys = getAllKeys$1;\nvar getAllKeys = _getAllKeys;\nvar COMPARE_PARTIAL_FLAG$1 = 1;\nvar objectProto$1 = Object.prototype;\nvar hasOwnProperty$2 = objectProto$1.hasOwnProperty;\nfunction equalObjects$1(object4, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG$1, objProps = getAllKeys(object4), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index2 = objLength;\n  while (index2--) {\n    var key2 = objProps[index2];\n    if (!(isPartial ? key2 in other : hasOwnProperty$2.call(other, key2))) {\n      return false;\n    }\n  }\n  var objStacked = stack.get(object4);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object4;\n  }\n  var result = true;\n  stack.set(object4, other);\n  stack.set(other, object4);\n  var skipCtor = isPartial;\n  while (++index2 < objLength) {\n    key2 = objProps[index2];\n    var objValue = object4[key2], othValue = other[key2];\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key2, other, object4, stack) : customizer(objValue, othValue, key2, object4, other, stack);\n    }\n    if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key2 == \"constructor\");\n  }\n  if (result && !skipCtor) {\n    var objCtor = object4.constructor, othCtor = other.constructor;\n    if (objCtor != othCtor && (\"constructor\" in object4 && \"constructor\" in other) && !(typeof objCtor == \"function\" && objCtor instanceof objCtor && typeof othCtor == \"function\" && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack[\"delete\"](object4);\n  stack[\"delete\"](other);\n  return result;\n}\nvar _equalObjects = equalObjects$1;\nvar getNative$3 = _getNative, root$3 = _root;\nvar DataView$1 = getNative$3(root$3, \"DataView\");\nvar _DataView = DataView$1;\nvar getNative$2 = _getNative, root$2 = _root;\nvar Promise$2 = getNative$2(root$2, \"Promise\");\nvar _Promise = Promise$2;\nvar getNative$1 = _getNative, root$1 = _root;\nvar Set$2 = getNative$1(root$1, \"Set\");\nvar _Set = Set$2;\nvar getNative = _getNative, root = _root;\nvar WeakMap$2 = getNative(root, \"WeakMap\");\nvar _WeakMap = WeakMap$2;\nvar DataView = _DataView, Map$1 = _Map, Promise$1 = _Promise, Set$1 = _Set, WeakMap$1 = _WeakMap, baseGetTag = _baseGetTag, toSource = _toSource;\nvar mapTag = \"[object Map]\", objectTag$1 = \"[object Object]\", promiseTag = \"[object Promise]\", setTag = \"[object Set]\", weakMapTag = \"[object WeakMap]\";\nvar dataViewTag = \"[object DataView]\";\nvar dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map$1), promiseCtorString = toSource(Promise$1), setCtorString = toSource(Set$1), weakMapCtorString = toSource(WeakMap$1);\nvar getTag$1 = baseGetTag;\nif (DataView && getTag$1(new DataView(new ArrayBuffer(1))) != dataViewTag || Map$1 && getTag$1(new Map$1()) != mapTag || Promise$1 && getTag$1(Promise$1.resolve()) != promiseTag || Set$1 && getTag$1(new Set$1()) != setTag || WeakMap$1 && getTag$1(new WeakMap$1()) != weakMapTag) {\n  getTag$1 = function(value) {\n    var result = baseGetTag(value), Ctor = result == objectTag$1 ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : \"\";\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n        case mapCtorString:\n          return mapTag;\n        case promiseCtorString:\n          return promiseTag;\n        case setCtorString:\n          return setTag;\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\nvar _getTag = getTag$1;\nvar Stack = _Stack, equalArrays = _equalArrays, equalByTag = _equalByTag, equalObjects = _equalObjects, getTag = _getTag, isArray = isArray_1, isBuffer = isBuffer$2.exports, isTypedArray = isTypedArray_1;\nvar COMPARE_PARTIAL_FLAG = 1;\nvar argsTag = \"[object Arguments]\", arrayTag = \"[object Array]\", objectTag = \"[object Object]\";\nvar objectProto = Object.prototype;\nvar hasOwnProperty$1 = objectProto.hasOwnProperty;\nfunction baseIsEqualDeep$1(object4, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object4), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object4), othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;\n  if (isSameTag && isBuffer(object4)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object4) ? equalArrays(object4, other, bitmask, customizer, equalFunc, stack) : equalByTag(object4, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty$1.call(object4, \"__wrapped__\"), othIsWrapped = othIsObj && hasOwnProperty$1.call(other, \"__wrapped__\");\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object4.value() : object4, othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack());\n  return equalObjects(object4, other, bitmask, customizer, equalFunc, stack);\n}\nvar _baseIsEqualDeep = baseIsEqualDeep$1;\nvar baseIsEqualDeep = _baseIsEqualDeep, isObjectLike = isObjectLike_1;\nfunction baseIsEqual$1(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual$1, stack);\n}\nvar _baseIsEqual = baseIsEqual$1;\nvar baseIsEqual = _baseIsEqual;\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\nvar isEqual_1 = isEqual;\nvar MapShim = function() {\n  if (typeof Map !== \"undefined\") {\n    return Map;\n  }\n  function getIndex(arr, key2) {\n    var result = -1;\n    arr.some(function(entry, index2) {\n      if (entry[0] === key2) {\n        result = index2;\n        return true;\n      }\n      return false;\n    });\n    return result;\n  }\n  return function() {\n    function class_1() {\n      this.__entries__ = [];\n    }\n    Object.defineProperty(class_1.prototype, \"size\", {\n      get: function() {\n        return this.__entries__.length;\n      },\n      enumerable: true,\n      configurable: true\n    });\n    class_1.prototype.get = function(key2) {\n      var index2 = getIndex(this.__entries__, key2);\n      var entry = this.__entries__[index2];\n      return entry && entry[1];\n    };\n    class_1.prototype.set = function(key2, value) {\n      var index2 = getIndex(this.__entries__, key2);\n      if (~index2) {\n        this.__entries__[index2][1] = value;\n      } else {\n        this.__entries__.push([key2, value]);\n      }\n    };\n    class_1.prototype.delete = function(key2) {\n      var entries = this.__entries__;\n      var index2 = getIndex(entries, key2);\n      if (~index2) {\n        entries.splice(index2, 1);\n      }\n    };\n    class_1.prototype.has = function(key2) {\n      return !!~getIndex(this.__entries__, key2);\n    };\n    class_1.prototype.clear = function() {\n      this.__entries__.splice(0);\n    };\n    class_1.prototype.forEach = function(callback, ctx) {\n      if (ctx === void 0) {\n        ctx = null;\n      }\n      for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\n        var entry = _a[_i];\n        callback.call(ctx, entry[1], entry[0]);\n      }\n    };\n    return class_1;\n  }();\n}();\nvar isBrowser = typeof window !== \"undefined\" && typeof document !== \"undefined\" && window.document === document;\nvar global$1 = function() {\n  if (typeof global !== \"undefined\" && global.Math === Math) {\n    return global;\n  }\n  if (typeof self !== \"undefined\" && self.Math === Math) {\n    return self;\n  }\n  if (typeof window !== \"undefined\" && window.Math === Math) {\n    return window;\n  }\n  return Function(\"return this\")();\n}();\nvar requestAnimationFrame$1 = function() {\n  if (typeof requestAnimationFrame === \"function\") {\n    return requestAnimationFrame.bind(global$1);\n  }\n  return function(callback) {\n    return setTimeout(function() {\n      return callback(Date.now());\n    }, 1e3 / 60);\n  };\n}();\nvar trailingTimeout = 2;\nfunction throttle(callback, delay) {\n  var leadingCall = false, trailingCall = false, lastCallTime = 0;\n  function resolvePending() {\n    if (leadingCall) {\n      leadingCall = false;\n      callback();\n    }\n    if (trailingCall) {\n      proxy();\n    }\n  }\n  function timeoutCallback() {\n    requestAnimationFrame$1(resolvePending);\n  }\n  function proxy() {\n    var timeStamp = Date.now();\n    if (leadingCall) {\n      if (timeStamp - lastCallTime < trailingTimeout) {\n        return;\n      }\n      trailingCall = true;\n    } else {\n      leadingCall = true;\n      trailingCall = false;\n      setTimeout(timeoutCallback, delay);\n    }\n    lastCallTime = timeStamp;\n  }\n  return proxy;\n}\nvar REFRESH_DELAY = 20;\nvar transitionKeys = [\"top\", \"right\", \"bottom\", \"left\", \"width\", \"height\", \"size\", \"weight\"];\nvar mutationObserverSupported = typeof MutationObserver !== \"undefined\";\nvar ResizeObserverController = function() {\n  function ResizeObserverController2() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n  }\n  ResizeObserverController2.prototype.addObserver = function(observer) {\n    if (!~this.observers_.indexOf(observer)) {\n      this.observers_.push(observer);\n    }\n    if (!this.connected_) {\n      this.connect_();\n    }\n  };\n  ResizeObserverController2.prototype.removeObserver = function(observer) {\n    var observers2 = this.observers_;\n    var index2 = observers2.indexOf(observer);\n    if (~index2) {\n      observers2.splice(index2, 1);\n    }\n    if (!observers2.length && this.connected_) {\n      this.disconnect_();\n    }\n  };\n  ResizeObserverController2.prototype.refresh = function() {\n    var changesDetected = this.updateObservers_();\n    if (changesDetected) {\n      this.refresh();\n    }\n  };\n  ResizeObserverController2.prototype.updateObservers_ = function() {\n    var activeObservers = this.observers_.filter(function(observer) {\n      return observer.gatherActive(), observer.hasActive();\n    });\n    activeObservers.forEach(function(observer) {\n      return observer.broadcastActive();\n    });\n    return activeObservers.length > 0;\n  };\n  ResizeObserverController2.prototype.connect_ = function() {\n    if (!isBrowser || this.connected_) {\n      return;\n    }\n    document.addEventListener(\"transitionend\", this.onTransitionEnd_);\n    window.addEventListener(\"resize\", this.refresh);\n    if (mutationObserverSupported) {\n      this.mutationsObserver_ = new MutationObserver(this.refresh);\n      this.mutationsObserver_.observe(document, {\n        attributes: true,\n        childList: true,\n        characterData: true,\n        subtree: true\n      });\n    } else {\n      document.addEventListener(\"DOMSubtreeModified\", this.refresh);\n      this.mutationEventsAdded_ = true;\n    }\n    this.connected_ = true;\n  };\n  ResizeObserverController2.prototype.disconnect_ = function() {\n    if (!isBrowser || !this.connected_) {\n      return;\n    }\n    document.removeEventListener(\"transitionend\", this.onTransitionEnd_);\n    window.removeEventListener(\"resize\", this.refresh);\n    if (this.mutationsObserver_) {\n      this.mutationsObserver_.disconnect();\n    }\n    if (this.mutationEventsAdded_) {\n      document.removeEventListener(\"DOMSubtreeModified\", this.refresh);\n    }\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n  };\n  ResizeObserverController2.prototype.onTransitionEnd_ = function(_a) {\n    var _b = _a.propertyName, propertyName = _b === void 0 ? \"\" : _b;\n    var isReflowProperty = transitionKeys.some(function(key2) {\n      return !!~propertyName.indexOf(key2);\n    });\n    if (isReflowProperty) {\n      this.refresh();\n    }\n  };\n  ResizeObserverController2.getInstance = function() {\n    if (!this.instance_) {\n      this.instance_ = new ResizeObserverController2();\n    }\n    return this.instance_;\n  };\n  ResizeObserverController2.instance_ = null;\n  return ResizeObserverController2;\n}();\nvar defineConfigurable = function(target, props) {\n  for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\n    var key2 = _a[_i];\n    Object.defineProperty(target, key2, {\n      value: props[key2],\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n  }\n  return target;\n};\nvar getWindowOf = function(target) {\n  var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n  return ownerGlobal || global$1;\n};\nvar emptyRect = createRectInit(0, 0, 0, 0);\nfunction toFloat(value) {\n  return parseFloat(value) || 0;\n}\nfunction getBordersSize(styles2) {\n  var positions = [];\n  for (var _i = 1; _i < arguments.length; _i++) {\n    positions[_i - 1] = arguments[_i];\n  }\n  return positions.reduce(function(size, position) {\n    var value = styles2[\"border-\" + position + \"-width\"];\n    return size + toFloat(value);\n  }, 0);\n}\nfunction getPaddings(styles2) {\n  var positions = [\"top\", \"right\", \"bottom\", \"left\"];\n  var paddings = {};\n  for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\n    var position = positions_1[_i];\n    var value = styles2[\"padding-\" + position];\n    paddings[position] = toFloat(value);\n  }\n  return paddings;\n}\nfunction getSVGContentRect(target) {\n  var bbox = target.getBBox();\n  return createRectInit(0, 0, bbox.width, bbox.height);\n}\nfunction getHTMLElementContentRect(target) {\n  var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\n  if (!clientWidth && !clientHeight) {\n    return emptyRect;\n  }\n  var styles2 = getWindowOf(target).getComputedStyle(target);\n  var paddings = getPaddings(styles2);\n  var horizPad = paddings.left + paddings.right;\n  var vertPad = paddings.top + paddings.bottom;\n  var width = toFloat(styles2.width), height = toFloat(styles2.height);\n  if (styles2.boxSizing === \"border-box\") {\n    if (Math.round(width + horizPad) !== clientWidth) {\n      width -= getBordersSize(styles2, \"left\", \"right\") + horizPad;\n    }\n    if (Math.round(height + vertPad) !== clientHeight) {\n      height -= getBordersSize(styles2, \"top\", \"bottom\") + vertPad;\n    }\n  }\n  if (!isDocumentElement(target)) {\n    var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n    var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n    if (Math.abs(vertScrollbar) !== 1) {\n      width -= vertScrollbar;\n    }\n    if (Math.abs(horizScrollbar) !== 1) {\n      height -= horizScrollbar;\n    }\n  }\n  return createRectInit(paddings.left, paddings.top, width, height);\n}\nvar isSVGGraphicsElement = function() {\n  if (typeof SVGGraphicsElement !== \"undefined\") {\n    return function(target) {\n      return target instanceof getWindowOf(target).SVGGraphicsElement;\n    };\n  }\n  return function(target) {\n    return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === \"function\";\n  };\n}();\nfunction isDocumentElement(target) {\n  return target === getWindowOf(target).document.documentElement;\n}\nfunction getContentRect(target) {\n  if (!isBrowser) {\n    return emptyRect;\n  }\n  if (isSVGGraphicsElement(target)) {\n    return getSVGContentRect(target);\n  }\n  return getHTMLElementContentRect(target);\n}\nfunction createReadOnlyRect(_a) {\n  var x2 = _a.x, y2 = _a.y, width = _a.width, height = _a.height;\n  var Constr = typeof DOMRectReadOnly !== \"undefined\" ? DOMRectReadOnly : Object;\n  var rect = Object.create(Constr.prototype);\n  defineConfigurable(rect, {\n    x: x2,\n    y: y2,\n    width,\n    height,\n    top: y2,\n    right: x2 + width,\n    bottom: height + y2,\n    left: x2\n  });\n  return rect;\n}\nfunction createRectInit(x2, y2, width, height) {\n  return { x: x2, y: y2, width, height };\n}\nvar ResizeObservation = function() {\n  function ResizeObservation2(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n    this.target = target;\n  }\n  ResizeObservation2.prototype.isActive = function() {\n    var rect = getContentRect(this.target);\n    this.contentRect_ = rect;\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n  };\n  ResizeObservation2.prototype.broadcastRect = function() {\n    var rect = this.contentRect_;\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n    return rect;\n  };\n  return ResizeObservation2;\n}();\nvar ResizeObserverEntry = function() {\n  function ResizeObserverEntry2(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n    defineConfigurable(this, { target, contentRect });\n  }\n  return ResizeObserverEntry2;\n}();\nvar ResizeObserverSPI = function() {\n  function ResizeObserverSPI2(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n    if (typeof callback !== \"function\") {\n      throw new TypeError(\"The callback provided as parameter 1 is not a function.\");\n    }\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n  }\n  ResizeObserverSPI2.prototype.observe = function(target) {\n    if (!arguments.length) {\n      throw new TypeError(\"1 argument required, but only 0 present.\");\n    }\n    if (typeof Element === \"undefined\" || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    if (observations.has(target)) {\n      return;\n    }\n    observations.set(target, new ResizeObservation(target));\n    this.controller_.addObserver(this);\n    this.controller_.refresh();\n  };\n  ResizeObserverSPI2.prototype.unobserve = function(target) {\n    if (!arguments.length) {\n      throw new TypeError(\"1 argument required, but only 0 present.\");\n    }\n    if (typeof Element === \"undefined\" || !(Element instanceof Object)) {\n      return;\n    }\n    if (!(target instanceof getWindowOf(target).Element)) {\n      throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n    var observations = this.observations_;\n    if (!observations.has(target)) {\n      return;\n    }\n    observations.delete(target);\n    if (!observations.size) {\n      this.controller_.removeObserver(this);\n    }\n  };\n  ResizeObserverSPI2.prototype.disconnect = function() {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n  };\n  ResizeObserverSPI2.prototype.gatherActive = function() {\n    var _this = this;\n    this.clearActive();\n    this.observations_.forEach(function(observation) {\n      if (observation.isActive()) {\n        _this.activeObservations_.push(observation);\n      }\n    });\n  };\n  ResizeObserverSPI2.prototype.broadcastActive = function() {\n    if (!this.hasActive()) {\n      return;\n    }\n    var ctx = this.callbackCtx_;\n    var entries = this.activeObservations_.map(function(observation) {\n      return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n  };\n  ResizeObserverSPI2.prototype.clearActive = function() {\n    this.activeObservations_.splice(0);\n  };\n  ResizeObserverSPI2.prototype.hasActive = function() {\n    return this.activeObservations_.length > 0;\n  };\n  return ResizeObserverSPI2;\n}();\nvar observers = typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : new MapShim();\nvar ResizeObserver$1 = function() {\n  function ResizeObserver2(callback) {\n    if (!(this instanceof ResizeObserver2)) {\n      throw new TypeError(\"Cannot call a class as a function.\");\n    }\n    if (!arguments.length) {\n      throw new TypeError(\"1 argument required, but only 0 present.\");\n    }\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n    observers.set(this, observer);\n  }\n  return ResizeObserver2;\n}();\n[\n  \"observe\",\n  \"unobserve\",\n  \"disconnect\"\n].forEach(function(method4) {\n  ResizeObserver$1.prototype[method4] = function() {\n    var _a;\n    return (_a = observers.get(this))[method4].apply(_a, arguments);\n  };\n});\nvar index = function() {\n  if (typeof global$1.ResizeObserver !== \"undefined\") {\n    return global$1.ResizeObserver;\n  }\n  return ResizeObserver$1;\n}();\nfunction isSamePoint(prev, next) {\n  if (prev === next)\n    return true;\n  if (!prev || !next)\n    return false;\n  if (\"pageX\" in next && \"pageY\" in next) {\n    return prev.pageX === next.pageX && prev.pageY === next.pageY;\n  }\n  if (\"clientX\" in next && \"clientY\" in next) {\n    return prev.clientX === next.clientX && prev.clientY === next.clientY;\n  }\n  return false;\n}\nfunction restoreFocus(activeElement, container) {\n  if (activeElement !== document.activeElement && contains(container, activeElement) && typeof activeElement.focus === \"function\") {\n    activeElement.focus();\n  }\n}\nfunction monitorResize(element, callback) {\n  var prevWidth = null;\n  var prevHeight = null;\n  function onResize2(_ref) {\n    var _ref2 = _slicedToArray(_ref, 1), target = _ref2[0].target;\n    if (!document.documentElement.contains(target))\n      return;\n    var _target$getBoundingCl = target.getBoundingClientRect(), width = _target$getBoundingCl.width, height = _target$getBoundingCl.height;\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n    if (prevWidth !== fixedWidth || prevHeight !== fixedHeight) {\n      Promise.resolve().then(function() {\n        callback({\n          width: fixedWidth,\n          height: fixedHeight\n        });\n      });\n    }\n    prevWidth = fixedWidth;\n    prevHeight = fixedHeight;\n  }\n  var resizeObserver2 = new index(onResize2);\n  if (element) {\n    resizeObserver2.observe(element);\n  }\n  return function() {\n    resizeObserver2.disconnect();\n  };\n}\nvar useBuffer = function(callback, buffer) {\n  var calledRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(false);\n  var timeoutRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  function cancelTrigger() {\n    window.clearTimeout(timeoutRef.current);\n  }\n  function trigger(force) {\n    if (!calledRef.current || force === true) {\n      if (callback() === false) {\n        return;\n      }\n      calledRef.current = true;\n      cancelTrigger();\n      timeoutRef.current = window.setTimeout(function() {\n        calledRef.current = false;\n      }, buffer);\n    } else {\n      cancelTrigger();\n      timeoutRef.current = window.setTimeout(function() {\n        calledRef.current = false;\n        trigger();\n      }, buffer);\n    }\n  }\n  return [trigger, function() {\n    calledRef.current = false;\n    cancelTrigger();\n  }];\n};\nfunction getElement(func) {\n  if (typeof func !== \"function\")\n    return null;\n  return func();\n}\nfunction getPoint(point) {\n  if (_typeof$1(point) !== \"object\" || !point)\n    return null;\n  return point;\n}\nvar Align = function Align2(_ref, ref) {\n  var children = _ref.children, disabled = _ref.disabled, target = _ref.target, align = _ref.align, onAlign = _ref.onAlign, monitorWindowResize = _ref.monitorWindowResize, _ref$monitorBufferTim = _ref.monitorBufferTime, monitorBufferTime = _ref$monitorBufferTim === void 0 ? 0 : _ref$monitorBufferTim;\n  var cacheRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef({});\n  var nodeRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef();\n  var childNode = react__WEBPACK_IMPORTED_MODULE_0___default().Children.only(children);\n  var forceAlignPropsRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef({});\n  forceAlignPropsRef.current.disabled = disabled;\n  forceAlignPropsRef.current.target = target;\n  forceAlignPropsRef.current.align = align;\n  forceAlignPropsRef.current.onAlign = onAlign;\n  var _useBuffer = useBuffer(function() {\n    var _forceAlignPropsRef$c = forceAlignPropsRef.current, latestDisabled = _forceAlignPropsRef$c.disabled, latestTarget = _forceAlignPropsRef$c.target, latestAlign = _forceAlignPropsRef$c.align, latestOnAlign = _forceAlignPropsRef$c.onAlign;\n    if (!latestDisabled && latestTarget) {\n      var source = nodeRef.current;\n      var result;\n      var element = getElement(latestTarget);\n      var point = getPoint(latestTarget);\n      cacheRef.current.element = element;\n      cacheRef.current.point = point;\n      cacheRef.current.align = latestAlign;\n      var _document = document, activeElement = _document.activeElement;\n      if (element && isVisible(element)) {\n        result = alignElement(source, element, latestAlign);\n      } else if (point) {\n        result = alignPoint(source, point, latestAlign);\n      }\n      restoreFocus(activeElement, source);\n      if (latestOnAlign && result) {\n        latestOnAlign(source, result);\n      }\n      return true;\n    }\n    return false;\n  }, monitorBufferTime), _useBuffer2 = _slicedToArray(_useBuffer, 2), _forceAlign = _useBuffer2[0], cancelForceAlign = _useBuffer2[1];\n  var resizeMonitor = react__WEBPACK_IMPORTED_MODULE_0___default().useRef({\n    cancel: function cancel2() {\n    }\n  });\n  var sourceResizeMonitor = react__WEBPACK_IMPORTED_MODULE_0___default().useRef({\n    cancel: function cancel2() {\n    }\n  });\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n    var element = getElement(target);\n    var point = getPoint(target);\n    if (nodeRef.current !== sourceResizeMonitor.current.element) {\n      sourceResizeMonitor.current.cancel();\n      sourceResizeMonitor.current.element = nodeRef.current;\n      sourceResizeMonitor.current.cancel = monitorResize(nodeRef.current, _forceAlign);\n    }\n    if (cacheRef.current.element !== element || !isSamePoint(cacheRef.current.point, point) || !isEqual_1(cacheRef.current.align, align)) {\n      _forceAlign();\n      if (resizeMonitor.current.element !== element) {\n        resizeMonitor.current.cancel();\n        resizeMonitor.current.element = element;\n        resizeMonitor.current.cancel = monitorResize(element, _forceAlign);\n      }\n    }\n  });\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n    if (!disabled) {\n      _forceAlign();\n    } else {\n      cancelForceAlign();\n    }\n  }, [disabled]);\n  var winResizeRef = react__WEBPACK_IMPORTED_MODULE_0___default().useRef(null);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n    if (monitorWindowResize) {\n      if (!winResizeRef.current) {\n        winResizeRef.current = addEventListenerWrap(window, \"resize\", _forceAlign);\n      }\n    } else if (winResizeRef.current) {\n      winResizeRef.current.remove();\n      winResizeRef.current = null;\n    }\n  }, [monitorWindowResize]);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useEffect(function() {\n    return function() {\n      resizeMonitor.current.cancel();\n      sourceResizeMonitor.current.cancel();\n      if (winResizeRef.current)\n        winResizeRef.current.remove();\n      cancelForceAlign();\n    };\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_0___default().useImperativeHandle(ref, function() {\n    return {\n      forceAlign: function forceAlign() {\n        return _forceAlign(true);\n      }\n    };\n  });\n  if (/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().isValidElement(childNode)) {\n    childNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().cloneElement(childNode, {\n      ref: composeRef(childNode.ref, nodeRef)\n    });\n  }\n  return childNode;\n};\nvar RcAlign = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().forwardRef(Align);\nRcAlign.displayName = \"Align\";\nvar StatusQueue = [\"measure\", \"align\", null, \"motion\"];\nvar useVisibleStatus = function(visible, doMeasure) {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null), _useState2 = _slicedToArray(_useState, 2), status = _useState2[0], setInternalStatus = _useState2[1];\n  var rafRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var destroyRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n  function setStatus(nextStatus) {\n    if (!destroyRef.current) {\n      setInternalStatus(nextStatus);\n    }\n  }\n  function cancelRaf() {\n    wrapperRaf$1.cancel(rafRef.current);\n  }\n  function goNextStatus(callback) {\n    cancelRaf();\n    rafRef.current = wrapperRaf$1(function() {\n      setStatus(function(prev) {\n        switch (status) {\n          case \"align\":\n            return \"motion\";\n          case \"motion\":\n            return \"stable\";\n        }\n        return prev;\n      });\n      callback === null || callback === void 0 ? void 0 : callback();\n    });\n  }\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    setStatus(\"measure\");\n  }, [visible]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    switch (status) {\n      case \"measure\":\n        doMeasure();\n        break;\n    }\n    if (status) {\n      rafRef.current = wrapperRaf$1(/* @__PURE__ */ _asyncToGenerator(/* @__PURE__ */ regenerator.mark(function _callee() {\n        var index2, nextStatus;\n        return regenerator.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                index2 = StatusQueue.indexOf(status);\n                nextStatus = StatusQueue[index2 + 1];\n                if (nextStatus && index2 !== -1) {\n                  setStatus(nextStatus);\n                }\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })));\n    }\n  }, [status]);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    return function() {\n      destroyRef.current = true;\n      cancelRaf();\n    };\n  }, []);\n  return [status, goNextStatus];\n};\nvar useStretchStyle = function(stretch) {\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState({\n    width: 0,\n    height: 0\n  }), _React$useState2 = _slicedToArray(_React$useState, 2), targetSize = _React$useState2[0], setTargetSize = _React$useState2[1];\n  function measureStretch(element) {\n    setTargetSize({\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    });\n  }\n  var style2 = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    var sizeStyle = {};\n    if (stretch) {\n      var width = targetSize.width, height = targetSize.height;\n      if (stretch.indexOf(\"height\") !== -1 && height) {\n        sizeStyle.height = height;\n      } else if (stretch.indexOf(\"minHeight\") !== -1 && height) {\n        sizeStyle.minHeight = height;\n      }\n      if (stretch.indexOf(\"width\") !== -1 && width) {\n        sizeStyle.width = width;\n      } else if (stretch.indexOf(\"minWidth\") !== -1 && width) {\n        sizeStyle.minWidth = width;\n      }\n    }\n    return sizeStyle;\n  }, [stretch, targetSize]);\n  return [style2, measureStretch];\n};\nvar PopupInner = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(props, ref) {\n  var visible = props.visible, prefixCls = props.prefixCls, className = props.className, style2 = props.style, children = props.children, zIndex = props.zIndex, stretch = props.stretch, destroyPopupOnHide = props.destroyPopupOnHide, forceRender = props.forceRender, align = props.align, point = props.point, getRootDomNode = props.getRootDomNode, getClassNameFromAlign = props.getClassNameFromAlign, onAlign = props.onAlign, onMouseEnter = props.onMouseEnter, onMouseLeave = props.onMouseLeave, onMouseDown = props.onMouseDown, onTouchStart = props.onTouchStart;\n  var alignRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var elementRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(), _useState2 = _slicedToArray(_useState, 2), alignedClassName = _useState2[0], setAlignedClassName = _useState2[1];\n  var _useStretchStyle = useStretchStyle(stretch), _useStretchStyle2 = _slicedToArray(_useStretchStyle, 2), stretchStyle = _useStretchStyle2[0], measureStretchStyle = _useStretchStyle2[1];\n  function doMeasure() {\n    if (stretch) {\n      measureStretchStyle(getRootDomNode());\n    }\n  }\n  var _useVisibleStatus = useVisibleStatus(visible, doMeasure), _useVisibleStatus2 = _slicedToArray(_useVisibleStatus, 2), status = _useVisibleStatus2[0], goNextStatus = _useVisibleStatus2[1];\n  var prepareResolveRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n  function getAlignTarget() {\n    if (point) {\n      return point;\n    }\n    return getRootDomNode;\n  }\n  function forceAlign() {\n    var _alignRef$current;\n    (_alignRef$current = alignRef.current) === null || _alignRef$current === void 0 ? void 0 : _alignRef$current.forceAlign();\n  }\n  function onInternalAlign(popupDomNode, matchAlign) {\n    var nextAlignedClassName = getClassNameFromAlign(matchAlign);\n    if (alignedClassName !== nextAlignedClassName) {\n      setAlignedClassName(nextAlignedClassName);\n    }\n    if (status === \"align\") {\n      if (alignedClassName !== nextAlignedClassName) {\n        Promise.resolve().then(function() {\n          forceAlign();\n        });\n      } else {\n        goNextStatus(function() {\n          var _prepareResolveRef$cu;\n          (_prepareResolveRef$cu = prepareResolveRef.current) === null || _prepareResolveRef$cu === void 0 ? void 0 : _prepareResolveRef$cu.call(prepareResolveRef);\n        });\n      }\n      onAlign === null || onAlign === void 0 ? void 0 : onAlign(popupDomNode, matchAlign);\n    }\n  }\n  var motion = _objectSpread2$1({}, getMotion(props));\n  [\"onAppearEnd\", \"onEnterEnd\", \"onLeaveEnd\"].forEach(function(eventName) {\n    var originHandler = motion[eventName];\n    motion[eventName] = function(element, event) {\n      goNextStatus();\n      return originHandler === null || originHandler === void 0 ? void 0 : originHandler(element, event);\n    };\n  });\n  function onShowPrepare() {\n    return new Promise(function(resolve) {\n      prepareResolveRef.current = resolve;\n    });\n  }\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    if (!motion.motionName && status === \"motion\") {\n      goNextStatus();\n    }\n  }, [motion.motionName, status]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, function() {\n    return {\n      forceAlign,\n      getElement: function getElement2() {\n        return elementRef.current;\n      }\n    };\n  });\n  var mergedStyle = _objectSpread2$1(_objectSpread2$1({}, stretchStyle), {}, {\n    zIndex,\n    opacity: status === \"motion\" || status === \"stable\" || !visible ? void 0 : 0,\n    pointerEvents: status === \"stable\" ? void 0 : \"none\"\n  }, style2);\n  var alignDisabled = true;\n  if ((align === null || align === void 0 ? void 0 : align.points) && (status === \"align\" || status === \"stable\")) {\n    alignDisabled = false;\n  }\n  var childNode = children;\n  if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1) {\n    childNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children);\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CSSMotion, _extends$1({\n    visible,\n    ref: elementRef,\n    leavedClassName: \"\".concat(prefixCls, \"-hidden\")\n  }, motion, {\n    onAppearPrepare: onShowPrepare,\n    onEnterPrepare: onShowPrepare,\n    removeOnLeave: destroyPopupOnHide,\n    forceRender\n  }), function(_ref, motionRef) {\n    var motionClassName = _ref.className, motionStyle = _ref.style;\n    var mergedClassName = classNames(prefixCls, className, alignedClassName, motionClassName);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(RcAlign, {\n      target: getAlignTarget(),\n      key: \"popup\",\n      ref: alignRef,\n      monitorWindowResize: true,\n      disabled: alignDisabled,\n      align,\n      onAlign: onInternalAlign\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      ref: motionRef,\n      className: mergedClassName,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseDownCapture: onMouseDown,\n      onTouchStartCapture: onTouchStart,\n      style: _objectSpread2$1(_objectSpread2$1({}, motionStyle), mergedStyle)\n    }, childNode));\n  });\n});\nPopupInner.displayName = \"PopupInner\";\nvar MobilePopupInner = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(props, ref) {\n  var prefixCls = props.prefixCls, visible = props.visible, zIndex = props.zIndex, children = props.children, _props$mobile = props.mobile;\n  _props$mobile = _props$mobile === void 0 ? {} : _props$mobile;\n  var popupClassName = _props$mobile.popupClassName, popupStyle = _props$mobile.popupStyle, _props$mobile$popupMo = _props$mobile.popupMotion, popupMotion = _props$mobile$popupMo === void 0 ? {} : _props$mobile$popupMo, popupRender = _props$mobile.popupRender;\n  var elementRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, function() {\n    return {\n      forceAlign: function forceAlign() {\n      },\n      getElement: function getElement2() {\n        return elementRef.current;\n      }\n    };\n  });\n  var mergedStyle = _objectSpread2$1({\n    zIndex\n  }, popupStyle);\n  var childNode = children;\n  if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) > 1) {\n    childNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-content\")\n    }, children);\n  }\n  if (popupRender) {\n    childNode = popupRender(childNode);\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CSSMotion, _extends$1({\n    visible,\n    ref: elementRef,\n    removeOnLeave: true\n  }, popupMotion), function(_ref, motionRef) {\n    var motionClassName = _ref.className, motionStyle = _ref.style;\n    var mergedClassName = classNames(prefixCls, popupClassName, motionClassName);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      ref: motionRef,\n      className: mergedClassName,\n      style: _objectSpread2$1(_objectSpread2$1({}, motionStyle), mergedStyle)\n    }, childNode);\n  });\n});\nMobilePopupInner.displayName = \"MobilePopupInner\";\nvar _excluded = [\"visible\", \"mobile\"];\nvar Popup = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(_ref, ref) {\n  var visible = _ref.visible, mobile = _ref.mobile, props = _objectWithoutProperties(_ref, _excluded);\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(visible), _useState2 = _slicedToArray(_useState, 2), innerVisible = _useState2[0], serInnerVisible = _useState2[1];\n  var _useState3 = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), _useState4 = _slicedToArray(_useState3, 2), inMobile = _useState4[0], setInMobile = _useState4[1];\n  var cloneProps = _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    visible: innerVisible\n  });\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(function() {\n    serInnerVisible(visible);\n    if (visible && mobile) {\n      setInMobile(isMobile());\n    }\n  }, [visible, mobile]);\n  var popupNode = inMobile ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(MobilePopupInner, _extends$1({}, cloneProps, {\n    mobile,\n    ref\n  })) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PopupInner, _extends$1({}, cloneProps, {\n    ref\n  }));\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Mask, cloneProps), popupNode);\n});\nPopup.displayName = \"Popup\";\nvar TriggerContext = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nfunction noop() {\n}\nfunction returnEmptyString() {\n  return \"\";\n}\nfunction returnDocument(element) {\n  if (element) {\n    return element.ownerDocument;\n  }\n  return window.document;\n}\nvar ALL_HANDLERS = [\"onClick\", \"onMouseDown\", \"onTouchStart\", \"onMouseEnter\", \"onMouseLeave\", \"onFocus\", \"onBlur\", \"onContextMenu\"];\nfunction generateTrigger(PortalComponent) {\n  var Trigger2 = /* @__PURE__ */ function(_React$Component) {\n    _inherits(Trigger3, _React$Component);\n    var _super = _createSuper(Trigger3);\n    function Trigger3(props) {\n      var _this;\n      _classCallCheck(this, Trigger3);\n      _this = _super.call(this, props);\n      _this.popupRef = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n      _this.triggerRef = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n      _this.attachId = void 0;\n      _this.clickOutsideHandler = void 0;\n      _this.touchOutsideHandler = void 0;\n      _this.contextMenuOutsideHandler1 = void 0;\n      _this.contextMenuOutsideHandler2 = void 0;\n      _this.mouseDownTimeout = void 0;\n      _this.focusTime = void 0;\n      _this.preClickTime = void 0;\n      _this.preTouchTime = void 0;\n      _this.delayTimer = void 0;\n      _this.hasPopupMouseDown = void 0;\n      _this.onMouseEnter = function(e2) {\n        var mouseEnterDelay = _this.props.mouseEnterDelay;\n        _this.fireEvents(\"onMouseEnter\", e2);\n        _this.delaySetPopupVisible(true, mouseEnterDelay, mouseEnterDelay ? null : e2);\n      };\n      _this.onMouseMove = function(e2) {\n        _this.fireEvents(\"onMouseMove\", e2);\n        _this.setPoint(e2);\n      };\n      _this.onMouseLeave = function(e2) {\n        _this.fireEvents(\"onMouseLeave\", e2);\n        _this.delaySetPopupVisible(false, _this.props.mouseLeaveDelay);\n      };\n      _this.onPopupMouseEnter = function() {\n        _this.clearDelayTimer();\n      };\n      _this.onPopupMouseLeave = function(e2) {\n        var _this$popupRef$curren;\n        if (e2.relatedTarget && !e2.relatedTarget.setTimeout && contains((_this$popupRef$curren = _this.popupRef.current) === null || _this$popupRef$curren === void 0 ? void 0 : _this$popupRef$curren.getElement(), e2.relatedTarget)) {\n          return;\n        }\n        _this.delaySetPopupVisible(false, _this.props.mouseLeaveDelay);\n      };\n      _this.onFocus = function(e2) {\n        _this.fireEvents(\"onFocus\", e2);\n        _this.clearDelayTimer();\n        if (_this.isFocusToShow()) {\n          _this.focusTime = Date.now();\n          _this.delaySetPopupVisible(true, _this.props.focusDelay);\n        }\n      };\n      _this.onMouseDown = function(e2) {\n        _this.fireEvents(\"onMouseDown\", e2);\n        _this.preClickTime = Date.now();\n      };\n      _this.onTouchStart = function(e2) {\n        _this.fireEvents(\"onTouchStart\", e2);\n        _this.preTouchTime = Date.now();\n      };\n      _this.onBlur = function(e2) {\n        _this.fireEvents(\"onBlur\", e2);\n        _this.clearDelayTimer();\n        if (_this.isBlurToHide()) {\n          _this.delaySetPopupVisible(false, _this.props.blurDelay);\n        }\n      };\n      _this.onContextMenu = function(e2) {\n        e2.preventDefault();\n        _this.fireEvents(\"onContextMenu\", e2);\n        _this.setPopupVisible(true, e2);\n      };\n      _this.onContextMenuClose = function() {\n        if (_this.isContextMenuToShow()) {\n          _this.close();\n        }\n      };\n      _this.onClick = function(event) {\n        _this.fireEvents(\"onClick\", event);\n        if (_this.focusTime) {\n          var preTime;\n          if (_this.preClickTime && _this.preTouchTime) {\n            preTime = Math.min(_this.preClickTime, _this.preTouchTime);\n          } else if (_this.preClickTime) {\n            preTime = _this.preClickTime;\n          } else if (_this.preTouchTime) {\n            preTime = _this.preTouchTime;\n          }\n          if (Math.abs(preTime - _this.focusTime) < 20) {\n            return;\n          }\n          _this.focusTime = 0;\n        }\n        _this.preClickTime = 0;\n        _this.preTouchTime = 0;\n        if (_this.isClickToShow() && (_this.isClickToHide() || _this.isBlurToHide()) && event && event.preventDefault) {\n          event.preventDefault();\n        }\n        var nextVisible = !_this.state.popupVisible;\n        if (_this.isClickToHide() && !nextVisible || nextVisible && _this.isClickToShow()) {\n          _this.setPopupVisible(!_this.state.popupVisible, event);\n        }\n      };\n      _this.onPopupMouseDown = function() {\n        _this.hasPopupMouseDown = true;\n        clearTimeout(_this.mouseDownTimeout);\n        _this.mouseDownTimeout = window.setTimeout(function() {\n          _this.hasPopupMouseDown = false;\n        }, 0);\n        if (_this.context) {\n          var _this$context;\n          (_this$context = _this.context).onPopupMouseDown.apply(_this$context, arguments);\n        }\n      };\n      _this.onDocumentClick = function(event) {\n        if (_this.props.mask && !_this.props.maskClosable) {\n          return;\n        }\n        var target = event.target;\n        var root2 = _this.getRootDomNode();\n        var popupNode = _this.getPopupDomNode();\n        if ((!contains(root2, target) || _this.isContextMenuOnly()) && !contains(popupNode, target) && !_this.hasPopupMouseDown) {\n          _this.close();\n        }\n      };\n      _this.getRootDomNode = function() {\n        var getTriggerDOMNode = _this.props.getTriggerDOMNode;\n        if (getTriggerDOMNode) {\n          return getTriggerDOMNode(_this.triggerRef.current);\n        }\n        try {\n          var domNode = findDOMNode(_this.triggerRef.current);\n          if (domNode) {\n            return domNode;\n          }\n        } catch (err) {\n        }\n        return react_dom__WEBPACK_IMPORTED_MODULE_1___default().findDOMNode(_assertThisInitialized(_this));\n      };\n      _this.getPopupClassNameFromAlign = function(align) {\n        var className = [];\n        var _this$props = _this.props, popupPlacement = _this$props.popupPlacement, builtinPlacements = _this$props.builtinPlacements, prefixCls = _this$props.prefixCls, alignPoint2 = _this$props.alignPoint, getPopupClassNameFromAlign = _this$props.getPopupClassNameFromAlign;\n        if (popupPlacement && builtinPlacements) {\n          className.push(getAlignPopupClassName(builtinPlacements, prefixCls, align, alignPoint2));\n        }\n        if (getPopupClassNameFromAlign) {\n          className.push(getPopupClassNameFromAlign(align));\n        }\n        return className.join(\" \");\n      };\n      _this.getComponent = function() {\n        var _this$props2 = _this.props, prefixCls = _this$props2.prefixCls, destroyPopupOnHide = _this$props2.destroyPopupOnHide, popupClassName = _this$props2.popupClassName, onPopupAlign = _this$props2.onPopupAlign, popupMotion = _this$props2.popupMotion, popupAnimation = _this$props2.popupAnimation, popupTransitionName = _this$props2.popupTransitionName, popupStyle = _this$props2.popupStyle, mask = _this$props2.mask, maskAnimation = _this$props2.maskAnimation, maskTransitionName = _this$props2.maskTransitionName, maskMotion = _this$props2.maskMotion, zIndex = _this$props2.zIndex, popup = _this$props2.popup, stretch = _this$props2.stretch, alignPoint2 = _this$props2.alignPoint, mobile = _this$props2.mobile, forceRender = _this$props2.forceRender;\n        var _this$state = _this.state, popupVisible = _this$state.popupVisible, point = _this$state.point;\n        var align = _this.getPopupAlign();\n        var mouseProps = {};\n        if (_this.isMouseEnterToShow()) {\n          mouseProps.onMouseEnter = _this.onPopupMouseEnter;\n        }\n        if (_this.isMouseLeaveToHide()) {\n          mouseProps.onMouseLeave = _this.onPopupMouseLeave;\n        }\n        mouseProps.onMouseDown = _this.onPopupMouseDown;\n        mouseProps.onTouchStart = _this.onPopupMouseDown;\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Popup, _extends$1({\n          prefixCls,\n          destroyPopupOnHide,\n          visible: popupVisible,\n          point: alignPoint2 && point,\n          className: popupClassName,\n          align,\n          onAlign: onPopupAlign,\n          animation: popupAnimation,\n          getClassNameFromAlign: _this.getPopupClassNameFromAlign\n        }, mouseProps, {\n          stretch,\n          getRootDomNode: _this.getRootDomNode,\n          style: popupStyle,\n          mask,\n          zIndex,\n          transitionName: popupTransitionName,\n          maskAnimation,\n          maskTransitionName,\n          maskMotion,\n          ref: _this.popupRef,\n          motion: popupMotion,\n          mobile,\n          forceRender\n        }), typeof popup === \"function\" ? popup() : popup);\n      };\n      _this.attachParent = function(popupContainer) {\n        wrapperRaf$1.cancel(_this.attachId);\n        var _this$props3 = _this.props, getPopupContainer = _this$props3.getPopupContainer, getDocument2 = _this$props3.getDocument;\n        var domNode = _this.getRootDomNode();\n        var mountNode;\n        if (!getPopupContainer) {\n          mountNode = getDocument2(_this.getRootDomNode()).body;\n        } else if (domNode || getPopupContainer.length === 0) {\n          mountNode = getPopupContainer(domNode);\n        }\n        if (mountNode) {\n          mountNode.appendChild(popupContainer);\n        } else {\n          _this.attachId = wrapperRaf$1(function() {\n            _this.attachParent(popupContainer);\n          });\n        }\n      };\n      _this.getContainer = function() {\n        var getDocument2 = _this.props.getDocument;\n        var popupContainer = getDocument2(_this.getRootDomNode()).createElement(\"div\");\n        popupContainer.style.position = \"absolute\";\n        popupContainer.style.top = \"0\";\n        popupContainer.style.left = \"0\";\n        popupContainer.style.width = \"100%\";\n        _this.attachParent(popupContainer);\n        return popupContainer;\n      };\n      _this.setPoint = function(point) {\n        var alignPoint2 = _this.props.alignPoint;\n        if (!alignPoint2 || !point)\n          return;\n        _this.setState({\n          point: {\n            pageX: point.pageX,\n            pageY: point.pageY\n          }\n        });\n      };\n      _this.handlePortalUpdate = function() {\n        if (_this.state.prevPopupVisible !== _this.state.popupVisible) {\n          _this.props.afterPopupVisibleChange(_this.state.popupVisible);\n        }\n      };\n      _this.triggerContextValue = {\n        onPopupMouseDown: _this.onPopupMouseDown\n      };\n      var _popupVisible;\n      if (\"popupVisible\" in props) {\n        _popupVisible = !!props.popupVisible;\n      } else {\n        _popupVisible = !!props.defaultPopupVisible;\n      }\n      _this.state = {\n        prevPopupVisible: _popupVisible,\n        popupVisible: _popupVisible\n      };\n      ALL_HANDLERS.forEach(function(h) {\n        _this[\"fire\".concat(h)] = function(e2) {\n          _this.fireEvents(h, e2);\n        };\n      });\n      return _this;\n    }\n    _createClass(Trigger3, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.componentDidUpdate();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        var props = this.props;\n        var state = this.state;\n        if (state.popupVisible) {\n          var currentDocument;\n          if (!this.clickOutsideHandler && (this.isClickToHide() || this.isContextMenuToShow())) {\n            currentDocument = props.getDocument(this.getRootDomNode());\n            this.clickOutsideHandler = addEventListenerWrap(currentDocument, \"mousedown\", this.onDocumentClick);\n          }\n          if (!this.touchOutsideHandler) {\n            currentDocument = currentDocument || props.getDocument(this.getRootDomNode());\n            this.touchOutsideHandler = addEventListenerWrap(currentDocument, \"touchstart\", this.onDocumentClick);\n          }\n          if (!this.contextMenuOutsideHandler1 && this.isContextMenuToShow()) {\n            currentDocument = currentDocument || props.getDocument(this.getRootDomNode());\n            this.contextMenuOutsideHandler1 = addEventListenerWrap(currentDocument, \"scroll\", this.onContextMenuClose);\n          }\n          if (!this.contextMenuOutsideHandler2 && this.isContextMenuToShow()) {\n            this.contextMenuOutsideHandler2 = addEventListenerWrap(window, \"blur\", this.onContextMenuClose);\n          }\n          return;\n        }\n        this.clearOutsideHandler();\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        this.clearDelayTimer();\n        this.clearOutsideHandler();\n        clearTimeout(this.mouseDownTimeout);\n        wrapperRaf$1.cancel(this.attachId);\n      }\n    }, {\n      key: \"getPopupDomNode\",\n      value: function getPopupDomNode() {\n        var _this$popupRef$curren2;\n        return ((_this$popupRef$curren2 = this.popupRef.current) === null || _this$popupRef$curren2 === void 0 ? void 0 : _this$popupRef$curren2.getElement()) || null;\n      }\n    }, {\n      key: \"getPopupAlign\",\n      value: function getPopupAlign() {\n        var props = this.props;\n        var popupPlacement = props.popupPlacement, popupAlign = props.popupAlign, builtinPlacements = props.builtinPlacements;\n        if (popupPlacement && builtinPlacements) {\n          return getAlignFromPlacement(builtinPlacements, popupPlacement, popupAlign);\n        }\n        return popupAlign;\n      }\n    }, {\n      key: \"setPopupVisible\",\n      value: function setPopupVisible(popupVisible, event) {\n        var alignPoint2 = this.props.alignPoint;\n        var prevPopupVisible = this.state.popupVisible;\n        this.clearDelayTimer();\n        if (prevPopupVisible !== popupVisible) {\n          if (!(\"popupVisible\" in this.props)) {\n            this.setState({\n              popupVisible,\n              prevPopupVisible\n            });\n          }\n          this.props.onPopupVisibleChange(popupVisible);\n        }\n        if (alignPoint2 && event && popupVisible) {\n          this.setPoint(event);\n        }\n      }\n    }, {\n      key: \"delaySetPopupVisible\",\n      value: function delaySetPopupVisible(visible, delayS, event) {\n        var _this2 = this;\n        var delay = delayS * 1e3;\n        this.clearDelayTimer();\n        if (delay) {\n          var point = event ? {\n            pageX: event.pageX,\n            pageY: event.pageY\n          } : null;\n          this.delayTimer = window.setTimeout(function() {\n            _this2.setPopupVisible(visible, point);\n            _this2.clearDelayTimer();\n          }, delay);\n        } else {\n          this.setPopupVisible(visible, event);\n        }\n      }\n    }, {\n      key: \"clearDelayTimer\",\n      value: function clearDelayTimer() {\n        if (this.delayTimer) {\n          clearTimeout(this.delayTimer);\n          this.delayTimer = null;\n        }\n      }\n    }, {\n      key: \"clearOutsideHandler\",\n      value: function clearOutsideHandler() {\n        if (this.clickOutsideHandler) {\n          this.clickOutsideHandler.remove();\n          this.clickOutsideHandler = null;\n        }\n        if (this.contextMenuOutsideHandler1) {\n          this.contextMenuOutsideHandler1.remove();\n          this.contextMenuOutsideHandler1 = null;\n        }\n        if (this.contextMenuOutsideHandler2) {\n          this.contextMenuOutsideHandler2.remove();\n          this.contextMenuOutsideHandler2 = null;\n        }\n        if (this.touchOutsideHandler) {\n          this.touchOutsideHandler.remove();\n          this.touchOutsideHandler = null;\n        }\n      }\n    }, {\n      key: \"createTwoChains\",\n      value: function createTwoChains(event) {\n        var childPros = this.props.children.props;\n        var props = this.props;\n        if (childPros[event] && props[event]) {\n          return this[\"fire\".concat(event)];\n        }\n        return childPros[event] || props[event];\n      }\n    }, {\n      key: \"isClickToShow\",\n      value: function isClickToShow() {\n        var _this$props4 = this.props, action = _this$props4.action, showAction = _this$props4.showAction;\n        return action.indexOf(\"click\") !== -1 || showAction.indexOf(\"click\") !== -1;\n      }\n    }, {\n      key: \"isContextMenuOnly\",\n      value: function isContextMenuOnly() {\n        var action = this.props.action;\n        return action === \"contextMenu\" || action.length === 1 && action[0] === \"contextMenu\";\n      }\n    }, {\n      key: \"isContextMenuToShow\",\n      value: function isContextMenuToShow() {\n        var _this$props5 = this.props, action = _this$props5.action, showAction = _this$props5.showAction;\n        return action.indexOf(\"contextMenu\") !== -1 || showAction.indexOf(\"contextMenu\") !== -1;\n      }\n    }, {\n      key: \"isClickToHide\",\n      value: function isClickToHide() {\n        var _this$props6 = this.props, action = _this$props6.action, hideAction = _this$props6.hideAction;\n        return action.indexOf(\"click\") !== -1 || hideAction.indexOf(\"click\") !== -1;\n      }\n    }, {\n      key: \"isMouseEnterToShow\",\n      value: function isMouseEnterToShow() {\n        var _this$props7 = this.props, action = _this$props7.action, showAction = _this$props7.showAction;\n        return action.indexOf(\"hover\") !== -1 || showAction.indexOf(\"mouseEnter\") !== -1;\n      }\n    }, {\n      key: \"isMouseLeaveToHide\",\n      value: function isMouseLeaveToHide() {\n        var _this$props8 = this.props, action = _this$props8.action, hideAction = _this$props8.hideAction;\n        return action.indexOf(\"hover\") !== -1 || hideAction.indexOf(\"mouseLeave\") !== -1;\n      }\n    }, {\n      key: \"isFocusToShow\",\n      value: function isFocusToShow() {\n        var _this$props9 = this.props, action = _this$props9.action, showAction = _this$props9.showAction;\n        return action.indexOf(\"focus\") !== -1 || showAction.indexOf(\"focus\") !== -1;\n      }\n    }, {\n      key: \"isBlurToHide\",\n      value: function isBlurToHide() {\n        var _this$props10 = this.props, action = _this$props10.action, hideAction = _this$props10.hideAction;\n        return action.indexOf(\"focus\") !== -1 || hideAction.indexOf(\"blur\") !== -1;\n      }\n    }, {\n      key: \"forcePopupAlign\",\n      value: function forcePopupAlign() {\n        if (this.state.popupVisible) {\n          var _this$popupRef$curren3;\n          (_this$popupRef$curren3 = this.popupRef.current) === null || _this$popupRef$curren3 === void 0 ? void 0 : _this$popupRef$curren3.forceAlign();\n        }\n      }\n    }, {\n      key: \"fireEvents\",\n      value: function fireEvents(type4, e2) {\n        var childCallback = this.props.children.props[type4];\n        if (childCallback) {\n          childCallback(e2);\n        }\n        var callback = this.props[type4];\n        if (callback) {\n          callback(e2);\n        }\n      }\n    }, {\n      key: \"close\",\n      value: function close2() {\n        this.setPopupVisible(false);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var popupVisible = this.state.popupVisible;\n        var _this$props11 = this.props, children = _this$props11.children, forceRender = _this$props11.forceRender, alignPoint2 = _this$props11.alignPoint, className = _this$props11.className, autoDestroy = _this$props11.autoDestroy;\n        var child = react__WEBPACK_IMPORTED_MODULE_0__.Children.only(children);\n        var newChildProps = {\n          key: \"trigger\"\n        };\n        if (this.isContextMenuToShow()) {\n          newChildProps.onContextMenu = this.onContextMenu;\n        } else {\n          newChildProps.onContextMenu = this.createTwoChains(\"onContextMenu\");\n        }\n        if (this.isClickToHide() || this.isClickToShow()) {\n          newChildProps.onClick = this.onClick;\n          newChildProps.onMouseDown = this.onMouseDown;\n          newChildProps.onTouchStart = this.onTouchStart;\n        } else {\n          newChildProps.onClick = this.createTwoChains(\"onClick\");\n          newChildProps.onMouseDown = this.createTwoChains(\"onMouseDown\");\n          newChildProps.onTouchStart = this.createTwoChains(\"onTouchStart\");\n        }\n        if (this.isMouseEnterToShow()) {\n          newChildProps.onMouseEnter = this.onMouseEnter;\n          if (alignPoint2) {\n            newChildProps.onMouseMove = this.onMouseMove;\n          }\n        } else {\n          newChildProps.onMouseEnter = this.createTwoChains(\"onMouseEnter\");\n        }\n        if (this.isMouseLeaveToHide()) {\n          newChildProps.onMouseLeave = this.onMouseLeave;\n        } else {\n          newChildProps.onMouseLeave = this.createTwoChains(\"onMouseLeave\");\n        }\n        if (this.isFocusToShow() || this.isBlurToHide()) {\n          newChildProps.onFocus = this.onFocus;\n          newChildProps.onBlur = this.onBlur;\n        } else {\n          newChildProps.onFocus = this.createTwoChains(\"onFocus\");\n          newChildProps.onBlur = this.createTwoChains(\"onBlur\");\n        }\n        var childrenClassName = classNames(child && child.props && child.props.className, className);\n        if (childrenClassName) {\n          newChildProps.className = childrenClassName;\n        }\n        var cloneProps = _objectSpread2$1({}, newChildProps);\n        if (supportRef(child)) {\n          cloneProps.ref = composeRef(this.triggerRef, child.ref);\n        }\n        var trigger = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, cloneProps);\n        var portal;\n        if (popupVisible || this.popupRef.current || forceRender) {\n          portal = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(PortalComponent, {\n            key: \"portal\",\n            getContainer: this.getContainer,\n            didUpdate: this.handlePortalUpdate\n          }, this.getComponent());\n        }\n        if (!popupVisible && autoDestroy) {\n          portal = null;\n        }\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TriggerContext.Provider, {\n          value: this.triggerContextValue\n        }, trigger, portal);\n      }\n    }], [{\n      key: \"getDerivedStateFromProps\",\n      value: function getDerivedStateFromProps(_ref, prevState) {\n        var popupVisible = _ref.popupVisible;\n        var newState = {};\n        if (popupVisible !== void 0 && prevState.popupVisible !== popupVisible) {\n          newState.popupVisible = popupVisible;\n          newState.prevPopupVisible = prevState.popupVisible;\n        }\n        return newState;\n      }\n    }]);\n    return Trigger3;\n  }(react__WEBPACK_IMPORTED_MODULE_0__.Component);\n  Trigger2.contextType = TriggerContext;\n  Trigger2.defaultProps = {\n    prefixCls: \"rc-trigger-popup\",\n    getPopupClassNameFromAlign: returnEmptyString,\n    getDocument: returnDocument,\n    onPopupVisibleChange: noop,\n    afterPopupVisibleChange: noop,\n    onPopupAlign: noop,\n    popupClassName: \"\",\n    mouseEnterDelay: 0,\n    mouseLeaveDelay: 0.1,\n    focusDelay: 0,\n    blurDelay: 0.15,\n    popupStyle: {},\n    destroyPopupOnHide: false,\n    popupAlign: {},\n    defaultPopupVisible: false,\n    mask: false,\n    maskClosable: true,\n    action: [],\n    showAction: [],\n    hideAction: [],\n    autoDestroy: false\n  };\n  return Trigger2;\n}\nvar Trigger = generateTrigger(Portal);\nvar autoAdjustOverflow = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar targetOffset$1 = [0, 0];\nvar placements = {\n  left: {\n    points: [\"cr\", \"cl\"],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset$1\n  },\n  right: {\n    points: [\"cl\", \"cr\"],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset$1\n  },\n  top: {\n    points: [\"bc\", \"tc\"],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset$1\n  },\n  bottom: {\n    points: [\"tc\", \"bc\"],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset$1\n  },\n  topLeft: {\n    points: [\"bl\", \"tl\"],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset$1\n  },\n  leftTop: {\n    points: [\"tr\", \"tl\"],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset$1\n  },\n  topRight: {\n    points: [\"br\", \"tr\"],\n    overflow: autoAdjustOverflow,\n    offset: [0, -4],\n    targetOffset: targetOffset$1\n  },\n  rightTop: {\n    points: [\"tl\", \"tr\"],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset$1\n  },\n  bottomRight: {\n    points: [\"tr\", \"br\"],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset$1\n  },\n  rightBottom: {\n    points: [\"bl\", \"br\"],\n    overflow: autoAdjustOverflow,\n    offset: [4, 0],\n    targetOffset: targetOffset$1\n  },\n  bottomLeft: {\n    points: [\"tl\", \"bl\"],\n    overflow: autoAdjustOverflow,\n    offset: [0, 4],\n    targetOffset: targetOffset$1\n  },\n  leftBottom: {\n    points: [\"br\", \"bl\"],\n    overflow: autoAdjustOverflow,\n    offset: [-4, 0],\n    targetOffset: targetOffset$1\n  }\n};\nvar Content = function Content2(props) {\n  var overlay = props.overlay, prefixCls = props.prefixCls, id2 = props.id, overlayInnerStyle = props.overlayInnerStyle;\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-inner\"),\n    id: id2,\n    role: \"tooltip\",\n    style: overlayInnerStyle\n  }, typeof overlay === \"function\" ? overlay() : overlay);\n};\nvar Tooltip$2 = function Tooltip(props, ref) {\n  var overlayClassName = props.overlayClassName, _props$trigger = props.trigger, trigger = _props$trigger === void 0 ? [\"hover\"] : _props$trigger, _props$mouseEnterDela = props.mouseEnterDelay, mouseEnterDelay = _props$mouseEnterDela === void 0 ? 0 : _props$mouseEnterDela, _props$mouseLeaveDela = props.mouseLeaveDelay, mouseLeaveDelay = _props$mouseLeaveDela === void 0 ? 0.1 : _props$mouseLeaveDela, overlayStyle = props.overlayStyle, _props$prefixCls = props.prefixCls, prefixCls = _props$prefixCls === void 0 ? \"rc-tooltip\" : _props$prefixCls, children = props.children, onVisibleChange = props.onVisibleChange, afterVisibleChange = props.afterVisibleChange, transitionName2 = props.transitionName, animation = props.animation, motion = props.motion, _props$placement = props.placement, placement = _props$placement === void 0 ? \"right\" : _props$placement, _props$align = props.align, align = _props$align === void 0 ? {} : _props$align, _props$destroyTooltip = props.destroyTooltipOnHide, destroyTooltipOnHide = _props$destroyTooltip === void 0 ? false : _props$destroyTooltip, defaultVisible = props.defaultVisible, getTooltipContainer = props.getTooltipContainer, overlayInnerStyle = props.overlayInnerStyle, restProps = _objectWithoutProperties(props, [\"overlayClassName\", \"trigger\", \"mouseEnterDelay\", \"mouseLeaveDelay\", \"overlayStyle\", \"prefixCls\", \"children\", \"onVisibleChange\", \"afterVisibleChange\", \"transitionName\", \"animation\", \"motion\", \"placement\", \"align\", \"destroyTooltipOnHide\", \"defaultVisible\", \"getTooltipContainer\", \"overlayInnerStyle\"]);\n  var domRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function() {\n    return domRef.current;\n  });\n  var extraProps = _objectSpread2$1({}, restProps);\n  if (\"visible\" in props) {\n    extraProps.popupVisible = props.visible;\n  }\n  var getPopupElement = function getPopupElement2() {\n    var _props$arrowContent = props.arrowContent, arrowContent = _props$arrowContent === void 0 ? null : _props$arrowContent, overlay = props.overlay, id2 = props.id;\n    return [/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-arrow\"),\n      key: \"arrow\"\n    }, arrowContent), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Content, {\n      key: \"content\",\n      prefixCls,\n      id: id2,\n      overlay,\n      overlayInnerStyle\n    })];\n  };\n  var destroyTooltip = false;\n  var autoDestroy = false;\n  if (typeof destroyTooltipOnHide === \"boolean\") {\n    destroyTooltip = destroyTooltipOnHide;\n  } else if (destroyTooltipOnHide && _typeof$1(destroyTooltipOnHide) === \"object\") {\n    var keepParent = destroyTooltipOnHide.keepParent;\n    destroyTooltip = keepParent === true;\n    autoDestroy = keepParent === false;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Trigger, _extends$1({\n    popupClassName: overlayClassName,\n    prefixCls,\n    popup: getPopupElement,\n    action: trigger,\n    builtinPlacements: placements,\n    popupPlacement: placement,\n    ref: domRef,\n    popupAlign: align,\n    getPopupContainer: getTooltipContainer,\n    onPopupVisibleChange: onVisibleChange,\n    afterPopupVisibleChange: afterVisibleChange,\n    popupTransitionName: transitionName2,\n    popupAnimation: animation,\n    popupMotion: motion,\n    defaultPopupVisible: defaultVisible,\n    destroyPopupOnHide: destroyTooltip,\n    autoDestroy,\n    mouseLeaveDelay,\n    popupStyle: overlayStyle,\n    mouseEnterDelay\n  }, extraProps), children);\n};\nvar Tooltip$3 = /* @__PURE__ */ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(Tooltip$2);\nfunction useControlledState(defaultStateValue, option) {\n  var _ref = option || {}, defaultValue = _ref.defaultValue, value = _ref.value, onChange = _ref.onChange, postState = _ref.postState;\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(function() {\n    if (value !== void 0) {\n      return value;\n    }\n    if (defaultValue !== void 0) {\n      return typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n    }\n    return typeof defaultStateValue === \"function\" ? defaultStateValue() : defaultStateValue;\n  }), _React$useState2 = _slicedToArray(_React$useState, 2), innerValue = _React$useState2[0], setInnerValue = _React$useState2[1];\n  var mergedValue = value !== void 0 ? value : innerValue;\n  if (postState) {\n    mergedValue = postState(mergedValue);\n  }\n  var onChangeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(onChange);\n  onChangeRef.current = onChange;\n  var triggerChange = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(newValue) {\n    setInnerValue(newValue);\n    if (mergedValue !== newValue && onChangeRef.current) {\n      onChangeRef.current(newValue, mergedValue);\n    }\n  }, [mergedValue, onChangeRef]);\n  var firstRenderRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(true);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    if (firstRenderRef.current) {\n      firstRenderRef.current = false;\n      return;\n    }\n    if (value === void 0) {\n      setInnerValue(value);\n    }\n  }, [value]);\n  return [mergedValue, triggerChange];\n}\nvar autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nvar targetOffset = [0, 0];\nfunction getOverflowOptions(autoAdjustOverflow2) {\n  if (typeof autoAdjustOverflow2 === \"boolean\") {\n    return autoAdjustOverflow2 ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n  return _extends$1(_extends$1({}, autoAdjustOverflowDisabled), autoAdjustOverflow2);\n}\nfunction getPlacements(config) {\n  var _config$arrowWidth = config.arrowWidth, arrowWidth = _config$arrowWidth === void 0 ? 4 : _config$arrowWidth, _config$horizontalArr = config.horizontalArrowShift, horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr, _config$verticalArrow = config.verticalArrowShift, verticalArrowShift = _config$verticalArrow === void 0 ? 8 : _config$verticalArrow, autoAdjustOverflow2 = config.autoAdjustOverflow;\n  var placementMap = {\n    left: {\n      points: [\"cr\", \"cl\"],\n      offset: [-4, 0]\n    },\n    right: {\n      points: [\"cl\", \"cr\"],\n      offset: [4, 0]\n    },\n    top: {\n      points: [\"bc\", \"tc\"],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: [\"tc\", \"bc\"],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: [\"bl\", \"tc\"],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: [\"tr\", \"cl\"],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: [\"br\", \"tc\"],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: [\"tl\", \"cr\"],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: [\"tr\", \"bc\"],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: [\"bl\", \"cr\"],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: [\"tl\", \"bc\"],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: [\"br\", \"cl\"],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function(key2) {\n    placementMap[key2] = config.arrowPointAtCenter ? _extends$1(_extends$1({}, placementMap[key2]), {\n      overflow: getOverflowOptions(autoAdjustOverflow2),\n      targetOffset\n    }) : _extends$1(_extends$1({}, placements[key2]), {\n      overflow: getOverflowOptions(autoAdjustOverflow2)\n    });\n    placementMap[key2].ignoreShake = true;\n  });\n  return placementMap;\n}\nvar getTransitionName = function getTransitionName2(rootPrefixCls, motion, transitionName2) {\n  if (transitionName2 !== void 0) {\n    return transitionName2;\n  }\n  return \"\".concat(rootPrefixCls, \"-\").concat(motion);\n};\nvar __rest$5 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar splitObject = function splitObject2(obj, keys2) {\n  var picked = {};\n  var omitted = _extends$1({}, obj);\n  keys2.forEach(function(key2) {\n    if (obj && key2 in obj) {\n      picked[key2] = obj[key2];\n      delete omitted[key2];\n    }\n  });\n  return {\n    picked,\n    omitted\n  };\n};\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join(\"|\"), \")(-inverse)?$\"));\nfunction getDisabledCompatibleChildren(element, prefixCls) {\n  var elementType = element.type;\n  if ((elementType.__ANT_BUTTON === true || element.type === \"button\") && element.props.disabled || elementType.__ANT_SWITCH === true && (element.props.disabled || element.props.loading)) {\n    var _splitObject = splitObject(element.props.style, [\"position\", \"left\", \"right\", \"top\", \"bottom\", \"float\", \"display\", \"zIndex\"]), picked = _splitObject.picked, omitted = _splitObject.omitted;\n    var spanStyle = _extends$1(_extends$1({\n      display: \"inline-block\"\n    }, picked), {\n      cursor: \"not-allowed\",\n      width: element.props.block ? \"100%\" : null\n    });\n    var buttonStyle = _extends$1(_extends$1({}, omitted), {\n      pointerEvents: \"none\"\n    });\n    var child = cloneElement(element, {\n      style: buttonStyle,\n      className: null\n    });\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      style: spanStyle,\n      className: classNames(element.props.className, \"\".concat(prefixCls, \"-disabled-compatible-wrapper\"))\n    }, child);\n  }\n  return element;\n}\nvar Tooltip2 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(props, ref) {\n  var _classNames2;\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getContextPopupContainer = _React$useContext.getPopupContainer, getPrefixCls = _React$useContext.getPrefixCls, direction = _React$useContext.direction;\n  var _useMergedState = useControlledState(false, {\n    value: props.visible,\n    defaultValue: props.defaultVisible\n  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), visible = _useMergedState2[0], setVisible = _useMergedState2[1];\n  var isNoTitle = function isNoTitle2() {\n    var title = props.title, overlay = props.overlay;\n    return !title && !overlay && title !== 0;\n  };\n  var onVisibleChange = function onVisibleChange2(vis) {\n    var _a;\n    setVisible(isNoTitle() ? false : vis);\n    if (!isNoTitle()) {\n      (_a = props.onVisibleChange) === null || _a === void 0 ? void 0 : _a.call(props, vis);\n    }\n  };\n  var getTooltipPlacements = function getTooltipPlacements2() {\n    var builtinPlacements = props.builtinPlacements, arrowPointAtCenter = props.arrowPointAtCenter, autoAdjustOverflow2 = props.autoAdjustOverflow;\n    return builtinPlacements || getPlacements({\n      arrowPointAtCenter,\n      autoAdjustOverflow: autoAdjustOverflow2\n    });\n  };\n  var onPopupAlign = function onPopupAlign2(domNode, align) {\n    var placements2 = getTooltipPlacements();\n    var placement = Object.keys(placements2).filter(function(key2) {\n      return placements2[key2].points[0] === align.points[0] && placements2[key2].points[1] === align.points[1];\n    })[0];\n    if (!placement) {\n      return;\n    }\n    var rect = domNode.getBoundingClientRect();\n    var transformOrigin = {\n      top: \"50%\",\n      left: \"50%\"\n    };\n    if (placement.indexOf(\"top\") >= 0 || placement.indexOf(\"Bottom\") >= 0) {\n      transformOrigin.top = \"\".concat(rect.height - align.offset[1], \"px\");\n    } else if (placement.indexOf(\"Top\") >= 0 || placement.indexOf(\"bottom\") >= 0) {\n      transformOrigin.top = \"\".concat(-align.offset[1], \"px\");\n    }\n    if (placement.indexOf(\"left\") >= 0 || placement.indexOf(\"Right\") >= 0) {\n      transformOrigin.left = \"\".concat(rect.width - align.offset[0], \"px\");\n    } else if (placement.indexOf(\"right\") >= 0 || placement.indexOf(\"Left\") >= 0) {\n      transformOrigin.left = \"\".concat(-align.offset[0], \"px\");\n    }\n    domNode.style.transformOrigin = \"\".concat(transformOrigin.left, \" \").concat(transformOrigin.top);\n  };\n  var getOverlay = function getOverlay2() {\n    var title = props.title, overlay = props.overlay;\n    if (title === 0) {\n      return title;\n    }\n    return overlay || title || \"\";\n  };\n  var getPopupContainer = props.getPopupContainer, otherProps = __rest$5(props, [\"getPopupContainer\"]);\n  var customizePrefixCls = props.prefixCls, openClassName = props.openClassName, getTooltipContainer = props.getTooltipContainer, overlayClassName = props.overlayClassName, color = props.color, overlayInnerStyle = props.overlayInnerStyle, children = props.children;\n  var prefixCls = getPrefixCls(\"tooltip\", customizePrefixCls);\n  var rootPrefixCls = getPrefixCls();\n  var tempVisible = visible;\n  if (!(\"visible\" in props) && isNoTitle()) {\n    tempVisible = false;\n  }\n  var child = getDisabledCompatibleChildren(isValidElement(children) ? children : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, children), prefixCls);\n  var childProps = child.props;\n  var childCls = classNames(childProps.className, _defineProperty$1({}, openClassName || \"\".concat(prefixCls, \"-open\"), true));\n  var customOverlayClassName = classNames(overlayClassName, (_classNames2 = {}, _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-\").concat(color), color && PresetColorRegex.test(color)), _classNames2));\n  var formattedOverlayInnerStyle = overlayInnerStyle;\n  var arrowContentStyle;\n  if (color && !PresetColorRegex.test(color)) {\n    formattedOverlayInnerStyle = _extends$1(_extends$1({}, overlayInnerStyle), {\n      background: color\n    });\n    arrowContentStyle = {\n      background: color\n    };\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Tooltip$3, _extends$1({}, otherProps, {\n    prefixCls,\n    overlayClassName: customOverlayClassName,\n    getTooltipContainer: getPopupContainer || getTooltipContainer || getContextPopupContainer,\n    ref,\n    builtinPlacements: getTooltipPlacements(),\n    overlay: getOverlay(),\n    visible: tempVisible,\n    onVisibleChange,\n    onPopupAlign,\n    overlayInnerStyle: formattedOverlayInnerStyle,\n    arrowContent: /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-arrow-content\"),\n      style: arrowContentStyle\n    }),\n    motion: {\n      motionName: getTransitionName(rootPrefixCls, \"zoom-big-fast\", props.transitionName),\n      motionDeadline: 1e3\n    }\n  }), tempVisible ? cloneElement(child, {\n    className: childCls\n  }) : child);\n});\nTooltip2.displayName = \"Tooltip\";\nTooltip2.defaultProps = {\n  placement: \"top\",\n  mouseEnterDelay: 0.1,\n  mouseLeaveDelay: 0.1,\n  arrowPointAtCenter: false,\n  autoAdjustOverflow: true\n};\nvar Tooltip$1 = Tooltip2;\nfunction getInputClassName(prefixCls, bordered, size, disabled, direction) {\n  var _classNames;\n  return classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-sm\"), size === \"small\"), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-lg\"), size === \"large\"), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _classNames));\n}\nfunction hasPrefixSuffix(props) {\n  return !!(props.prefix || props.suffix || props.allowClear);\n}\nvar ClearableInputType = tuple(\"text\", \"input\");\nfunction hasAddon(props) {\n  return !!(props.addonBefore || props.addonAfter);\n}\nvar ClearableLabeledInput = /* @__PURE__ */ function(_React$Component) {\n  _inherits(ClearableLabeledInput2, _React$Component);\n  var _super = _createSuper(ClearableLabeledInput2);\n  function ClearableLabeledInput2() {\n    var _this;\n    _classCallCheck(this, ClearableLabeledInput2);\n    _this = _super.apply(this, arguments);\n    _this.containerRef = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n    _this.onInputMouseUp = function(e2) {\n      var _a;\n      if ((_a = _this.containerRef.current) === null || _a === void 0 ? void 0 : _a.contains(e2.target)) {\n        var triggerFocus2 = _this.props.triggerFocus;\n        triggerFocus2 === null || triggerFocus2 === void 0 ? void 0 : triggerFocus2();\n      }\n    };\n    return _this;\n  }\n  _createClass(ClearableLabeledInput2, [{\n    key: \"renderClearIcon\",\n    value: function renderClearIcon(prefixCls) {\n      var _classNames;\n      var _this$props = this.props, allowClear = _this$props.allowClear, value = _this$props.value, disabled = _this$props.disabled, readOnly = _this$props.readOnly, handleReset = _this$props.handleReset, suffix = _this$props.suffix;\n      if (!allowClear) {\n        return null;\n      }\n      var needClear = !disabled && !readOnly && value;\n      var className = \"\".concat(prefixCls, \"-clear-icon\");\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CloseCircleFilled$1, {\n        onClick: handleReset,\n        onMouseDown: function onMouseDown(e2) {\n          return e2.preventDefault();\n        },\n        className: classNames((_classNames = {}, _defineProperty$1(_classNames, \"\".concat(className, \"-hidden\"), !needClear), _defineProperty$1(_classNames, \"\".concat(className, \"-has-suffix\"), !!suffix), _classNames), className),\n        role: \"button\"\n      });\n    }\n  }, {\n    key: \"renderSuffix\",\n    value: function renderSuffix(prefixCls) {\n      var _this$props2 = this.props, suffix = _this$props2.suffix, allowClear = _this$props2.allowClear;\n      if (suffix || allowClear) {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-suffix\")\n        }, this.renderClearIcon(prefixCls), suffix);\n      }\n      return null;\n    }\n  }, {\n    key: \"renderLabeledIcon\",\n    value: function renderLabeledIcon(prefixCls, element) {\n      var _classNames2;\n      var _this$props3 = this.props, focused = _this$props3.focused, value = _this$props3.value, prefix = _this$props3.prefix, className = _this$props3.className, size = _this$props3.size, suffix = _this$props3.suffix, disabled = _this$props3.disabled, allowClear = _this$props3.allowClear, direction = _this$props3.direction, style2 = _this$props3.style, readOnly = _this$props3.readOnly, bordered = _this$props3.bordered, hidden = _this$props3.hidden;\n      if (!hasPrefixSuffix(this.props)) {\n        return cloneElement(element, {\n          value\n        });\n      }\n      var suffixNode = this.renderSuffix(prefixCls);\n      var prefixNode = prefix ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-prefix\")\n      }, prefix) : null;\n      var affixWrapperCls = classNames(\"\".concat(prefixCls, \"-affix-wrapper\"), (_classNames2 = {}, _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-focused\"), focused), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-disabled\"), disabled), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-sm\"), size === \"small\"), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-lg\"), size === \"large\"), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-input-with-clear-btn\"), suffix && allowClear && value), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-rtl\"), direction === \"rtl\"), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-readonly\"), readOnly), _defineProperty$1(_classNames2, \"\".concat(prefixCls, \"-affix-wrapper-borderless\"), !bordered), _defineProperty$1(_classNames2, \"\".concat(className), !hasAddon(this.props) && className), _classNames2));\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        ref: this.containerRef,\n        className: affixWrapperCls,\n        style: style2,\n        onMouseUp: this.onInputMouseUp,\n        hidden\n      }, prefixNode, cloneElement(element, {\n        style: null,\n        value,\n        className: getInputClassName(prefixCls, bordered, size, disabled)\n      }), suffixNode);\n    }\n  }, {\n    key: \"renderInputWithLabel\",\n    value: function renderInputWithLabel(prefixCls, labeledElement) {\n      var _classNames4;\n      var _this$props4 = this.props, addonBefore = _this$props4.addonBefore, addonAfter = _this$props4.addonAfter, style2 = _this$props4.style, size = _this$props4.size, className = _this$props4.className, direction = _this$props4.direction, hidden = _this$props4.hidden;\n      if (!hasAddon(this.props)) {\n        return labeledElement;\n      }\n      var wrapperClassName = \"\".concat(prefixCls, \"-group\");\n      var addonClassName = \"\".concat(wrapperClassName, \"-addon\");\n      var addonBeforeNode = addonBefore ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: addonClassName\n      }, addonBefore) : null;\n      var addonAfterNode = addonAfter ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: addonClassName\n      }, addonAfter) : null;\n      var mergedWrapperClassName = classNames(\"\".concat(prefixCls, \"-wrapper\"), wrapperClassName, _defineProperty$1({}, \"\".concat(wrapperClassName, \"-rtl\"), direction === \"rtl\"));\n      var mergedGroupClassName = classNames(\"\".concat(prefixCls, \"-group-wrapper\"), (_classNames4 = {}, _defineProperty$1(_classNames4, \"\".concat(prefixCls, \"-group-wrapper-sm\"), size === \"small\"), _defineProperty$1(_classNames4, \"\".concat(prefixCls, \"-group-wrapper-lg\"), size === \"large\"), _defineProperty$1(_classNames4, \"\".concat(prefixCls, \"-group-wrapper-rtl\"), direction === \"rtl\"), _classNames4), className);\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: mergedGroupClassName,\n        style: style2,\n        hidden\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: mergedWrapperClassName\n      }, addonBeforeNode, cloneElement(labeledElement, {\n        style: null\n      }), addonAfterNode));\n    }\n  }, {\n    key: \"renderTextAreaWithClearIcon\",\n    value: function renderTextAreaWithClearIcon(prefixCls, element) {\n      var _classNames5;\n      var _this$props5 = this.props, value = _this$props5.value, allowClear = _this$props5.allowClear, className = _this$props5.className, style2 = _this$props5.style, direction = _this$props5.direction, bordered = _this$props5.bordered, hidden = _this$props5.hidden;\n      if (!allowClear) {\n        return cloneElement(element, {\n          value\n        });\n      }\n      var affixWrapperCls = classNames(\"\".concat(prefixCls, \"-affix-wrapper\"), \"\".concat(prefixCls, \"-affix-wrapper-textarea-with-clear-btn\"), (_classNames5 = {}, _defineProperty$1(_classNames5, \"\".concat(prefixCls, \"-affix-wrapper-rtl\"), direction === \"rtl\"), _defineProperty$1(_classNames5, \"\".concat(prefixCls, \"-affix-wrapper-borderless\"), !bordered), _defineProperty$1(_classNames5, \"\".concat(className), !hasAddon(this.props) && className), _classNames5));\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n        className: affixWrapperCls,\n        style: style2,\n        hidden\n      }, cloneElement(element, {\n        style: null,\n        value\n      }), this.renderClearIcon(prefixCls));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props6 = this.props, prefixCls = _this$props6.prefixCls, inputType = _this$props6.inputType, element = _this$props6.element;\n      if (inputType === ClearableInputType[0]) {\n        return this.renderTextAreaWithClearIcon(prefixCls, element);\n      }\n      return this.renderInputWithLabel(prefixCls, this.renderLabeledIcon(prefixCls, element));\n    }\n  }]);\n  return ClearableLabeledInput2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar ClearableLabeledInput$1 = ClearableLabeledInput;\nfunction fixControlledValue(value) {\n  if (typeof value === \"undefined\" || value === null) {\n    return \"\";\n  }\n  return String(value);\n}\nfunction resolveOnChange(target, e2, onChange, targetValue) {\n  if (!onChange) {\n    return;\n  }\n  var event = e2;\n  if (e2.type === \"click\") {\n    var currentTarget = target.cloneNode(true);\n    event = Object.create(e2, {\n      target: {\n        value: currentTarget\n      },\n      currentTarget: {\n        value: currentTarget\n      }\n    });\n    currentTarget.value = \"\";\n    onChange(event);\n    return;\n  }\n  if (targetValue !== void 0) {\n    event = Object.create(e2, {\n      target: {\n        value: target\n      },\n      currentTarget: {\n        value: target\n      }\n    });\n    target.value = targetValue;\n    onChange(event);\n    return;\n  }\n  onChange(event);\n}\nfunction triggerFocus(element, option) {\n  if (!element)\n    return;\n  element.focus(option);\n  var _ref = option || {}, cursor = _ref.cursor;\n  if (cursor) {\n    var len = element.value.length;\n    switch (cursor) {\n      case \"start\":\n        element.setSelectionRange(0, 0);\n        break;\n      case \"end\":\n        element.setSelectionRange(len, len);\n        break;\n      default:\n        element.setSelectionRange(0, len);\n    }\n  }\n}\nvar Input = /* @__PURE__ */ function(_React$Component) {\n  _inherits(Input2, _React$Component);\n  var _super = _createSuper(Input2);\n  function Input2(props) {\n    var _this;\n    _classCallCheck(this, Input2);\n    _this = _super.call(this, props);\n    _this.direction = \"ltr\";\n    _this.focus = function(option) {\n      triggerFocus(_this.input, option);\n    };\n    _this.saveClearableInput = function(input2) {\n      _this.clearableInput = input2;\n    };\n    _this.saveInput = function(input2) {\n      _this.input = input2;\n    };\n    _this.onFocus = function(e2) {\n      var onFocus = _this.props.onFocus;\n      _this.setState({\n        focused: true\n      }, _this.clearPasswordValueAttribute);\n      onFocus === null || onFocus === void 0 ? void 0 : onFocus(e2);\n    };\n    _this.onBlur = function(e2) {\n      var onBlur = _this.props.onBlur;\n      _this.setState({\n        focused: false\n      }, _this.clearPasswordValueAttribute);\n      onBlur === null || onBlur === void 0 ? void 0 : onBlur(e2);\n    };\n    _this.handleReset = function(e2) {\n      _this.setValue(\"\", function() {\n        _this.focus();\n      });\n      resolveOnChange(_this.input, e2, _this.props.onChange);\n    };\n    _this.renderInput = function(prefixCls, size, bordered) {\n      var input2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};\n      var _this$props = _this.props, className = _this$props.className, addonBefore = _this$props.addonBefore, addonAfter = _this$props.addonAfter, customizeSize = _this$props.size, disabled = _this$props.disabled, htmlSize = _this$props.htmlSize;\n      var otherProps = omit(_this.props, [\n        \"prefixCls\",\n        \"onPressEnter\",\n        \"addonBefore\",\n        \"addonAfter\",\n        \"prefix\",\n        \"suffix\",\n        \"allowClear\",\n        \"defaultValue\",\n        \"size\",\n        \"inputType\",\n        \"bordered\",\n        \"htmlSize\",\n        \"showCount\"\n      ]);\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"input\", _extends$1({\n        autoComplete: input2.autoComplete\n      }, otherProps, {\n        onChange: _this.handleChange,\n        onFocus: _this.onFocus,\n        onBlur: _this.onBlur,\n        onKeyDown: _this.handleKeyDown,\n        className: classNames(getInputClassName(prefixCls, bordered, customizeSize || size, disabled, _this.direction), _defineProperty$1({}, className, className && !addonBefore && !addonAfter)),\n        ref: _this.saveInput,\n        size: htmlSize\n      }));\n    };\n    _this.clearPasswordValueAttribute = function() {\n      _this.removePasswordTimeout = setTimeout(function() {\n        if (_this.input && _this.input.getAttribute(\"type\") === \"password\" && _this.input.hasAttribute(\"value\")) {\n          _this.input.removeAttribute(\"value\");\n        }\n      });\n    };\n    _this.handleChange = function(e2) {\n      _this.setValue(e2.target.value, _this.clearPasswordValueAttribute);\n      resolveOnChange(_this.input, e2, _this.props.onChange);\n    };\n    _this.handleKeyDown = function(e2) {\n      var _this$props2 = _this.props, onPressEnter = _this$props2.onPressEnter, onKeyDown = _this$props2.onKeyDown;\n      if (onPressEnter && e2.keyCode === 13) {\n        onPressEnter(e2);\n      }\n      onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e2);\n    };\n    _this.renderShowCountSuffix = function(prefixCls) {\n      var value2 = _this.state.value;\n      var _this$props3 = _this.props, maxLength = _this$props3.maxLength, suffix = _this$props3.suffix, showCount = _this$props3.showCount;\n      var hasMaxLength = Number(maxLength) > 0;\n      if (suffix || showCount) {\n        var valueLength = _toConsumableArray(fixControlledValue(value2)).length;\n        var dataCount = null;\n        if (_typeof$1(showCount) === \"object\") {\n          dataCount = showCount.formatter({\n            count: valueLength,\n            maxLength\n          });\n        } else {\n          dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(maxLength) : \"\");\n        }\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, !!showCount && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n          className: classNames(\"\".concat(prefixCls, \"-show-count-suffix\"), _defineProperty$1({}, \"\".concat(prefixCls, \"-show-count-has-suffix\"), !!suffix))\n        }, dataCount), suffix);\n      }\n      return null;\n    };\n    _this.renderComponent = function(_ref2) {\n      var getPrefixCls = _ref2.getPrefixCls, direction = _ref2.direction, input2 = _ref2.input;\n      var _this$state = _this.state, value2 = _this$state.value, focused = _this$state.focused;\n      var _this$props4 = _this.props, customizePrefixCls = _this$props4.prefixCls, _this$props4$bordered = _this$props4.bordered, bordered = _this$props4$bordered === void 0 ? true : _this$props4$bordered;\n      var prefixCls = getPrefixCls(\"input\", customizePrefixCls);\n      _this.direction = direction;\n      var showCountSuffix = _this.renderShowCountSuffix(prefixCls);\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SizeContext$1.Consumer, null, function(size) {\n        return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClearableLabeledInput$1, _extends$1({\n          size\n        }, _this.props, {\n          prefixCls,\n          inputType: \"input\",\n          value: fixControlledValue(value2),\n          element: _this.renderInput(prefixCls, size, bordered, input2),\n          handleReset: _this.handleReset,\n          ref: _this.saveClearableInput,\n          direction,\n          focused,\n          triggerFocus: _this.focus,\n          bordered,\n          suffix: showCountSuffix\n        }));\n      });\n    };\n    var value = typeof props.value === \"undefined\" ? props.defaultValue : props.value;\n    _this.state = {\n      value,\n      focused: false,\n      prevValue: props.value\n    };\n    return _this;\n  }\n  _createClass(Input2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.clearPasswordValueAttribute();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n    }\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate(prevProps) {\n      if (hasPrefixSuffix(prevProps) !== hasPrefixSuffix(this.props)) {\n        devWarning(this.input !== document.activeElement, \"Input\", \"When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ\");\n      }\n      return null;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.removePasswordTimeout) {\n        clearTimeout(this.removePasswordTimeout);\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.blur();\n    }\n  }, {\n    key: \"setSelectionRange\",\n    value: function setSelectionRange(start, end, direction) {\n      this.input.setSelectionRange(start, end, direction);\n    }\n  }, {\n    key: \"select\",\n    value: function select() {\n      this.input.select();\n    }\n  }, {\n    key: \"setValue\",\n    value: function setValue2(value, callback) {\n      if (this.props.value === void 0) {\n        this.setState({\n          value\n        }, callback);\n      } else {\n        callback === null || callback === void 0 ? void 0 : callback();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, null, this.renderComponent);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, _ref3) {\n      var prevValue = _ref3.prevValue;\n      var newState = {\n        prevValue: nextProps.value\n      };\n      if (nextProps.value !== void 0 || prevValue !== nextProps.value) {\n        newState.value = nextProps.value;\n      }\n      if (nextProps.disabled) {\n        newState.focused = false;\n      }\n      return newState;\n    }\n  }]);\n  return Input2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nInput.defaultProps = {\n  type: \"text\"\n};\nvar Input$1 = Input;\nvar Group$1 = function Group(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, null, function(_ref) {\n    var _classNames;\n    var getPrefixCls = _ref.getPrefixCls, direction = _ref.direction;\n    var customizePrefixCls = props.prefixCls, _props$className = props.className, className = _props$className === void 0 ? \"\" : _props$className;\n    var prefixCls = getPrefixCls(\"input-group\", customizePrefixCls);\n    var cls = classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-lg\"), props.size === \"large\"), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-sm\"), props.size === \"small\"), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-compact\"), props.compact), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _classNames), className);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", {\n      className: cls,\n      style: props.style,\n      onMouseEnter: props.onMouseEnter,\n      onMouseLeave: props.onMouseLeave,\n      onFocus: props.onFocus,\n      onBlur: props.onBlur\n    }, props.children);\n  });\n};\nvar Group$2 = Group$1;\nvar SearchOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nvar SearchOutlinedSvg = SearchOutlined$2;\nvar SearchOutlined = function SearchOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: SearchOutlinedSvg\n  }));\n};\nSearchOutlined.displayName = \"SearchOutlined\";\nvar SearchOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(SearchOutlined);\nvar UnreachableException = /* @__PURE__ */ _createClass(function UnreachableException2(value) {\n  _classCallCheck(this, UnreachableException2);\n  this.error = new Error(\"unreachable case: \".concat(JSON.stringify(value)));\n});\nvar __rest$4 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar ButtonGroup = function ButtonGroup2(props) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, null, function(_ref) {\n    var _classNames;\n    var getPrefixCls = _ref.getPrefixCls, direction = _ref.direction;\n    var customizePrefixCls = props.prefixCls, size = props.size, className = props.className, others = __rest$4(props, [\"prefixCls\", \"size\", \"className\"]);\n    var prefixCls = getPrefixCls(\"btn-group\", customizePrefixCls);\n    var sizeCls = \"\";\n    switch (size) {\n      case \"large\":\n        sizeCls = \"lg\";\n        break;\n      case \"small\":\n        sizeCls = \"sm\";\n        break;\n      case \"middle\":\n      case void 0:\n        break;\n      default:\n        console.warn(new UnreachableException(size).error);\n    }\n    var classes = classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(sizeCls), sizeCls), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _classNames), className);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", _extends$1({}, others, {\n      className: classes\n    }));\n  });\n};\nvar Group2 = ButtonGroup;\nvar getCollapsedWidth = function getCollapsedWidth2() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: \"scale(0)\"\n  };\n};\nvar getRealWidth = function getRealWidth2(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: \"scale(1)\"\n  };\n};\nvar LoadingIcon = function LoadingIcon2(_ref) {\n  var prefixCls = _ref.prefixCls, loading = _ref.loading, existIcon = _ref.existIcon;\n  var visible = !!loading;\n  if (existIcon) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\")\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LoadingOutlined$1, null));\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(CSSMotion, {\n    visible,\n    motionName: \"\".concat(prefixCls, \"-loading-icon-motion\"),\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, function(_ref2, ref) {\n    var className = _ref2.className, style2 = _ref2.style;\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\"),\n      style: style2,\n      ref\n    }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0___default().createElement(LoadingOutlined$1, {\n      className\n    }));\n  });\n};\nvar LoadingIcon$1 = LoadingIcon;\nvar __rest$3 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar rxTwoCNChar = /^[\\u4e00-\\u9fa5]{2}$/;\nvar isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction isString(str) {\n  return typeof str === \"string\";\n}\nfunction isUnborderedButtonType(type4) {\n  return type4 === \"text\" || type4 === \"link\";\n}\nfunction isReactFragment(node) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(node) && node.type === react__WEBPACK_IMPORTED_MODULE_0__.Fragment;\n}\nfunction insertSpace(child, needInserted) {\n  if (child == null) {\n    return;\n  }\n  var SPACE = needInserted ? \" \" : \"\";\n  if (typeof child !== \"string\" && typeof child !== \"number\" && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return cloneElement(child, {\n      children: child.props.children.split(\"\").join(SPACE)\n    });\n  }\n  if (typeof child === \"string\") {\n    return isTwoCNChar(child) ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, child.split(\"\").join(SPACE)) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, child);\n  }\n  if (isReactFragment(child)) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, child);\n  }\n  return child;\n}\nfunction spaceChildren(children, needInserted) {\n  var isPrevChildPure = false;\n  var childList = [];\n  react__WEBPACK_IMPORTED_MODULE_0__.Children.forEach(children, function(child) {\n    var type4 = _typeof$1(child);\n    var isCurrentChildPure = type4 === \"string\" || type4 === \"number\";\n    if (isPrevChildPure && isCurrentChildPure) {\n      var lastIndex = childList.length - 1;\n      var lastChild = childList[lastIndex];\n      childList[lastIndex] = \"\".concat(lastChild).concat(child);\n    } else {\n      childList.push(child);\n    }\n    isPrevChildPure = isCurrentChildPure;\n  });\n  return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(childList, function(child) {\n    return insertSpace(child, needInserted);\n  });\n}\ntuple(\"default\", \"primary\", \"ghost\", \"dashed\", \"link\", \"text\");\ntuple(\"default\", \"circle\", \"round\");\ntuple(\"submit\", \"button\", \"reset\");\nvar InternalButton = function InternalButton2(props, ref) {\n  var _classNames;\n  var _props$loading = props.loading, loading = _props$loading === void 0 ? false : _props$loading, customizePrefixCls = props.prefixCls, _props$type = props.type, type4 = _props$type === void 0 ? \"default\" : _props$type, danger = props.danger, _props$shape = props.shape, shape = _props$shape === void 0 ? \"default\" : _props$shape, customizeSize = props.size, className = props.className, children = props.children, icon = props.icon, _props$ghost = props.ghost, ghost = _props$ghost === void 0 ? false : _props$ghost, _props$block = props.block, block = _props$block === void 0 ? false : _props$block, _props$htmlType = props.htmlType, htmlType = _props$htmlType === void 0 ? \"button\" : _props$htmlType, rest = __rest$3(props, [\"loading\", \"prefixCls\", \"type\", \"danger\", \"shape\", \"size\", \"className\", \"children\", \"icon\", \"ghost\", \"block\", \"htmlType\"]);\n  var size = react__WEBPACK_IMPORTED_MODULE_0__.useContext(SizeContext$1);\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(!!loading), _React$useState2 = _slicedToArray(_React$useState, 2), innerLoading = _React$useState2[0], setLoading = _React$useState2[1];\n  var _React$useState3 = react__WEBPACK_IMPORTED_MODULE_0__.useState(false), _React$useState4 = _slicedToArray(_React$useState3, 2), hasTwoCNChar = _React$useState4[0], setHasTwoCNChar = _React$useState4[1];\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls, autoInsertSpaceInButton = _React$useContext.autoInsertSpaceInButton, direction = _React$useContext.direction;\n  var buttonRef = ref || /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createRef();\n  var isNeedInserted = function isNeedInserted2() {\n    return react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) === 1 && !icon && !isUnborderedButtonType(type4);\n  };\n  var fixTwoCNChar = function fixTwoCNChar2() {\n    if (!buttonRef || !buttonRef.current || autoInsertSpaceInButton === false) {\n      return;\n    }\n    var buttonText = buttonRef.current.textContent;\n    if (isNeedInserted() && isTwoCNChar(buttonText)) {\n      if (!hasTwoCNChar) {\n        setHasTwoCNChar(true);\n      }\n    } else if (hasTwoCNChar) {\n      setHasTwoCNChar(false);\n    }\n  };\n  var loadingOrDelay = _typeof$1(loading) === \"object\" && loading.delay ? loading.delay || true : !!loading;\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    var delayTimer = null;\n    if (typeof loadingOrDelay === \"number\") {\n      delayTimer = window.setTimeout(function() {\n        delayTimer = null;\n        setLoading(loadingOrDelay);\n      }, loadingOrDelay);\n    } else {\n      setLoading(loadingOrDelay);\n    }\n    return function() {\n      if (delayTimer) {\n        window.clearTimeout(delayTimer);\n        delayTimer = null;\n      }\n    };\n  }, [loadingOrDelay]);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(fixTwoCNChar, [buttonRef]);\n  var handleClick = function handleClick2(e2) {\n    var _a;\n    var onClick = props.onClick, disabled = props.disabled;\n    if (innerLoading || disabled) {\n      e2.preventDefault();\n      return;\n    }\n    (_a = onClick) === null || _a === void 0 ? void 0 : _a(e2);\n  };\n  devWarning(!(typeof icon === \"string\" && icon.length > 2), \"Button\", \"`icon` is using ReactNode instead of string naming in v4. Please check `\".concat(icon, \"` at https://ant.design/components/icon\"));\n  devWarning(!(ghost && isUnborderedButtonType(type4)), \"Button\", \"`link` or `text` button can't be a `ghost` button.\");\n  var prefixCls = getPrefixCls(\"btn\", customizePrefixCls);\n  var autoInsertSpace = autoInsertSpaceInButton !== false;\n  var sizeClassNameMap = {\n    large: \"lg\",\n    small: \"sm\",\n    middle: void 0\n  };\n  var sizeFullname = customizeSize || size;\n  var sizeCls = sizeFullname ? sizeClassNameMap[sizeFullname] || \"\" : \"\";\n  var iconType = innerLoading ? \"loading\" : icon;\n  var classes = classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(shape), shape !== \"default\" && shape), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(type4), type4), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(sizeCls), sizeCls), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-icon-only\"), !children && children !== 0 && !!iconType), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-background-ghost\"), ghost && !isUnborderedButtonType(type4)), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-loading\"), innerLoading), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-two-chinese-chars\"), hasTwoCNChar && autoInsertSpace), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-block\"), block), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-dangerous\"), !!danger), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _classNames), className);\n  var iconNode = icon && !innerLoading ? icon : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(LoadingIcon$1, {\n    existIcon: !!icon,\n    prefixCls,\n    loading: !!innerLoading\n  });\n  var kids = children || children === 0 ? spaceChildren(children, isNeedInserted() && autoInsertSpace) : null;\n  var linkButtonRestProps = omit(rest, [\"navigate\"]);\n  if (linkButtonRestProps.href !== void 0) {\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"a\", _extends$1({}, linkButtonRestProps, {\n      className: classes,\n      onClick: handleClick,\n      ref: buttonRef\n    }), iconNode, kids);\n  }\n  var buttonNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"button\", _extends$1({}, rest, {\n    type: htmlType,\n    className: classes,\n    onClick: handleClick,\n    ref: buttonRef\n  }), iconNode, kids);\n  if (isUnborderedButtonType(type4)) {\n    return buttonNode;\n  }\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Wave, {\n    disabled: !!innerLoading\n  }, buttonNode);\n};\nvar Button = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(InternalButton);\nButton.displayName = \"Button\";\nButton.Group = Group2;\nButton.__ANT_BUTTON = true;\nvar Button$1 = Button;\nvar __rest$2 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar Search = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(props, ref) {\n  var _classNames;\n  var customizePrefixCls = props.prefixCls, customizeInputPrefixCls = props.inputPrefixCls, className = props.className, customizeSize = props.size, suffix = props.suffix, _props$enterButton = props.enterButton, enterButton = _props$enterButton === void 0 ? false : _props$enterButton, addonAfter = props.addonAfter, loading = props.loading, disabled = props.disabled, customOnSearch = props.onSearch, customOnChange = props.onChange, restProps = __rest$2(props, [\"prefixCls\", \"inputPrefixCls\", \"className\", \"size\", \"suffix\", \"enterButton\", \"addonAfter\", \"loading\", \"disabled\", \"onSearch\", \"onChange\"]);\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls, direction = _React$useContext.direction;\n  var contextSize = react__WEBPACK_IMPORTED_MODULE_0__.useContext(SizeContext$1);\n  var size = customizeSize || contextSize;\n  var inputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  var onChange = function onChange2(e2) {\n    if (e2 && e2.target && e2.type === \"click\" && customOnSearch) {\n      customOnSearch(e2.target.value, e2);\n    }\n    if (customOnChange) {\n      customOnChange(e2);\n    }\n  };\n  var onMouseDown = function onMouseDown2(e2) {\n    var _a;\n    if (document.activeElement === ((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.input)) {\n      e2.preventDefault();\n    }\n  };\n  var onSearch = function onSearch2(e2) {\n    var _a;\n    if (customOnSearch) {\n      customOnSearch((_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.input.value, e2);\n    }\n  };\n  var prefixCls = getPrefixCls(\"input-search\", customizePrefixCls);\n  var inputPrefixCls = getPrefixCls(\"input\", customizeInputPrefixCls);\n  var searchIcon = typeof enterButton === \"boolean\" ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SearchOutlined$1, null) : null;\n  var btnClassName = \"\".concat(prefixCls, \"-button\");\n  var button;\n  var enterButtonAsElement = enterButton || {};\n  var isAntdButton = enterButtonAsElement.type && enterButtonAsElement.type.__ANT_BUTTON === true;\n  if (isAntdButton || enterButtonAsElement.type === \"button\") {\n    button = cloneElement(enterButtonAsElement, _extends$1({\n      onMouseDown,\n      onClick: function onClick(e2) {\n        var _a, _b;\n        (_b = (_a = enterButtonAsElement === null || enterButtonAsElement === void 0 ? void 0 : enterButtonAsElement.props) === null || _a === void 0 ? void 0 : _a.onClick) === null || _b === void 0 ? void 0 : _b.call(_a, e2);\n        onSearch(e2);\n      },\n      key: \"enterButton\"\n    }, isAntdButton ? {\n      className: btnClassName,\n      size\n    } : {}));\n  } else {\n    button = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Button$1, {\n      className: btnClassName,\n      type: enterButton ? \"primary\" : void 0,\n      size,\n      disabled,\n      key: \"enterButton\",\n      onMouseDown,\n      onClick: onSearch,\n      loading,\n      icon: searchIcon\n    }, enterButton);\n  }\n  if (addonAfter) {\n    button = [button, cloneElement(addonAfter, {\n      key: \"addonAfter\"\n    })];\n  }\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === \"rtl\"), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-\").concat(size), !!size), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-with-button\"), !!enterButton), _classNames), className);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Input$1, _extends$1({\n    ref: composeRef(inputRef, ref),\n    onPressEnter: onSearch\n  }, restProps, {\n    size,\n    prefixCls: inputPrefixCls,\n    addonAfter: button,\n    suffix,\n    onChange,\n    className: cls,\n    disabled\n  }));\n});\nSearch.displayName = \"Search\";\nvar Search$1 = Search;\nvar elementListeners = /* @__PURE__ */ new Map();\nfunction onResize(entities) {\n  entities.forEach(function(entity) {\n    var _elementListeners$get;\n    var target = entity.target;\n    (_elementListeners$get = elementListeners.get(target)) === null || _elementListeners$get === void 0 ? void 0 : _elementListeners$get.forEach(function(listener) {\n      return listener(target);\n    });\n  });\n}\nvar resizeObserver = new index(onResize);\nfunction observe(element, callback) {\n  if (!elementListeners.has(element)) {\n    elementListeners.set(element, /* @__PURE__ */ new Set());\n    resizeObserver.observe(element);\n  }\n  elementListeners.get(element).add(callback);\n}\nfunction unobserve(element, callback) {\n  if (elementListeners.has(element)) {\n    elementListeners.get(element).delete(callback);\n    if (!elementListeners.get(element).size) {\n      resizeObserver.unobserve(element);\n      elementListeners.delete(element);\n    }\n  }\n}\nvar DomWrapper = /* @__PURE__ */ function(_React$Component) {\n  _inherits(DomWrapper2, _React$Component);\n  var _super = _createSuper(DomWrapper2);\n  function DomWrapper2() {\n    _classCallCheck(this, DomWrapper2);\n    return _super.apply(this, arguments);\n  }\n  _createClass(DomWrapper2, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n  return DomWrapper2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar CollectionContext = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);\nfunction Collection(_ref) {\n  var children = _ref.children, onBatchResize = _ref.onBatchResize;\n  var resizeIdRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n  var resizeInfosRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef([]);\n  var onCollectionResize = react__WEBPACK_IMPORTED_MODULE_0__.useContext(CollectionContext);\n  var onResize2 = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(size, element, data) {\n    resizeIdRef.current += 1;\n    var currentId = resizeIdRef.current;\n    resizeInfosRef.current.push({\n      size,\n      element,\n      data\n    });\n    Promise.resolve().then(function() {\n      if (currentId === resizeIdRef.current) {\n        onBatchResize === null || onBatchResize === void 0 ? void 0 : onBatchResize(resizeInfosRef.current);\n        resizeInfosRef.current = [];\n      }\n    });\n    onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(size, element, data);\n  }, [onBatchResize, onCollectionResize]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(CollectionContext.Provider, {\n    value: onResize2\n  }, children);\n}\nfunction SingleObserver(props) {\n  var children = props.children, disabled = props.disabled;\n  var elementRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  var wrapperRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  var onCollectionResize = react__WEBPACK_IMPORTED_MODULE_0__.useContext(CollectionContext);\n  var isRenderProps = typeof children === \"function\";\n  var mergedChildren = isRenderProps ? children(elementRef) : children;\n  var sizeRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef({\n    width: -1,\n    height: -1,\n    offsetWidth: -1,\n    offsetHeight: -1\n  });\n  var canRef = !isRenderProps && /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(mergedChildren) && supportRef(mergedChildren);\n  var originRef = canRef ? mergedChildren.ref : null;\n  var mergedRef = react__WEBPACK_IMPORTED_MODULE_0__.useMemo(function() {\n    return composeRef(originRef, elementRef);\n  }, [originRef, elementRef]);\n  var propsRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(props);\n  propsRef.current = props;\n  var onInternalResize = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(function(target) {\n    var _propsRef$current = propsRef.current, onResize2 = _propsRef$current.onResize, data = _propsRef$current.data;\n    var _target$getBoundingCl = target.getBoundingClientRect(), width = _target$getBoundingCl.width, height = _target$getBoundingCl.height;\n    var offsetWidth = target.offsetWidth, offsetHeight = target.offsetHeight;\n    var fixedWidth = Math.floor(width);\n    var fixedHeight = Math.floor(height);\n    if (sizeRef.current.width !== fixedWidth || sizeRef.current.height !== fixedHeight || sizeRef.current.offsetWidth !== offsetWidth || sizeRef.current.offsetHeight !== offsetHeight) {\n      var size = {\n        width: fixedWidth,\n        height: fixedHeight,\n        offsetWidth,\n        offsetHeight\n      };\n      sizeRef.current = size;\n      var mergedOffsetWidth = offsetWidth === Math.round(width) ? width : offsetWidth;\n      var mergedOffsetHeight = offsetHeight === Math.round(height) ? height : offsetHeight;\n      var sizeInfo = _objectSpread2$1(_objectSpread2$1({}, size), {}, {\n        offsetWidth: mergedOffsetWidth,\n        offsetHeight: mergedOffsetHeight\n      });\n      onCollectionResize === null || onCollectionResize === void 0 ? void 0 : onCollectionResize(sizeInfo, target, data);\n      if (onResize2) {\n        Promise.resolve().then(function() {\n          onResize2(sizeInfo, target);\n        });\n      }\n    }\n  }, []);\n  react__WEBPACK_IMPORTED_MODULE_0__.useEffect(function() {\n    var currentElement = findDOMNode(elementRef.current) || findDOMNode(wrapperRef.current);\n    if (currentElement && !disabled) {\n      observe(currentElement, onInternalResize);\n    }\n    return function() {\n      return unobserve(currentElement, onInternalResize);\n    };\n  }, [elementRef.current, disabled]);\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(DomWrapper, {\n    ref: wrapperRef\n  }, canRef ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(mergedChildren, {\n    ref: mergedRef\n  }) : mergedChildren);\n}\nvar INTERNAL_PREFIX_KEY = \"rc-observer-key\";\nfunction ResizeObserver(props) {\n  var children = props.children;\n  var childNodes = typeof children === \"function\" ? [children] : toArray$1(children);\n  return childNodes.map(function(child, index2) {\n    var key2 = (child === null || child === void 0 ? void 0 : child.key) || \"\".concat(INTERNAL_PREFIX_KEY, \"-\").concat(index2);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(SingleObserver, _extends$1({}, props, {\n      key: key2\n    }), child);\n  });\n}\nResizeObserver.Collection = Collection;\nvar HIDDEN_TEXTAREA_STYLE = \"\\n  min-height:0 !important;\\n  max-height:none !important;\\n  height:0 !important;\\n  visibility:hidden !important;\\n  overflow:hidden !important;\\n  position:absolute !important;\\n  z-index:-1000 !important;\\n  top:0 !important;\\n  right:0 !important\\n\";\nvar SIZING_STYLE = [\"letter-spacing\", \"line-height\", \"padding-top\", \"padding-bottom\", \"font-family\", \"font-weight\", \"font-size\", \"font-variant\", \"text-rendering\", \"text-transform\", \"width\", \"text-indent\", \"padding-left\", \"padding-right\", \"border-width\", \"box-sizing\", \"word-break\"];\nvar computedStyleCache = {};\nvar hiddenTextarea;\nfunction calculateNodeStyling(node) {\n  var useCache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n  var nodeRef = node.getAttribute(\"id\") || node.getAttribute(\"data-reactid\") || node.getAttribute(\"name\");\n  if (useCache && computedStyleCache[nodeRef]) {\n    return computedStyleCache[nodeRef];\n  }\n  var style2 = window.getComputedStyle(node);\n  var boxSizing = style2.getPropertyValue(\"box-sizing\") || style2.getPropertyValue(\"-moz-box-sizing\") || style2.getPropertyValue(\"-webkit-box-sizing\");\n  var paddingSize = parseFloat(style2.getPropertyValue(\"padding-bottom\")) + parseFloat(style2.getPropertyValue(\"padding-top\"));\n  var borderSize = parseFloat(style2.getPropertyValue(\"border-bottom-width\")) + parseFloat(style2.getPropertyValue(\"border-top-width\"));\n  var sizingStyle = SIZING_STYLE.map(function(name) {\n    return \"\".concat(name, \":\").concat(style2.getPropertyValue(name));\n  }).join(\";\");\n  var nodeInfo = {\n    sizingStyle,\n    paddingSize,\n    borderSize,\n    boxSizing\n  };\n  if (useCache && nodeRef) {\n    computedStyleCache[nodeRef] = nodeInfo;\n  }\n  return nodeInfo;\n}\nfunction calculateNodeHeight(uiTextNode) {\n  var useCache = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n  var minRows = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;\n  var maxRows = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement(\"textarea\");\n    hiddenTextarea.setAttribute(\"tab-index\", \"-1\");\n    hiddenTextarea.setAttribute(\"aria-hidden\", \"true\");\n    document.body.appendChild(hiddenTextarea);\n  }\n  if (uiTextNode.getAttribute(\"wrap\")) {\n    hiddenTextarea.setAttribute(\"wrap\", uiTextNode.getAttribute(\"wrap\"));\n  } else {\n    hiddenTextarea.removeAttribute(\"wrap\");\n  }\n  var _calculateNodeStyling = calculateNodeStyling(uiTextNode, useCache), paddingSize = _calculateNodeStyling.paddingSize, borderSize = _calculateNodeStyling.borderSize, boxSizing = _calculateNodeStyling.boxSizing, sizingStyle = _calculateNodeStyling.sizingStyle;\n  hiddenTextarea.setAttribute(\"style\", \"\".concat(sizingStyle, \";\").concat(HIDDEN_TEXTAREA_STYLE));\n  hiddenTextarea.value = uiTextNode.value || uiTextNode.placeholder || \"\";\n  var minHeight = Number.MIN_SAFE_INTEGER;\n  var maxHeight = Number.MAX_SAFE_INTEGER;\n  var height = hiddenTextarea.scrollHeight;\n  var overflowY;\n  if (boxSizing === \"border-box\") {\n    height += borderSize;\n  } else if (boxSizing === \"content-box\") {\n    height -= paddingSize;\n  }\n  if (minRows !== null || maxRows !== null) {\n    hiddenTextarea.value = \" \";\n    var singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n    if (minRows !== null) {\n      minHeight = singleRowHeight * minRows;\n      if (boxSizing === \"border-box\") {\n        minHeight = minHeight + paddingSize + borderSize;\n      }\n      height = Math.max(minHeight, height);\n    }\n    if (maxRows !== null) {\n      maxHeight = singleRowHeight * maxRows;\n      if (boxSizing === \"border-box\") {\n        maxHeight = maxHeight + paddingSize + borderSize;\n      }\n      overflowY = height > maxHeight ? \"\" : \"hidden\";\n      height = Math.min(maxHeight, height);\n    }\n  }\n  return {\n    height,\n    minHeight,\n    maxHeight,\n    overflowY,\n    resize: \"none\"\n  };\n}\nvar shallowequal = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n  if (ret !== void 0) {\n    return !!ret;\n  }\n  if (objA === objB) {\n    return true;\n  }\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key2 = keysA[idx];\n    if (!bHasOwnProperty(key2)) {\n      return false;\n    }\n    var valueA = objA[key2];\n    var valueB = objB[key2];\n    ret = compare ? compare.call(compareContext, valueA, valueB, key2) : void 0;\n    if (ret === false || ret === void 0 && valueA !== valueB) {\n      return false;\n    }\n  }\n  return true;\n};\nvar RESIZE_STATUS;\n(function(RESIZE_STATUS2) {\n  RESIZE_STATUS2[RESIZE_STATUS2[\"NONE\"] = 0] = \"NONE\";\n  RESIZE_STATUS2[RESIZE_STATUS2[\"RESIZING\"] = 1] = \"RESIZING\";\n  RESIZE_STATUS2[RESIZE_STATUS2[\"RESIZED\"] = 2] = \"RESIZED\";\n})(RESIZE_STATUS || (RESIZE_STATUS = {}));\nvar ResizableTextArea = /* @__PURE__ */ function(_React$Component) {\n  _inherits(ResizableTextArea2, _React$Component);\n  var _super = _createSuper(ResizableTextArea2);\n  function ResizableTextArea2(props) {\n    var _this;\n    _classCallCheck(this, ResizableTextArea2);\n    _this = _super.call(this, props);\n    _this.nextFrameActionId = void 0;\n    _this.resizeFrameId = void 0;\n    _this.textArea = void 0;\n    _this.saveTextArea = function(textArea) {\n      _this.textArea = textArea;\n    };\n    _this.handleResize = function(size) {\n      var resizeStatus = _this.state.resizeStatus;\n      var _this$props = _this.props, autoSize = _this$props.autoSize, onResize2 = _this$props.onResize;\n      if (resizeStatus !== RESIZE_STATUS.NONE) {\n        return;\n      }\n      if (typeof onResize2 === \"function\") {\n        onResize2(size);\n      }\n      if (autoSize) {\n        _this.resizeOnNextFrame();\n      }\n    };\n    _this.resizeOnNextFrame = function() {\n      cancelAnimationFrame(_this.nextFrameActionId);\n      _this.nextFrameActionId = requestAnimationFrame(_this.resizeTextarea);\n    };\n    _this.resizeTextarea = function() {\n      var autoSize = _this.props.autoSize;\n      if (!autoSize || !_this.textArea) {\n        return;\n      }\n      var minRows = autoSize.minRows, maxRows = autoSize.maxRows;\n      var textareaStyles = calculateNodeHeight(_this.textArea, false, minRows, maxRows);\n      _this.setState({\n        textareaStyles,\n        resizeStatus: RESIZE_STATUS.RESIZING\n      }, function() {\n        cancelAnimationFrame(_this.resizeFrameId);\n        _this.resizeFrameId = requestAnimationFrame(function() {\n          _this.setState({\n            resizeStatus: RESIZE_STATUS.RESIZED\n          }, function() {\n            _this.resizeFrameId = requestAnimationFrame(function() {\n              _this.setState({\n                resizeStatus: RESIZE_STATUS.NONE\n              });\n              _this.fixFirefoxAutoScroll();\n            });\n          });\n        });\n      });\n    };\n    _this.renderTextArea = function() {\n      var _this$props2 = _this.props, _this$props2$prefixCl = _this$props2.prefixCls, prefixCls = _this$props2$prefixCl === void 0 ? \"rc-textarea\" : _this$props2$prefixCl, autoSize = _this$props2.autoSize, onResize2 = _this$props2.onResize, className = _this$props2.className, disabled = _this$props2.disabled;\n      var _this$state = _this.state, textareaStyles = _this$state.textareaStyles, resizeStatus = _this$state.resizeStatus;\n      var otherProps = omit(_this.props, [\"prefixCls\", \"onPressEnter\", \"autoSize\", \"defaultValue\", \"onResize\"]);\n      var cls = classNames(prefixCls, className, _defineProperty$1({}, \"\".concat(prefixCls, \"-disabled\"), disabled));\n      if (\"value\" in otherProps) {\n        otherProps.value = otherProps.value || \"\";\n      }\n      var style2 = _objectSpread2$1(_objectSpread2$1(_objectSpread2$1({}, _this.props.style), textareaStyles), resizeStatus === RESIZE_STATUS.RESIZING ? {\n        overflowX: \"hidden\",\n        overflowY: \"hidden\"\n      } : null);\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResizeObserver, {\n        onResize: _this.handleResize,\n        disabled: !(autoSize || onResize2)\n      }, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"textarea\", _extends$1({}, otherProps, {\n        className: cls,\n        style: style2,\n        ref: _this.saveTextArea\n      })));\n    };\n    _this.state = {\n      textareaStyles: {},\n      resizeStatus: RESIZE_STATUS.NONE\n    };\n    return _this;\n  }\n  _createClass(ResizableTextArea2, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.value !== this.props.value || !shallowequal(prevProps.autoSize, this.props.autoSize)) {\n        this.resizeTextarea();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      cancelAnimationFrame(this.nextFrameActionId);\n      cancelAnimationFrame(this.resizeFrameId);\n    }\n  }, {\n    key: \"fixFirefoxAutoScroll\",\n    value: function fixFirefoxAutoScroll() {\n      try {\n        if (document.activeElement === this.textArea) {\n          var currentStart = this.textArea.selectionStart;\n          var currentEnd = this.textArea.selectionEnd;\n          this.textArea.setSelectionRange(currentStart, currentEnd);\n        }\n      } catch (e2) {\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.renderTextArea();\n    }\n  }]);\n  return ResizableTextArea2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar TextArea$2 = /* @__PURE__ */ function(_React$Component) {\n  _inherits(TextArea2, _React$Component);\n  var _super = _createSuper(TextArea2);\n  function TextArea2(props) {\n    var _this;\n    _classCallCheck(this, TextArea2);\n    _this = _super.call(this, props);\n    _this.resizableTextArea = void 0;\n    _this.focus = function() {\n      _this.resizableTextArea.textArea.focus();\n    };\n    _this.saveTextArea = function(resizableTextArea) {\n      _this.resizableTextArea = resizableTextArea;\n    };\n    _this.handleChange = function(e2) {\n      var onChange = _this.props.onChange;\n      _this.setValue(e2.target.value, function() {\n        _this.resizableTextArea.resizeTextarea();\n      });\n      if (onChange) {\n        onChange(e2);\n      }\n    };\n    _this.handleKeyDown = function(e2) {\n      var _this$props = _this.props, onPressEnter = _this$props.onPressEnter, onKeyDown = _this$props.onKeyDown;\n      if (e2.keyCode === 13 && onPressEnter) {\n        onPressEnter(e2);\n      }\n      if (onKeyDown) {\n        onKeyDown(e2);\n      }\n    };\n    var value = typeof props.value === \"undefined\" || props.value === null ? props.defaultValue : props.value;\n    _this.state = {\n      value\n    };\n    return _this;\n  }\n  _createClass(TextArea2, [{\n    key: \"setValue\",\n    value: function setValue2(value, callback) {\n      if (!(\"value\" in this.props)) {\n        this.setState({\n          value\n        }, callback);\n      }\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.resizableTextArea.textArea.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ResizableTextArea, _extends$1({}, this.props, {\n        value: this.state.value,\n        onKeyDown: this.handleKeyDown,\n        onChange: this.handleChange,\n        ref: this.saveTextArea\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps) {\n      if (\"value\" in nextProps) {\n        return {\n          value: nextProps.value\n        };\n      }\n      return null;\n    }\n  }]);\n  return TextArea2;\n}(react__WEBPACK_IMPORTED_MODULE_0__.Component);\nvar __rest$1 = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nfunction fixEmojiLength(value, maxLength) {\n  return _toConsumableArray(value || \"\").slice(0, maxLength).join(\"\");\n}\nfunction setTriggerValue(isCursorInEnd, preValue, triggerValue, maxLength) {\n  var newTriggerValue = triggerValue;\n  if (isCursorInEnd) {\n    newTriggerValue = fixEmojiLength(triggerValue, maxLength);\n  } else if (_toConsumableArray(preValue || \"\").length < triggerValue.length && _toConsumableArray(triggerValue || \"\").length > maxLength) {\n    newTriggerValue = preValue;\n  }\n  return newTriggerValue;\n}\nvar TextArea = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(_a, ref) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls, _a$bordered = _a.bordered, bordered = _a$bordered === void 0 ? true : _a$bordered, _a$showCount = _a.showCount, showCount = _a$showCount === void 0 ? false : _a$showCount, maxLength = _a.maxLength, className = _a.className, style2 = _a.style, customizeSize = _a.size, onCompositionStart = _a.onCompositionStart, onCompositionEnd = _a.onCompositionEnd, onChange = _a.onChange, props = __rest$1(_a, [\"prefixCls\", \"bordered\", \"showCount\", \"maxLength\", \"className\", \"style\", \"size\", \"onCompositionStart\", \"onCompositionEnd\", \"onChange\"]);\n  var _React$useContext = react__WEBPACK_IMPORTED_MODULE_0__.useContext(ConfigContext), getPrefixCls = _React$useContext.getPrefixCls, direction = _React$useContext.direction;\n  var size = react__WEBPACK_IMPORTED_MODULE_0__.useContext(SizeContext$1);\n  var innerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  var clearableInputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);\n  var _React$useState = react__WEBPACK_IMPORTED_MODULE_0__.useState(false), _React$useState2 = _slicedToArray(_React$useState, 2), compositing = _React$useState2[0], setCompositing = _React$useState2[1];\n  var oldCompositionValueRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();\n  var oldSelectionStartRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef(0);\n  var _useMergedState = useControlledState(props.defaultValue, {\n    value: props.value\n  }), _useMergedState2 = _slicedToArray(_useMergedState, 2), value = _useMergedState2[0], setValue2 = _useMergedState2[1];\n  var hidden = props.hidden;\n  var handleSetValue = function handleSetValue2(val2, callback) {\n    if (props.value === void 0) {\n      setValue2(val2);\n      callback === null || callback === void 0 ? void 0 : callback();\n    }\n  };\n  var hasMaxLength = Number(maxLength) > 0;\n  var onInternalCompositionStart = function onInternalCompositionStart2(e2) {\n    setCompositing(true);\n    oldCompositionValueRef.current = value;\n    oldSelectionStartRef.current = e2.currentTarget.selectionStart;\n    onCompositionStart === null || onCompositionStart === void 0 ? void 0 : onCompositionStart(e2);\n  };\n  var onInternalCompositionEnd = function onInternalCompositionEnd2(e2) {\n    var _a2;\n    setCompositing(false);\n    var triggerValue = e2.currentTarget.value;\n    if (hasMaxLength) {\n      var isCursorInEnd = oldSelectionStartRef.current >= maxLength + 1 || oldSelectionStartRef.current === ((_a2 = oldCompositionValueRef.current) === null || _a2 === void 0 ? void 0 : _a2.length);\n      triggerValue = setTriggerValue(isCursorInEnd, oldCompositionValueRef.current, triggerValue, maxLength);\n    }\n    if (triggerValue !== value) {\n      handleSetValue(triggerValue);\n      resolveOnChange(e2.currentTarget, e2, onChange, triggerValue);\n    }\n    onCompositionEnd === null || onCompositionEnd === void 0 ? void 0 : onCompositionEnd(e2);\n  };\n  var handleChange = function handleChange2(e2) {\n    var triggerValue = e2.target.value;\n    if (!compositing && hasMaxLength) {\n      var isCursorInEnd = e2.target.selectionStart >= maxLength + 1 || e2.target.selectionStart === triggerValue.length || !e2.target.selectionStart;\n      triggerValue = setTriggerValue(isCursorInEnd, value, triggerValue, maxLength);\n    }\n    handleSetValue(triggerValue);\n    resolveOnChange(e2.currentTarget, e2, onChange, triggerValue);\n  };\n  var handleReset = function handleReset2(e2) {\n    var _a2, _b;\n    handleSetValue(\"\", function() {\n      var _a3;\n      (_a3 = innerRef.current) === null || _a3 === void 0 ? void 0 : _a3.focus();\n    });\n    resolveOnChange((_b = (_a2 = innerRef.current) === null || _a2 === void 0 ? void 0 : _a2.resizableTextArea) === null || _b === void 0 ? void 0 : _b.textArea, e2, onChange);\n  };\n  var prefixCls = getPrefixCls(\"input\", customizePrefixCls);\n  react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle(ref, function() {\n    var _a2;\n    return {\n      resizableTextArea: (_a2 = innerRef.current) === null || _a2 === void 0 ? void 0 : _a2.resizableTextArea,\n      focus: function focus(option) {\n        var _a3, _b;\n        triggerFocus((_b = (_a3 = innerRef.current) === null || _a3 === void 0 ? void 0 : _a3.resizableTextArea) === null || _b === void 0 ? void 0 : _b.textArea, option);\n      },\n      blur: function blur() {\n        var _a3;\n        return (_a3 = innerRef.current) === null || _a3 === void 0 ? void 0 : _a3.blur();\n      }\n    };\n  });\n  var textArea = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(TextArea$2, _extends$1({}, omit(props, [\"allowClear\"]), {\n    className: classNames((_classNames = {}, _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-borderless\"), !bordered), _defineProperty$1(_classNames, className, className && !showCount), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-sm\"), size === \"small\" || customizeSize === \"small\"), _defineProperty$1(_classNames, \"\".concat(prefixCls, \"-lg\"), size === \"large\" || customizeSize === \"large\"), _classNames)),\n    style: showCount ? void 0 : style2,\n    prefixCls,\n    onCompositionStart: onInternalCompositionStart,\n    onChange: handleChange,\n    onCompositionEnd: onInternalCompositionEnd,\n    ref: innerRef\n  }));\n  var val = fixControlledValue(value);\n  if (!compositing && hasMaxLength && (props.value === null || props.value === void 0)) {\n    val = fixEmojiLength(val, maxLength);\n  }\n  var textareaNode = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ClearableLabeledInput$1, _extends$1({}, props, {\n    prefixCls,\n    direction,\n    inputType: \"text\",\n    value: val,\n    element: textArea,\n    handleReset,\n    ref: clearableInputRef,\n    bordered,\n    style: showCount ? void 0 : style2\n  }));\n  if (showCount) {\n    var valueLength = _toConsumableArray(val).length;\n    var dataCount = \"\";\n    if (_typeof$1(showCount) === \"object\") {\n      dataCount = showCount.formatter({\n        count: valueLength,\n        maxLength\n      });\n    } else {\n      dataCount = \"\".concat(valueLength).concat(hasMaxLength ? \" / \".concat(maxLength) : \"\");\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", {\n      hidden,\n      className: classNames(\"\".concat(prefixCls, \"-textarea\"), _defineProperty$1({}, \"\".concat(prefixCls, \"-textarea-rtl\"), direction === \"rtl\"), \"\".concat(prefixCls, \"-textarea-show-count\"), className),\n      style: style2,\n      \"data-count\": dataCount\n    }, textareaNode);\n  }\n  return textareaNode;\n});\nvar TextArea$1 = TextArea;\nvar EyeOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" } }] }, \"name\": \"eye\", \"theme\": \"outlined\" };\nvar EyeOutlinedSvg = EyeOutlined$2;\nvar EyeOutlined = function EyeOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: EyeOutlinedSvg\n  }));\n};\nEyeOutlined.displayName = \"EyeOutlined\";\nvar EyeOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(EyeOutlined);\nvar EyeInvisibleOutlined$2 = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z\" } }] }, \"name\": \"eye-invisible\", \"theme\": \"outlined\" };\nvar EyeInvisibleOutlinedSvg = EyeInvisibleOutlined$2;\nvar EyeInvisibleOutlined = function EyeInvisibleOutlined2(props, ref) {\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(AntdIcon, _objectSpread2$1(_objectSpread2$1({}, props), {}, {\n    ref,\n    icon: EyeInvisibleOutlinedSvg\n  }));\n};\nEyeInvisibleOutlined.displayName = \"EyeInvisibleOutlined\";\nvar EyeInvisibleOutlined$1 = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(EyeInvisibleOutlined);\nvar __rest = globalThis && globalThis.__rest || function(s, e2) {\n  var t2 = {};\n  for (var p2 in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p2) && e2.indexOf(p2) < 0)\n      t2[p2] = s[p2];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n    for (var i = 0, p2 = Object.getOwnPropertySymbols(s); i < p2.length; i++) {\n      if (e2.indexOf(p2[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p2[i]))\n        t2[p2[i]] = s[p2[i]];\n    }\n  return t2;\n};\nvar ActionMap = {\n  click: \"onClick\",\n  hover: \"onMouseOver\"\n};\nvar Password = /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.forwardRef(function(props, ref) {\n  var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false), _useState2 = _slicedToArray(_useState, 2), visible = _useState2[0], setVisible = _useState2[1];\n  var onVisibleChange = function onVisibleChange2() {\n    var disabled = props.disabled;\n    if (disabled) {\n      return;\n    }\n    setVisible(!visible);\n  };\n  var getIcon = function getIcon2(prefixCls) {\n    var _iconProps;\n    var action = props.action, _props$iconRender = props.iconRender, iconRender2 = _props$iconRender === void 0 ? function() {\n      return null;\n    } : _props$iconRender;\n    var iconTrigger = ActionMap[action] || \"\";\n    var icon = iconRender2(visible);\n    var iconProps = (_iconProps = {}, _defineProperty$1(_iconProps, iconTrigger, onVisibleChange), _defineProperty$1(_iconProps, \"className\", \"\".concat(prefixCls, \"-icon\")), _defineProperty$1(_iconProps, \"key\", \"passwordIcon\"), _defineProperty$1(_iconProps, \"onMouseDown\", function onMouseDown(e2) {\n      e2.preventDefault();\n    }), _defineProperty$1(_iconProps, \"onMouseUp\", function onMouseUp(e2) {\n      e2.preventDefault();\n    }), _iconProps);\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(/* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(icon) ? icon : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"span\", null, icon), iconProps);\n  };\n  var renderPassword = function renderPassword2(_ref) {\n    var getPrefixCls = _ref.getPrefixCls;\n    var className = props.className, customizePrefixCls = props.prefixCls, customizeInputPrefixCls = props.inputPrefixCls, size = props.size, visibilityToggle = props.visibilityToggle, restProps = __rest(props, [\"className\", \"prefixCls\", \"inputPrefixCls\", \"size\", \"visibilityToggle\"]);\n    var inputPrefixCls = getPrefixCls(\"input\", customizeInputPrefixCls);\n    var prefixCls = getPrefixCls(\"input-password\", customizePrefixCls);\n    var suffixIcon = visibilityToggle && getIcon(prefixCls);\n    var inputClassName = classNames(prefixCls, className, _defineProperty$1({}, \"\".concat(prefixCls, \"-\").concat(size), !!size));\n    var omittedProps = _extends$1(_extends$1({}, omit(restProps, [\"suffix\", \"iconRender\"])), {\n      type: visible ? \"text\" : \"password\",\n      className: inputClassName,\n      prefixCls: inputPrefixCls,\n      suffix: suffixIcon\n    });\n    if (size) {\n      omittedProps.size = size;\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(Input$1, _extends$1({\n      ref\n    }, omittedProps));\n  };\n  return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(ConfigConsumer, null, renderPassword);\n});\nPassword.defaultProps = {\n  action: \"click\",\n  visibilityToggle: true,\n  iconRender: function iconRender(visible) {\n    return visible ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EyeOutlined$1, null) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(EyeInvisibleOutlined$1, null);\n  }\n};\nPassword.displayName = \"Password\";\nvar Password$1 = Password;\nInput$1.Group = Group$2;\nInput$1.Search = Search$1;\nInput$1.TextArea = TextArea$1;\nInput$1.Password = Password$1;\nconst tagInput = \"_tagInput_16veo_1\";\nconst input = \"_input_16veo_1\";\nconst clear = \"_clear_16veo_5\";\nvar styles = {\n  tagInput,\n  input,\n  clear\n};\nvar jsxRuntime = { exports: {} };\nvar reactJsxRuntime_production_min = {};\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\nfunction toObject(val) {\n  if (val === null || val === void 0) {\n    throw new TypeError(\"Object.assign cannot be called with null or undefined\");\n  }\n  return Object(val);\n}\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    }\n    var test1 = new String(\"abc\");\n    test1[5] = \"de\";\n    if (Object.getOwnPropertyNames(test1)[0] === \"5\") {\n      return false;\n    }\n    var test2 = {};\n    for (var i = 0; i < 10; i++) {\n      test2[\"_\" + String.fromCharCode(i)] = i;\n    }\n    var order2 = Object.getOwnPropertyNames(test2).map(function(n2) {\n      return test2[n2];\n    });\n    if (order2.join(\"\") !== \"0123456789\") {\n      return false;\n    }\n    var test3 = {};\n    \"abcdefghijklmnopqrst\".split(\"\").forEach(function(letter) {\n      test3[letter] = letter;\n    });\n    if (Object.keys(Object.assign({}, test3)).join(\"\") !== \"abcdefghijklmnopqrst\") {\n      return false;\n    }\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nshouldUseNative() ? Object.assign : function(target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n    for (var key2 in from) {\n      if (hasOwnProperty.call(from, key2)) {\n        to[key2] = from[key2];\n      }\n    }\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n  return to;\n};\n/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar f = (react__WEBPACK_IMPORTED_MODULE_0___default()), g = 60103;\nreactJsxRuntime_production_min.Fragment = 60107;\nif (typeof Symbol === \"function\" && Symbol.for) {\n  var h = Symbol.for;\n  g = h(\"react.element\");\n  reactJsxRuntime_production_min.Fragment = h(\"react.fragment\");\n}\nvar m = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, n = Object.prototype.hasOwnProperty, p = { key: true, ref: true, __self: true, __source: true };\nfunction q(c2, a, k2) {\n  var b2, d2 = {}, e2 = null, l2 = null;\n  k2 !== void 0 && (e2 = \"\" + k2);\n  a.key !== void 0 && (e2 = \"\" + a.key);\n  a.ref !== void 0 && (l2 = a.ref);\n  for (b2 in a)\n    n.call(a, b2) && !p.hasOwnProperty(b2) && (d2[b2] = a[b2]);\n  if (c2 && c2.defaultProps)\n    for (b2 in a = c2.defaultProps, a)\n      d2[b2] === void 0 && (d2[b2] = a[b2]);\n  return { $$typeof: g, type: c2, key: e2, ref: l2, props: d2, _owner: m.current };\n}\nreactJsxRuntime_production_min.jsx = q;\nreactJsxRuntime_production_min.jsxs = q;\n{\n  jsxRuntime.exports = reactJsxRuntime_production_min;\n}\nconst jsx = jsxRuntime.exports.jsx;\nconst jsxs = jsxRuntime.exports.jsxs;\nconst TagInput = (_a) => {\n  var _b = _a, {\n    value = [],\n    onChange,\n    placeholder\n  } = _b, props = __objRest(_b, [\n    \"value\",\n    \"onChange\",\n    \"placeholder\"\n  ]);\n  const [content, setContent] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)();\n  const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n  const handleDelete = (tag) => {\n    const newArr = value.filter((i) => i !== tag);\n    onChange(newArr);\n    message.destroy();\n  };\n  const handleChange = (e2) => {\n    setContent(e2.target.value);\n  };\n  const handleBlur = () => {\n    if (content) {\n      if (value.includes(content)) {\n        message.warn(`[tag: ${content}] already exists`);\n        return;\n      }\n      onChange([...value, content]);\n      setContent(\"\");\n    }\n  };\n  const handleKeyPress = (e2) => e2.key === \"Enter\" && e2.preventDefault();\n  const handleKeyUp = (e2) => {\n    if (e2.key === \"Enter\" && content) {\n      if (value.includes(content)) {\n        message.warn(`[tag: ${content}] already exists`);\n        return;\n      }\n      onChange([...value, content]);\n      setContent(\"\");\n    }\n  };\n  const handleClear = () => {\n    onChange([]);\n  };\n  return /* @__PURE__ */ jsxs(\"div\", __spreadProps(__spreadValues({\n    className: `${styles.tagInput} ant-input`,\n    onClick: () => {\n      var _a2;\n      return (_a2 = inputRef.current) == null ? void 0 : _a2.focus();\n    }\n  }, props), {\n    children: [value.map((item) => item.length > 20 ? /* @__PURE__ */ jsx(Tooltip$1, {\n      title: item,\n      children: /* @__PURE__ */ jsx(Tag$1, {\n        closable: true,\n        onClose: () => handleDelete(item),\n        children: `${item.slice(0, 20)}...`\n      })\n    }, item) : /* @__PURE__ */ jsx(Tag$1, {\n      closable: true,\n      onClose: () => handleDelete(item),\n      children: item\n    }, item)), /* @__PURE__ */ jsx(Input$1, {\n      ref: inputRef,\n      bordered: false,\n      placeholder: !value.length ? placeholder : \"\",\n      className: styles.input,\n      value: content,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      onKeyPress: handleKeyPress,\n      onKeyUp: handleKeyUp\n    }), /* @__PURE__ */ jsx(\"span\", {\n      className: `${styles.clear} ant-input-suffix`,\n      onClick: handleClear,\n      children: /* @__PURE__ */ jsx(\"span\", {\n        role: \"button\",\n        \"aria-label\": \"close-circle\",\n        className: \"anticon anticon-close-circle ant-input-clear-icon\",\n        children: /* @__PURE__ */ jsx(\"svg\", {\n          viewBox: \"64 64 896 896\",\n          focusable: \"false\",\n          className: \"\",\n          \"data-icon\": \"close-circle\",\n          width: \"1em\",\n          height: \"1em\",\n          fill: \"currentColor\",\n          \"aria-hidden\": \"true\",\n          children: /* @__PURE__ */ jsx(\"path\", {\n            d: \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm165.4 618.2l-66-.3L512 563.4l-99.3 118.4-66.1.3c-4.4 0-8-3.5-8-8 0-1.9.7-3.7 1.9-5.2l130.1-155L340.5 359a8.32 8.32 0 01-1.9-5.2c0-4.4 3.6-8 8-8l66.1.3L512 464.6l99.3-118.4 66-.3c4.4 0 8 3.5 8 8 0 1.9-.7 3.7-1.9 5.2L553.5 514l130 155c1.2 1.5 1.9 3.3 1.9 5.2 0 4.4-3.6 8-8 8z\"\n          })\n        })\n      })\n    })]\n  }));\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/antd-tag-input/dist/index.es.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/antd-tag-input/dist/style.css":
/*!****************************************************!*\
  !*** ./node_modules/antd-tag-input/dist/style.css ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"9a7c352604e4\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvYW50ZC10YWctaW5wdXQvZGlzdC9zdHlsZS5jc3MiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLGlFQUFlLGNBQWM7QUFDN0IsSUFBSSxLQUFVLEVBQUUsRUFBdUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90ZWNod2F2ZS1uZXh0anMvLi9ub2RlX21vZHVsZXMvYW50ZC10YWctaW5wdXQvZGlzdC9zdHlsZS5jc3M/Y2U4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcIjlhN2MzNTI2MDRlNFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/antd-tag-input/dist/style.css\n");

/***/ })

};
;